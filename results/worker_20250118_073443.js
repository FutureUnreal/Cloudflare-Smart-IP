// IP池配置 - 更新时间: 2025-01-18T07:34:41.912082
const IP_POOLS = {
  "CHINA_TELECOM": {
    "EAST": [
      "172.67.141.112",
      "172.66.217.140",
      "172.65.229.151",
      "104.17.196.238",
      "104.16.249.36",
      "104.17.95.156",
      "172.67.118.85",
      "104.20.66.29",
      "104.25.148.226"
    ],
    "SOUTH": [
      "104.18.25.105",
      "104.22.56.57",
      "172.65.5.96",
      "104.18.60.38",
      "104.17.240.239",
      "104.17.197.22",
      "104.17.224.164",
      "104.17.106.201",
      "104.19.176.84",
      "172.66.161.249",
      "104.25.218.111",
      "172.66.163.23",
      "172.66.130.235",
      "104.24.88.249"
    ],
    "NORTH": [
      "104.21.107.221",
      "172.65.13.68",
      "172.66.0.111",
      "104.27.110.17",
      "104.25.63.27",
      "104.16.152.169",
      "104.17.180.132",
      "104.16.175.31",
      "104.18.191.248",
      "104.17.89.102",
      "104.20.168.63",
      "104.20.11.202",
      "172.67.93.42"
    ],
    "CENTRAL": [
      "104.18.56.25",
      "104.17.74.182",
      "104.16.38.175",
      "104.21.125.110",
      "188.114.99.213",
      "104.21.83.163",
      "172.67.76.113",
      "172.66.42.16",
      "104.16.13.195",
      "172.65.176.191",
      "104.16.94.67",
      "104.16.190.246",
      "104.25.25.62",
      "104.25.149.38",
      "104.24.37.236",
      "104.20.183.27",
      "104.25.49.181",
      "104.20.125.53"
    ],
    "SOUTHWEST": [
      "104.21.238.59",
      "104.19.246.99",
      "104.17.18.196",
      "172.67.148.138",
      "104.18.247.158",
      "104.19.194.195",
      "104.16.92.84",
      "172.65.166.105",
      "104.16.132.79",
      "104.16.93.101",
      "104.17.29.184",
      "104.24.64.85",
      "104.27.124.172",
      "172.65.130.209",
      "104.20.87.100",
      "104.24.150.190",
      "104.19.71.100"
    ],
    "NORTHWEST": [
      "104.24.192.111",
      "104.18.230.28",
      "104.22.2.105",
      "104.20.167.41",
      "172.65.75.249",
      "172.65.162.122"
    ],
    "NORTHEAST": [
      "172.67.208.214",
      "172.67.133.42",
      "172.67.196.219",
      "104.16.39.112",
      "172.65.98.255",
      "1.1.1.247",
      "104.19.106.71",
      "104.22.47.202",
      "104.20.179.96",
      "104.20.53.7"
    ]
  },
  "CHINA_UNICOM": {
    "EAST": [
      "172.67.211.80",
      "172.67.196.219",
      "104.17.240.239",
      "104.25.63.27",
      "104.17.197.22",
      "104.22.2.105",
      "104.25.149.38",
      "172.66.130.235",
      "104.20.183.27"
    ],
    "SOUTH": [
      "172.67.233.108",
      "104.21.107.221",
      "104.19.107.158",
      "104.16.174.223",
      "104.25.191.251",
      "104.16.142.13",
      "104.19.246.99",
      "104.21.239.221",
      "104.19.194.195",
      "104.17.196.238",
      "172.65.98.255",
      "104.18.230.28",
      "104.16.249.36",
      "104.17.95.156",
      "172.66.161.249",
      "104.16.93.101",
      "104.17.89.102",
      "104.24.88.249",
      "104.20.125.53"
    ],
    "NORTH": [
      "172.67.46.251",
      "104.18.25.105",
      "104.17.18.196",
      "104.19.60.17",
      "104.17.58.98",
      "104.20.136.218",
      "172.67.148.138",
      "104.19.208.252",
      "172.65.229.151",
      "172.67.76.113",
      "104.20.66.29",
      "172.65.130.209"
    ],
    "CENTRAL": [
      "172.67.133.42",
      "172.65.13.68",
      "172.65.191.147",
      "104.17.194.1",
      "172.66.217.140",
      "104.20.18.33",
      "104.20.26.129",
      "172.65.166.105",
      "172.66.42.16",
      "104.17.180.132",
      "104.16.175.31",
      "172.65.176.191",
      "104.16.132.79",
      "104.24.37.236"
    ],
    "SOUTHWEST": [
      "172.67.208.214",
      "104.25.223.34",
      "104.24.166.47",
      "172.67.163.182",
      "172.66.133.55",
      "172.65.131.68",
      "104.20.217.250",
      "172.67.214.234",
      "104.17.121.244",
      "1.1.1.247",
      "104.19.106.71",
      "104.22.47.202",
      "104.20.11.202",
      "104.25.148.226",
      "104.19.71.100"
    ],
    "NORTHWEST": [
      "172.65.173.230",
      "104.22.13.99",
      "172.67.128.1",
      "172.66.0.111",
      "104.24.95.10",
      "104.21.83.163",
      "104.25.98.31",
      "104.18.60.38",
      "104.18.191.248",
      "104.16.94.67",
      "104.20.179.96",
      "172.67.93.42",
      "104.25.49.181",
      "172.65.162.122"
    ],
    "NORTHEAST": [
      "104.16.39.112",
      "104.20.226.176",
      "104.19.176.84"
    ]
  },
  "CHINA_MOBILE": {
    "EAST": [
      "172.67.233.108",
      "104.16.25.14",
      "104.20.226.176",
      "104.20.26.129"
    ],
    "SOUTH": [
      "172.67.226.137",
      "104.19.60.17",
      "104.17.58.98",
      "104.17.80.225",
      "172.67.46.251",
      "172.65.191.147",
      "104.16.13.195"
    ],
    "NORTH": [
      "104.19.107.158",
      "188.114.99.213",
      "104.17.224.164",
      "104.24.64.85"
    ],
    "CENTRAL": [
      "104.21.238.59",
      "104.21.239.221",
      "104.20.136.218",
      "172.66.133.55",
      "104.27.110.17",
      "104.16.92.84"
    ],
    "SOUTHWEST": [
      "172.67.163.182",
      "104.17.74.182",
      "104.16.38.175",
      "104.19.244.214",
      "172.67.141.112",
      "104.27.124.172",
      "104.20.168.63",
      "104.25.218.111"
    ],
    "NORTHWEST": [
      "104.17.29.184",
      "172.67.118.85",
      "172.66.163.23"
    ],
    "NORTHEAST": [
      "104.25.191.251",
      "172.67.214.234",
      "172.65.5.96",
      "172.67.128.1",
      "104.16.152.169",
      "104.25.25.62",
      "104.24.150.190"
    ]
  }
};

// ASN到运营商的映射
const ASN_TO_ISP = {
  // 电信
  '4134': 'CHINA_TELECOM',
  '4809': 'CHINA_TELECOM',
  // 联通
  '4837': 'CHINA_UNICOM', 
  '9929': 'CHINA_UNICOM',
  '4808': 'CHINA_UNICOM',
  // 移动
  '9808': 'CHINA_MOBILE',
  '56040': 'CHINA_MOBILE'
};

// 区域列表
const REGIONS = [
  'EAST',
  'NORTH', 
  'SOUTH',
  'CENTRAL',
  'SOUTHWEST',
  'NORTHWEST',
  'NORTHEAST'
];

// 错误类型定义
const ERRORS = {
  NO_IP: '无可用IP',
  UNKNOWN_ISP: '未知运营商',
  INVALID_REGION: '无效区域'
};

addEventListener('fetch', event => {
  event.respondWith(handleRequest(event.request));
});

async function handleRequest(request) {
  const clientInfo = {
    ip: request.headers.get('CF-Connecting-IP'),
    asn: request.cf.asn.toString(),
    region: request.cf.region,
    colo: request.cf.colo
  };

  try {
    const isp = determineISP(clientInfo.asn);
    const region = determineRegion(clientInfo);
    const bestIP = await selectBestIP(isp, region);

    return new Response(JSON.stringify({
      status: 'success',
      client: clientInfo,
      result: {
        isp: isp,
        region: region,
        ip: bestIP
      }
    }), {
      headers: {
        'content-type': 'application/json',
        'cache-control': 'max-age=300'
      }
    });
  } catch (error) {
    const status = error.message === ERRORS.NO_IP ? 503 : 500;
    return new Response(JSON.stringify({
      status: 'error',
      message: error.message,
      client: clientInfo
    }), {
      status: status,
      headers: { 'content-type': 'application/json' }
    });
  }
}

function determineISP(asn) {
  const isp = ASN_TO_ISP[asn];
  if (!isp) {
    throw new Error(ERRORS.UNKNOWN_ISP);
  }
  return isp;
}

function determineRegion(clientInfo) {
  const regionMap = {
    'SHA': 'EAST',   // 上海
    'BEJ': 'NORTH',  // 北京
    'GUD': 'SOUTH',  // 广东
    'HUB': 'CENTRAL' // 湖北
  };

  if (clientInfo.region && regionMap[clientInfo.region]) {
    return regionMap[clientInfo.region];
  }

  // 默认返回华东
  return 'EAST';
}

async function selectBestIP(isp, region) {
  let candidates = [];

  // 1. 优先选择同ISP同区域的IP
  if (IP_POOLS[isp] && IP_POOLS[isp][region] && IP_POOLS[isp][region].length > 0) {
    candidates = IP_POOLS[isp][region];
  }

  // 2. 如果没有找到,尝试同ISP其他区域
  if (candidates.length === 0 && IP_POOLS[isp]) {
    for (const r of REGIONS) {
      if (r !== region && IP_POOLS[isp][r] && IP_POOLS[isp][r].length > 0) {
        candidates = candidates.concat(IP_POOLS[isp][r]);
      }
    }
  }

  // 3. 如果还是没有,使用其他ISP的IP
  if (candidates.length === 0) {
    for (const otherIsp in IP_POOLS) {
      if (otherIsp !== isp && IP_POOLS[otherIsp][region] && IP_POOLS[otherIsp][region].length > 0) {
        candidates = candidates.concat(IP_POOLS[otherIsp][region]);
      }
    }
  }

  // 4. 如果还是没有找到可用IP,则抛出错误
  if (candidates.length === 0) {
    throw new Error(ERRORS.NO_IP);
  }

  // 随机选择一个IP,避免单点故障
  return candidates[Math.floor(Math.random() * candidates.length)];
}