// IP池配置 - 更新时间: 2024-12-08T07:19:50.040518
const IP_POOLS = {
  "CHINA_TELECOM": {
    "EAST": [
      "104.17.89.190",
      "104.16.189.24",
      "104.17.131.8",
      "104.16.145.236",
      "104.17.61.139",
      "172.65.1.25",
      "104.21.48.66",
      "104.27.108.65",
      "104.27.88.110",
      "104.20.198.120",
      "104.21.8.36",
      "104.20.11.160",
      "104.17.20.167"
    ],
    "SOUTH": [
      "104.19.239.12",
      "172.65.88.90",
      "172.67.234.36",
      "104.21.24.175",
      "104.22.78.48",
      "104.24.166.196",
      "172.67.82.45",
      "172.65.113.190",
      "172.67.87.139",
      "104.20.70.98",
      "104.20.232.183"
    ],
    "NORTH": [
      "104.21.37.224",
      "104.21.75.248",
      "104.19.42.211",
      "103.21.246.185",
      "104.22.52.109",
      "104.24.52.66",
      "104.16.153.118",
      "104.19.205.5",
      "172.65.148.210"
    ],
    "CENTRAL": [
      "104.18.180.22",
      "104.16.11.245",
      "104.16.168.158",
      "172.65.244.210",
      "104.16.142.65",
      "104.20.100.159",
      "172.65.58.167",
      "104.16.235.237",
      "104.21.111.186",
      "172.67.184.3",
      "172.66.207.9",
      "104.20.130.89"
    ],
    "SOUTHWEST": [
      "104.18.17.25",
      "104.16.210.143",
      "104.19.0.166",
      "172.67.23.130",
      "104.19.96.110",
      "104.27.91.17",
      "104.20.160.12",
      "104.24.228.108",
      "172.65.101.25"
    ],
    "NORTHWEST": [
      "104.17.7.238",
      "104.17.237.134",
      "104.16.8.21",
      "172.65.31.160",
      "172.65.53.192",
      "104.19.108.2",
      "104.18.148.123",
      "104.18.55.129",
      "172.65.94.196",
      "172.65.192.30",
      "172.67.28.201",
      "172.65.68.231",
      "104.27.114.62",
      "104.25.66.190",
      "104.25.169.165",
      "104.22.10.93",
      "104.20.3.203"
    ],
    "NORTHEAST": [
      "104.18.52.22",
      "104.17.11.100",
      "104.19.198.105",
      "172.65.212.142",
      "104.17.199.131",
      "104.21.36.61",
      "104.21.118.213",
      "104.19.189.116",
      "104.17.76.0",
      "104.18.33.240",
      "104.22.20.149",
      "104.25.8.99",
      "104.18.216.176",
      "104.27.83.114",
      "104.20.237.9",
      "104.22.75.11",
      "104.16.196.69"
    ]
  },
  "CHINA_UNICOM": {
    "EAST": [
      "104.16.189.24",
      "104.16.142.65",
      "104.21.49.118",
      "104.19.42.211",
      "104.25.115.241",
      "104.16.93.85",
      "172.67.10.205",
      "172.65.180.234",
      "172.67.82.45",
      "172.65.88.90"
    ],
    "SOUTH": [
      "104.27.92.166",
      "104.21.37.224",
      "104.17.89.190",
      "104.20.80.213",
      "104.24.212.184",
      "172.67.226.23",
      "104.17.237.134",
      "104.18.17.25",
      "104.16.153.128",
      "104.20.198.120",
      "104.19.96.110",
      "104.17.76.0",
      "104.16.210.143",
      "104.22.78.48",
      "104.20.70.98",
      "104.27.83.114"
    ],
    "NORTH": [
      "172.67.76.140",
      "172.66.192.189",
      "104.20.245.21",
      "172.67.219.107",
      "172.67.234.36",
      "104.24.52.66",
      "104.20.160.12",
      "104.20.237.9"
    ],
    "CENTRAL": [
      "104.17.232.51",
      "104.25.106.15",
      "104.17.55.184",
      "104.21.36.61",
      "104.20.100.159",
      "104.18.148.123",
      "104.17.20.167",
      "172.65.101.25"
    ],
    "SOUTHWEST": [
      "104.25.88.203",
      "104.19.142.140",
      "104.20.190.84",
      "104.21.118.213",
      "104.19.108.2",
      "172.65.53.192",
      "104.25.182.232",
      "104.20.98.30",
      "172.65.58.167",
      "104.18.55.129",
      "104.18.216.176",
      "104.20.130.89",
      "104.16.196.69"
    ],
    "NORTHWEST": [
      "104.16.92.113",
      "104.18.180.22",
      "104.17.61.139",
      "104.17.11.100",
      "104.17.131.8",
      "104.19.74.70",
      "104.19.239.12",
      "172.65.22.44",
      "104.20.189.9",
      "104.21.62.214",
      "104.19.189.116",
      "104.18.52.22",
      "104.18.33.240",
      "104.17.146.187",
      "172.65.148.210",
      "104.27.91.17",
      "104.24.166.196",
      "104.24.228.108"
    ],
    "NORTHEAST": [
      "172.66.161.224",
      "104.27.44.50",
      "104.24.29.11",
      "172.65.244.210",
      "104.27.108.65",
      "104.19.198.105",
      "104.19.204.64",
      "104.25.232.77",
      "104.16.11.245",
      "104.20.232.183",
      "104.21.75.248"
    ]
  },
  "CHINA_MOBILE": {
    "EAST": [
      "104.20.98.30",
      "104.17.199.131",
      "172.67.23.130",
      "104.16.235.237"
    ],
    "SOUTH": [
      "104.24.143.49",
      "104.25.81.12",
      "104.17.7.238",
      "104.21.49.118",
      "104.25.88.203",
      "104.20.189.9",
      "104.21.62.214",
      "104.24.29.11",
      "104.19.205.5",
      "172.65.192.30"
    ],
    "NORTH": [
      "172.67.76.140",
      "104.27.92.166",
      "104.20.245.21",
      "104.19.142.140",
      "104.24.212.184",
      "104.22.20.149",
      "104.25.232.77",
      "172.67.28.201"
    ],
    "CENTRAL": [
      "104.19.221.21",
      "172.65.1.25",
      "104.19.74.70",
      "172.66.192.189",
      "172.66.161.224",
      "104.25.11.21",
      "104.16.153.118",
      "104.16.168.158",
      "172.65.94.196",
      "172.67.184.3"
    ],
    "SOUTHWEST": [
      "104.16.145.236",
      "172.67.226.23",
      "104.16.93.85",
      "172.65.180.234",
      "172.66.207.9",
      "104.22.75.11"
    ],
    "NORTHWEST": [
      "104.22.52.109",
      "104.19.0.166",
      "172.65.31.160",
      "104.27.62.228",
      "104.22.10.93"
    ],
    "NORTHEAST": [
      "104.19.249.104",
      "104.25.153.148",
      "104.21.24.175",
      "104.21.61.19",
      "172.67.235.27",
      "172.65.113.190",
      "172.67.87.139",
      "104.21.8.36",
      "104.25.66.190"
    ]
  }
};

// ASN到运营商的映射
const ASN_TO_ISP = {
  // 电信
  '4134': 'CHINA_TELECOM',
  '4809': 'CHINA_TELECOM',
  // 联通
  '4837': 'CHINA_UNICOM', 
  '9929': 'CHINA_UNICOM',
  '4808': 'CHINA_UNICOM',
  // 移动
  '9808': 'CHINA_MOBILE',
  '56040': 'CHINA_MOBILE'
};

// 区域列表
const REGIONS = [
  'EAST',
  'NORTH', 
  'SOUTH',
  'CENTRAL',
  'SOUTHWEST',
  'NORTHWEST',
  'NORTHEAST'
];

// 错误类型定义
const ERRORS = {
  NO_IP: '无可用IP',
  UNKNOWN_ISP: '未知运营商',
  INVALID_REGION: '无效区域'
};

addEventListener('fetch', event => {
  event.respondWith(handleRequest(event.request));
});

async function handleRequest(request) {
  const clientInfo = {
    ip: request.headers.get('CF-Connecting-IP'),
    asn: request.cf.asn.toString(),
    region: request.cf.region,
    colo: request.cf.colo
  };

  try {
    const isp = determineISP(clientInfo.asn);
    const region = determineRegion(clientInfo);
    const bestIP = await selectBestIP(isp, region);

    return new Response(JSON.stringify({
      status: 'success',
      client: clientInfo,
      result: {
        isp: isp,
        region: region,
        ip: bestIP
      }
    }), {
      headers: {
        'content-type': 'application/json',
        'cache-control': 'max-age=300'
      }
    });
  } catch (error) {
    const status = error.message === ERRORS.NO_IP ? 503 : 500;
    return new Response(JSON.stringify({
      status: 'error',
      message: error.message,
      client: clientInfo
    }), {
      status: status,
      headers: { 'content-type': 'application/json' }
    });
  }
}

function determineISP(asn) {
  const isp = ASN_TO_ISP[asn];
  if (!isp) {
    throw new Error(ERRORS.UNKNOWN_ISP);
  }
  return isp;
}

function determineRegion(clientInfo) {
  const regionMap = {
    'SHA': 'EAST',   // 上海
    'BEJ': 'NORTH',  // 北京
    'GUD': 'SOUTH',  // 广东
    'HUB': 'CENTRAL' // 湖北
  };

  if (clientInfo.region && regionMap[clientInfo.region]) {
    return regionMap[clientInfo.region];
  }

  // 默认返回华东
  return 'EAST';
}

async function selectBestIP(isp, region) {
  let candidates = [];

  // 1. 优先选择同ISP同区域的IP
  if (IP_POOLS[isp] && IP_POOLS[isp][region] && IP_POOLS[isp][region].length > 0) {
    candidates = IP_POOLS[isp][region];
  }

  // 2. 如果没有找到,尝试同ISP其他区域
  if (candidates.length === 0 && IP_POOLS[isp]) {
    for (const r of REGIONS) {
      if (r !== region && IP_POOLS[isp][r] && IP_POOLS[isp][r].length > 0) {
        candidates = candidates.concat(IP_POOLS[isp][r]);
      }
    }
  }

  // 3. 如果还是没有,使用其他ISP的IP
  if (candidates.length === 0) {
    for (const otherIsp in IP_POOLS) {
      if (otherIsp !== isp && IP_POOLS[otherIsp][region] && IP_POOLS[otherIsp][region].length > 0) {
        candidates = candidates.concat(IP_POOLS[otherIsp][region]);
      }
    }
  }

  // 4. 如果还是没有找到可用IP,则抛出错误
  if (candidates.length === 0) {
    throw new Error(ERRORS.NO_IP);
  }

  // 随机选择一个IP,避免单点故障
  return candidates[Math.floor(Math.random() * candidates.length)];
}