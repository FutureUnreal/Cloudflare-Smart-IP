// IP池配置 - 更新时间: 2025-01-17T15:41:09.362534
const IP_POOLS = {
  "CHINA_TELECOM": {
    "EAST": [
      "104.18.105.145",
      "104.16.34.173",
      "172.65.62.235",
      "172.65.14.185",
      "104.24.251.251",
      "104.25.57.37",
      "104.18.135.184",
      "104.20.12.93",
      "104.25.122.241",
      "104.20.150.56",
      "104.19.136.168",
      "104.27.118.244"
    ],
    "SOUTH": [
      "104.18.17.87",
      "104.18.179.185",
      "104.17.45.161",
      "172.65.8.108",
      "172.67.104.48",
      "104.19.166.161",
      "104.21.232.73",
      "104.16.125.48",
      "104.16.26.234"
    ],
    "NORTH": [
      "104.18.95.13",
      "172.65.32.193",
      "104.18.192.164",
      "104.16.3.190",
      "104.25.21.159",
      "104.16.2.140",
      "104.17.19.6",
      "104.19.12.232",
      "104.18.80.72",
      "104.24.154.21",
      "104.24.239.54",
      "104.27.107.116",
      "104.27.47.223",
      "104.24.88.220",
      "104.24.67.246",
      "104.20.184.208"
    ],
    "CENTRAL": [
      "104.16.127.58",
      "104.16.73.103",
      "104.16.179.51",
      "104.19.180.32",
      "104.21.59.249",
      "104.17.13.187",
      "172.67.156.136",
      "104.21.30.104",
      "104.25.62.235",
      "104.19.91.172",
      "104.25.187.115",
      "104.17.248.157",
      "104.17.234.10",
      "104.20.92.11",
      "104.27.82.80"
    ],
    "SOUTHWEST": [
      "104.18.53.123",
      "172.65.254.60",
      "104.19.235.122",
      "104.16.192.95",
      "172.66.144.242",
      "104.20.118.240",
      "104.20.137.43"
    ],
    "NORTHWEST": [
      "104.19.219.77",
      "172.66.0.120",
      "104.16.90.100",
      "104.18.97.245",
      "104.24.83.68",
      "104.24.54.176"
    ],
    "NORTHEAST": [
      "104.19.1.85",
      "172.65.62.216",
      "172.67.174.107",
      "104.18.41.26",
      "104.22.50.30",
      "104.17.140.92",
      "104.18.41.154",
      "104.17.190.141",
      "172.65.240.5",
      "104.16.228.253",
      "104.16.156.130",
      "104.16.71.207",
      "172.65.242.99",
      "104.17.41.207",
      "104.25.164.27",
      "104.27.100.64",
      "172.66.172.91"
    ]
  },
  "CHINA_UNICOM": {
    "EAST": [
      "104.20.207.48",
      "104.17.211.70",
      "104.18.41.154",
      "104.19.91.172",
      "104.25.187.115",
      "172.65.32.193",
      "104.25.57.37",
      "104.16.71.207",
      "104.24.154.21",
      "172.67.156.136",
      "104.24.88.220"
    ],
    "SOUTH": [
      "172.65.112.247",
      "172.65.252.246",
      "104.17.254.253",
      "104.16.127.58",
      "104.19.219.77",
      "104.18.179.185",
      "104.19.238.231",
      "172.65.14.185",
      "172.65.62.235",
      "172.65.77.105",
      "104.16.26.234",
      "104.20.137.43"
    ],
    "NORTH": [
      "172.65.230.196",
      "104.16.73.103",
      "104.27.123.177",
      "104.24.216.41",
      "104.18.41.26",
      "104.19.180.32",
      "104.17.45.161",
      "104.19.166.161",
      "104.19.236.212",
      "104.18.135.184",
      "104.18.80.72",
      "172.65.242.99"
    ],
    "CENTRAL": [
      "172.65.123.145",
      "104.16.157.76",
      "104.24.33.111",
      "104.25.69.59",
      "104.16.179.51",
      "172.65.85.164",
      "104.18.17.87",
      "104.25.192.245",
      "172.66.0.120",
      "104.16.2.140",
      "104.24.251.251",
      "104.27.107.116"
    ],
    "SOUTHWEST": [
      "104.19.1.85",
      "104.16.34.173",
      "172.67.174.107",
      "104.21.225.145",
      "172.67.214.92",
      "104.16.4.242",
      "104.17.190.141",
      "104.17.19.6",
      "172.65.62.216",
      "172.66.144.242",
      "104.27.82.80",
      "104.27.47.223",
      "104.19.136.168",
      "104.20.118.240"
    ],
    "NORTHWEST": [
      "104.16.28.214",
      "104.25.54.10",
      "104.19.203.225",
      "104.17.13.187",
      "104.21.32.146",
      "104.24.46.115",
      "104.25.119.68",
      "104.25.33.51",
      "104.19.149.247",
      "104.21.204.248",
      "172.65.240.5",
      "104.19.12.232",
      "104.16.90.100"
    ],
    "NORTHEAST": [
      "104.18.53.123",
      "104.16.96.67",
      "104.17.248.157"
    ]
  },
  "CHINA_MOBILE": {
    "EAST": [
      "104.18.176.215",
      "104.18.105.145",
      "104.24.255.96",
      "104.24.46.115",
      "104.16.35.122",
      "104.22.50.30",
      "104.16.156.130",
      "104.20.184.208"
    ],
    "SOUTH": [
      "104.18.95.13",
      "172.65.230.196",
      "104.19.83.77",
      "104.20.207.48",
      "104.19.203.225",
      "172.67.104.48",
      "104.20.12.93",
      "104.17.41.207",
      "104.18.97.245"
    ],
    "NORTH": [
      "104.17.254.253",
      "104.16.3.190",
      "104.25.122.82",
      "104.25.139.116",
      "104.16.28.214",
      "104.22.37.93",
      "104.25.192.245",
      "104.25.119.68",
      "104.16.228.253",
      "104.20.150.56"
    ],
    "CENTRAL": [
      "104.17.140.92",
      "172.65.254.60",
      "104.24.16.24",
      "104.16.226.61",
      "104.20.92.11"
    ],
    "SOUTHWEST": [
      "172.65.112.247",
      "104.24.28.244",
      "104.24.205.176",
      "104.20.243.58",
      "104.25.51.148",
      "104.25.87.4",
      "104.25.136.66",
      "104.21.66.229",
      "104.25.62.235",
      "104.16.125.48",
      "104.17.234.10",
      "172.66.172.91",
      "104.24.83.68",
      "104.24.54.176"
    ],
    "NORTHWEST": [
      "104.16.4.242",
      "104.16.187.58",
      "104.24.33.111",
      "104.24.67.246"
    ],
    "NORTHEAST": [
      "104.19.238.231",
      "104.25.54.10",
      "104.21.30.104",
      "104.25.33.51",
      "104.21.232.73",
      "104.25.164.27"
    ]
  }
};

// ASN到运营商的映射
const ASN_TO_ISP = {
  // 电信
  '4134': 'CHINA_TELECOM',
  '4809': 'CHINA_TELECOM',
  // 联通
  '4837': 'CHINA_UNICOM', 
  '9929': 'CHINA_UNICOM',
  '4808': 'CHINA_UNICOM',
  // 移动
  '9808': 'CHINA_MOBILE',
  '56040': 'CHINA_MOBILE'
};

// 区域列表
const REGIONS = [
  'EAST',
  'NORTH', 
  'SOUTH',
  'CENTRAL',
  'SOUTHWEST',
  'NORTHWEST',
  'NORTHEAST'
];

// 错误类型定义
const ERRORS = {
  NO_IP: '无可用IP',
  UNKNOWN_ISP: '未知运营商',
  INVALID_REGION: '无效区域'
};

addEventListener('fetch', event => {
  event.respondWith(handleRequest(event.request));
});

async function handleRequest(request) {
  const clientInfo = {
    ip: request.headers.get('CF-Connecting-IP'),
    asn: request.cf.asn.toString(),
    region: request.cf.region,
    colo: request.cf.colo
  };

  try {
    const isp = determineISP(clientInfo.asn);
    const region = determineRegion(clientInfo);
    const bestIP = await selectBestIP(isp, region);

    return new Response(JSON.stringify({
      status: 'success',
      client: clientInfo,
      result: {
        isp: isp,
        region: region,
        ip: bestIP
      }
    }), {
      headers: {
        'content-type': 'application/json',
        'cache-control': 'max-age=300'
      }
    });
  } catch (error) {
    const status = error.message === ERRORS.NO_IP ? 503 : 500;
    return new Response(JSON.stringify({
      status: 'error',
      message: error.message,
      client: clientInfo
    }), {
      status: status,
      headers: { 'content-type': 'application/json' }
    });
  }
}

function determineISP(asn) {
  const isp = ASN_TO_ISP[asn];
  if (!isp) {
    throw new Error(ERRORS.UNKNOWN_ISP);
  }
  return isp;
}

function determineRegion(clientInfo) {
  const regionMap = {
    'SHA': 'EAST',   // 上海
    'BEJ': 'NORTH',  // 北京
    'GUD': 'SOUTH',  // 广东
    'HUB': 'CENTRAL' // 湖北
  };

  if (clientInfo.region && regionMap[clientInfo.region]) {
    return regionMap[clientInfo.region];
  }

  // 默认返回华东
  return 'EAST';
}

async function selectBestIP(isp, region) {
  let candidates = [];

  // 1. 优先选择同ISP同区域的IP
  if (IP_POOLS[isp] && IP_POOLS[isp][region] && IP_POOLS[isp][region].length > 0) {
    candidates = IP_POOLS[isp][region];
  }

  // 2. 如果没有找到,尝试同ISP其他区域
  if (candidates.length === 0 && IP_POOLS[isp]) {
    for (const r of REGIONS) {
      if (r !== region && IP_POOLS[isp][r] && IP_POOLS[isp][r].length > 0) {
        candidates = candidates.concat(IP_POOLS[isp][r]);
      }
    }
  }

  // 3. 如果还是没有,使用其他ISP的IP
  if (candidates.length === 0) {
    for (const otherIsp in IP_POOLS) {
      if (otherIsp !== isp && IP_POOLS[otherIsp][region] && IP_POOLS[otherIsp][region].length > 0) {
        candidates = candidates.concat(IP_POOLS[otherIsp][region]);
      }
    }
  }

  // 4. 如果还是没有找到可用IP,则抛出错误
  if (candidates.length === 0) {
    throw new Error(ERRORS.NO_IP);
  }

  // 随机选择一个IP,避免单点故障
  return candidates[Math.floor(Math.random() * candidates.length)];
}