// IP池配置 - 更新时间: 2024-12-25T23:06:26.603142
const IP_POOLS = {
  "CHINA_TELECOM": {
    "EAST": [
      "104.17.100.147",
      "172.65.240.204",
      "104.16.102.168",
      "104.16.206.109",
      "104.18.218.65",
      "104.16.223.90",
      "104.18.216.145",
      "104.20.23.87",
      "172.65.166.253",
      "104.20.2.249",
      "104.20.114.247",
      "104.20.253.52",
      "172.66.31.138",
      "104.25.245.226",
      "172.65.34.7",
      "104.24.198.50",
      "172.67.133.55"
    ],
    "SOUTH": [
      "104.18.8.92",
      "172.65.252.77",
      "104.18.82.222",
      "104.21.218.46",
      "104.21.18.111",
      "104.22.76.103",
      "172.67.206.6"
    ],
    "NORTH": [
      "172.65.248.173",
      "172.66.1.140",
      "104.16.166.90",
      "172.65.87.45",
      "104.25.202.155",
      "172.67.250.231",
      "172.65.120.41",
      "104.20.132.122",
      "104.24.52.77",
      "104.20.161.31"
    ],
    "CENTRAL": [
      "104.19.148.8",
      "104.19.51.214",
      "172.65.224.247",
      "104.18.197.202",
      "104.18.17.19",
      "104.27.19.223",
      "172.65.118.180",
      "104.27.48.125",
      "104.20.245.101",
      "104.20.155.62",
      "172.67.57.27",
      "172.66.171.138"
    ],
    "SOUTHWEST": [
      "104.18.66.217",
      "104.19.154.250",
      "104.18.56.60",
      "104.17.166.17",
      "104.16.10.25",
      "172.66.47.65",
      "172.65.199.171",
      "104.18.85.110",
      "104.22.48.251",
      "104.20.14.196",
      "104.20.64.188",
      "172.67.76.108",
      "172.66.132.158",
      "104.25.77.246",
      "104.20.20.209",
      "104.24.211.228"
    ],
    "NORTHWEST": [
      "104.19.30.109",
      "104.16.89.106",
      "104.19.154.159",
      "104.18.204.250",
      "172.67.60.29",
      "172.67.127.120",
      "104.24.199.231",
      "104.25.113.97",
      "104.25.40.202",
      "104.25.53.97"
    ],
    "NORTHEAST": [
      "104.17.156.137",
      "104.16.70.36",
      "172.67.252.134",
      "104.21.106.37",
      "172.67.131.62",
      "172.65.129.8",
      "104.25.174.85",
      "104.20.52.27",
      "104.27.201.251",
      "104.24.44.134"
    ]
  },
  "CHINA_UNICOM": {
    "EAST": [
      "104.20.31.218",
      "104.16.166.90",
      "104.18.179.192",
      "172.66.167.142",
      "104.18.197.202",
      "104.18.204.250",
      "104.19.211.131",
      "104.24.245.132",
      "104.21.106.37",
      "104.16.70.36",
      "104.25.202.155",
      "104.27.19.223",
      "172.67.60.29",
      "172.67.206.6",
      "172.67.76.108",
      "104.25.29.181"
    ],
    "SOUTH": [
      "104.20.254.253",
      "104.19.33.161",
      "172.67.228.216",
      "104.24.206.171",
      "104.18.218.65",
      "172.66.201.85",
      "104.18.56.60",
      "172.67.136.172",
      "104.17.103.130",
      "104.21.218.46",
      "172.66.171.138",
      "104.18.17.19"
    ],
    "NORTH": [
      "104.18.224.129",
      "104.18.109.99",
      "104.16.57.49",
      "104.16.89.106",
      "104.24.20.240",
      "104.19.51.214",
      "104.19.31.15",
      "172.65.118.180",
      "104.20.245.101",
      "104.24.44.134"
    ],
    "CENTRAL": [
      "104.20.27.209",
      "104.24.164.86",
      "104.18.232.177",
      "172.66.206.254",
      "104.18.216.145",
      "104.27.48.125",
      "172.65.248.173",
      "172.67.127.120"
    ],
    "SOUTHWEST": [
      "172.65.240.204",
      "104.17.201.108",
      "172.66.153.61",
      "104.19.165.197",
      "104.17.166.17",
      "104.19.154.159",
      "104.25.235.195",
      "104.22.48.251",
      "172.66.1.140",
      "104.20.137.231",
      "104.17.44.149",
      "104.24.198.50",
      "104.22.76.103",
      "104.24.211.228",
      "172.67.57.27",
      "104.25.40.202",
      "104.25.53.97"
    ],
    "NORTHWEST": [
      "104.18.82.222",
      "104.17.139.18",
      "104.21.51.221",
      "104.18.66.217",
      "104.20.161.31",
      "172.65.129.8",
      "104.19.30.109",
      "104.21.18.111",
      "172.65.63.5",
      "104.21.63.68"
    ],
    "NORTHEAST": [
      "104.17.244.190",
      "104.16.45.149",
      "104.27.1.109",
      "104.25.11.125",
      "172.66.31.138",
      "104.20.132.122",
      "172.67.250.231",
      "104.20.58.16",
      "104.19.27.144"
    ]
  },
  "CHINA_MOBILE": {
    "EAST": [
      "104.16.206.109",
      "172.66.160.24",
      "172.66.153.61",
      "104.20.45.31",
      "172.67.228.216",
      "172.67.182.32",
      "104.24.95.204",
      "104.21.69.163",
      "172.65.27.5",
      "104.20.128.115",
      "104.20.254.253",
      "104.20.253.52",
      "172.65.120.41",
      "104.20.14.196",
      "104.21.63.68"
    ],
    "SOUTH": [
      "104.17.156.137",
      "104.24.20.240",
      "104.20.114.247",
      "172.65.34.7"
    ],
    "NORTH": [
      "104.19.154.250",
      "104.19.211.131",
      "104.18.156.151",
      "104.16.45.149",
      "104.17.44.149",
      "104.27.1.109"
    ],
    "CENTRAL": [
      "104.16.57.49",
      "104.22.56.58",
      "172.66.151.115",
      "104.24.52.77",
      "104.25.174.85",
      "172.67.131.62",
      "104.27.201.251",
      "104.25.77.246",
      "104.20.20.209"
    ],
    "SOUTHWEST": [
      "104.20.31.218",
      "104.24.206.171",
      "104.24.164.86",
      "172.66.206.254",
      "104.19.103.237",
      "104.21.97.14",
      "104.25.245.226",
      "104.27.195.40",
      "104.20.23.87",
      "104.20.2.249",
      "172.65.252.77",
      "104.20.155.62"
    ],
    "NORTHWEST": [
      "104.16.223.90",
      "172.65.54.141",
      "104.21.51.221",
      "172.66.167.142"
    ],
    "NORTHEAST": [
      "172.66.47.65",
      "104.17.201.108",
      "172.65.224.247",
      "104.20.154.71",
      "172.65.199.171",
      "104.20.58.16",
      "104.18.106.64",
      "104.20.64.188"
    ]
  }
};

// ASN到运营商的映射
const ASN_TO_ISP = {
  // 电信
  '4134': 'CHINA_TELECOM',
  '4809': 'CHINA_TELECOM',
  // 联通
  '4837': 'CHINA_UNICOM', 
  '9929': 'CHINA_UNICOM',
  '4808': 'CHINA_UNICOM',
  // 移动
  '9808': 'CHINA_MOBILE',
  '56040': 'CHINA_MOBILE'
};

// 区域列表
const REGIONS = [
  'EAST',
  'NORTH', 
  'SOUTH',
  'CENTRAL',
  'SOUTHWEST',
  'NORTHWEST',
  'NORTHEAST'
];

// 错误类型定义
const ERRORS = {
  NO_IP: '无可用IP',
  UNKNOWN_ISP: '未知运营商',
  INVALID_REGION: '无效区域'
};

addEventListener('fetch', event => {
  event.respondWith(handleRequest(event.request));
});

async function handleRequest(request) {
  const clientInfo = {
    ip: request.headers.get('CF-Connecting-IP'),
    asn: request.cf.asn.toString(),
    region: request.cf.region,
    colo: request.cf.colo
  };

  try {
    const isp = determineISP(clientInfo.asn);
    const region = determineRegion(clientInfo);
    const bestIP = await selectBestIP(isp, region);

    return new Response(JSON.stringify({
      status: 'success',
      client: clientInfo,
      result: {
        isp: isp,
        region: region,
        ip: bestIP
      }
    }), {
      headers: {
        'content-type': 'application/json',
        'cache-control': 'max-age=300'
      }
    });
  } catch (error) {
    const status = error.message === ERRORS.NO_IP ? 503 : 500;
    return new Response(JSON.stringify({
      status: 'error',
      message: error.message,
      client: clientInfo
    }), {
      status: status,
      headers: { 'content-type': 'application/json' }
    });
  }
}

function determineISP(asn) {
  const isp = ASN_TO_ISP[asn];
  if (!isp) {
    throw new Error(ERRORS.UNKNOWN_ISP);
  }
  return isp;
}

function determineRegion(clientInfo) {
  const regionMap = {
    'SHA': 'EAST',   // 上海
    'BEJ': 'NORTH',  // 北京
    'GUD': 'SOUTH',  // 广东
    'HUB': 'CENTRAL' // 湖北
  };

  if (clientInfo.region && regionMap[clientInfo.region]) {
    return regionMap[clientInfo.region];
  }

  // 默认返回华东
  return 'EAST';
}

async function selectBestIP(isp, region) {
  let candidates = [];

  // 1. 优先选择同ISP同区域的IP
  if (IP_POOLS[isp] && IP_POOLS[isp][region] && IP_POOLS[isp][region].length > 0) {
    candidates = IP_POOLS[isp][region];
  }

  // 2. 如果没有找到,尝试同ISP其他区域
  if (candidates.length === 0 && IP_POOLS[isp]) {
    for (const r of REGIONS) {
      if (r !== region && IP_POOLS[isp][r] && IP_POOLS[isp][r].length > 0) {
        candidates = candidates.concat(IP_POOLS[isp][r]);
      }
    }
  }

  // 3. 如果还是没有,使用其他ISP的IP
  if (candidates.length === 0) {
    for (const otherIsp in IP_POOLS) {
      if (otherIsp !== isp && IP_POOLS[otherIsp][region] && IP_POOLS[otherIsp][region].length > 0) {
        candidates = candidates.concat(IP_POOLS[otherIsp][region]);
      }
    }
  }

  // 4. 如果还是没有找到可用IP,则抛出错误
  if (candidates.length === 0) {
    throw new Error(ERRORS.NO_IP);
  }

  // 随机选择一个IP,避免单点故障
  return candidates[Math.floor(Math.random() * candidates.length)];
}