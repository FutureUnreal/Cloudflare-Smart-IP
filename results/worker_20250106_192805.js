// IP池配置 - 更新时间: 2025-01-06T19:28:01.895413
const IP_POOLS = {
  "CHINA_TELECOM": {
    "EAST": [
      "104.18.44.247",
      "104.27.196.181",
      "104.16.196.182",
      "104.20.192.133",
      "104.27.33.52",
      "172.65.214.121",
      "104.16.18.141",
      "104.17.35.164",
      "172.67.178.11",
      "104.21.206.237",
      "172.65.181.78",
      "172.67.108.55"
    ],
    "SOUTH": [
      "172.67.227.38",
      "104.19.27.34",
      "104.16.188.180",
      "104.16.180.138",
      "104.22.46.49",
      "104.25.54.116",
      "104.25.123.35",
      "172.66.199.1",
      "104.25.207.72",
      "172.67.50.194",
      "172.65.183.203",
      "104.20.245.9",
      "104.25.57.143"
    ],
    "NORTH": [
      "104.16.63.204",
      "172.65.220.94",
      "104.21.99.66",
      "104.19.174.236",
      "104.19.254.108",
      "104.18.119.66",
      "104.16.164.208",
      "104.17.150.112",
      "104.17.118.127",
      "104.25.59.20",
      "104.20.96.200",
      "104.25.84.59",
      "104.25.96.126",
      "104.25.65.114",
      "104.24.63.114",
      "172.66.141.13",
      "104.20.242.245"
    ],
    "CENTRAL": [
      "104.19.161.202",
      "104.18.211.219",
      "104.18.123.208",
      "104.18.135.193",
      "103.21.244.253",
      "104.22.16.161",
      "172.67.119.66",
      "104.17.34.195",
      "104.24.58.231",
      "104.24.31.156",
      "104.27.14.45"
    ],
    "SOUTHWEST": [
      "104.17.4.26",
      "172.67.110.34",
      "104.21.92.72",
      "104.16.235.57",
      "104.20.122.247",
      "104.25.198.148",
      "104.25.197.65"
    ],
    "NORTHWEST": [
      "104.19.6.61",
      "172.65.35.121",
      "172.67.22.142",
      "104.18.202.179",
      "104.16.51.62",
      "104.16.11.73",
      "104.17.60.78",
      "104.19.146.81",
      "104.18.217.203",
      "104.18.0.79",
      "104.27.198.158"
    ],
    "NORTHEAST": [
      "104.21.97.221",
      "104.22.55.46",
      "104.18.176.136",
      "104.17.73.158",
      "104.16.230.7",
      "104.20.247.73",
      "104.24.42.60",
      "104.22.46.156",
      "104.24.86.200",
      "172.66.167.215",
      "104.20.56.195"
    ]
  },
  "CHINA_UNICOM": {
    "EAST": [
      "104.16.236.103",
      "104.19.189.156",
      "104.17.148.71",
      "104.18.123.208",
      "104.18.176.136",
      "104.17.162.98",
      "104.25.157.69",
      "172.67.217.76",
      "172.67.22.142",
      "104.17.73.158",
      "104.25.84.59",
      "104.25.96.126",
      "104.17.4.26",
      "172.65.179.245",
      "104.19.95.44",
      "104.25.197.65",
      "104.20.56.195"
    ],
    "SOUTH": [
      "104.25.57.184",
      "104.24.144.167",
      "104.17.110.113",
      "172.65.221.182",
      "104.21.68.201",
      "104.18.211.219",
      "104.16.64.165",
      "104.17.118.127",
      "104.24.63.114",
      "104.18.119.66",
      "104.27.3.224",
      "104.20.245.9"
    ],
    "NORTH": [
      "104.18.76.105",
      "172.67.150.16",
      "104.19.51.242",
      "104.17.252.153",
      "104.20.89.41",
      "172.67.74.73",
      "104.27.26.207",
      "104.16.18.141",
      "103.21.244.253",
      "104.22.46.156"
    ],
    "CENTRAL": [
      "104.16.63.204",
      "104.19.209.54",
      "104.17.166.135",
      "172.65.102.253",
      "104.18.166.216",
      "172.67.227.38",
      "104.24.86.200",
      "104.24.31.156",
      "172.67.108.55"
    ],
    "SOUTHWEST": [
      "104.17.237.212",
      "172.65.220.94",
      "104.27.127.142",
      "104.19.254.108",
      "104.27.39.245",
      "104.24.216.182",
      "104.24.231.191",
      "104.21.97.221",
      "172.66.197.1",
      "104.22.16.161",
      "104.18.202.179",
      "104.18.251.234",
      "172.67.50.194"
    ],
    "NORTHWEST": [
      "104.18.196.154",
      "104.21.99.66",
      "104.17.150.112",
      "104.16.164.208",
      "172.67.119.66",
      "172.65.145.206",
      "104.22.25.35",
      "104.18.217.203",
      "104.18.0.79",
      "104.27.196.181",
      "104.24.58.231",
      "104.18.44.247",
      "104.25.54.116",
      "172.65.181.78",
      "172.65.183.203"
    ],
    "NORTHEAST": [
      "172.65.35.121",
      "104.19.81.149",
      "104.25.59.20",
      "104.20.192.133",
      "172.67.178.11",
      "172.67.110.34",
      "104.27.198.158"
    ]
  },
  "CHINA_MOBILE": {
    "EAST": [
      "104.19.161.202",
      "104.19.196.225",
      "104.25.68.136",
      "104.17.252.153",
      "104.22.8.150",
      "104.19.27.34",
      "104.25.148.10"
    ],
    "SOUTH": [
      "104.19.6.61",
      "172.67.150.16",
      "104.22.41.47",
      "104.18.176.41",
      "104.24.144.167",
      "104.27.33.52",
      "104.20.96.200"
    ],
    "NORTH": [
      "172.65.186.127",
      "104.19.51.242",
      "104.16.196.182",
      "104.25.157.69",
      "104.18.196.154",
      "172.66.167.215",
      "104.25.198.148"
    ],
    "CENTRAL": [
      "104.24.231.191",
      "104.18.166.216",
      "104.16.17.112",
      "104.25.123.35",
      "104.25.57.143"
    ],
    "SOUTHWEST": [
      "172.65.102.253",
      "104.17.237.212",
      "104.19.174.236",
      "104.27.39.245",
      "104.24.216.182",
      "104.25.49.41",
      "104.19.209.54",
      "104.16.180.138",
      "104.25.65.114",
      "104.20.242.245"
    ],
    "NORTHWEST": [
      "104.16.64.165",
      "104.22.46.49",
      "104.25.207.72"
    ],
    "NORTHEAST": [
      "104.19.38.46",
      "104.17.110.113",
      "104.22.55.46",
      "104.18.76.105",
      "104.20.89.41",
      "172.67.71.235",
      "104.21.56.240",
      "104.21.68.201",
      "104.21.206.237"
    ]
  }
};

// ASN到运营商的映射
const ASN_TO_ISP = {
  // 电信
  '4134': 'CHINA_TELECOM',
  '4809': 'CHINA_TELECOM',
  // 联通
  '4837': 'CHINA_UNICOM', 
  '9929': 'CHINA_UNICOM',
  '4808': 'CHINA_UNICOM',
  // 移动
  '9808': 'CHINA_MOBILE',
  '56040': 'CHINA_MOBILE'
};

// 区域列表
const REGIONS = [
  'EAST',
  'NORTH', 
  'SOUTH',
  'CENTRAL',
  'SOUTHWEST',
  'NORTHWEST',
  'NORTHEAST'
];

// 错误类型定义
const ERRORS = {
  NO_IP: '无可用IP',
  UNKNOWN_ISP: '未知运营商',
  INVALID_REGION: '无效区域'
};

addEventListener('fetch', event => {
  event.respondWith(handleRequest(event.request));
});

async function handleRequest(request) {
  const clientInfo = {
    ip: request.headers.get('CF-Connecting-IP'),
    asn: request.cf.asn.toString(),
    region: request.cf.region,
    colo: request.cf.colo
  };

  try {
    const isp = determineISP(clientInfo.asn);
    const region = determineRegion(clientInfo);
    const bestIP = await selectBestIP(isp, region);

    return new Response(JSON.stringify({
      status: 'success',
      client: clientInfo,
      result: {
        isp: isp,
        region: region,
        ip: bestIP
      }
    }), {
      headers: {
        'content-type': 'application/json',
        'cache-control': 'max-age=300'
      }
    });
  } catch (error) {
    const status = error.message === ERRORS.NO_IP ? 503 : 500;
    return new Response(JSON.stringify({
      status: 'error',
      message: error.message,
      client: clientInfo
    }), {
      status: status,
      headers: { 'content-type': 'application/json' }
    });
  }
}

function determineISP(asn) {
  const isp = ASN_TO_ISP[asn];
  if (!isp) {
    throw new Error(ERRORS.UNKNOWN_ISP);
  }
  return isp;
}

function determineRegion(clientInfo) {
  const regionMap = {
    'SHA': 'EAST',   // 上海
    'BEJ': 'NORTH',  // 北京
    'GUD': 'SOUTH',  // 广东
    'HUB': 'CENTRAL' // 湖北
  };

  if (clientInfo.region && regionMap[clientInfo.region]) {
    return regionMap[clientInfo.region];
  }

  // 默认返回华东
  return 'EAST';
}

async function selectBestIP(isp, region) {
  let candidates = [];

  // 1. 优先选择同ISP同区域的IP
  if (IP_POOLS[isp] && IP_POOLS[isp][region] && IP_POOLS[isp][region].length > 0) {
    candidates = IP_POOLS[isp][region];
  }

  // 2. 如果没有找到,尝试同ISP其他区域
  if (candidates.length === 0 && IP_POOLS[isp]) {
    for (const r of REGIONS) {
      if (r !== region && IP_POOLS[isp][r] && IP_POOLS[isp][r].length > 0) {
        candidates = candidates.concat(IP_POOLS[isp][r]);
      }
    }
  }

  // 3. 如果还是没有,使用其他ISP的IP
  if (candidates.length === 0) {
    for (const otherIsp in IP_POOLS) {
      if (otherIsp !== isp && IP_POOLS[otherIsp][region] && IP_POOLS[otherIsp][region].length > 0) {
        candidates = candidates.concat(IP_POOLS[otherIsp][region]);
      }
    }
  }

  // 4. 如果还是没有找到可用IP,则抛出错误
  if (candidates.length === 0) {
    throw new Error(ERRORS.NO_IP);
  }

  // 随机选择一个IP,避免单点故障
  return candidates[Math.floor(Math.random() * candidates.length)];
}