// IP池配置 - 更新时间: 2025-01-15T07:30:08.391514
const IP_POOLS = {
  "CHINA_TELECOM": {
    "EAST": [
      "104.19.247.166",
      "104.16.210.13",
      "172.65.21.252",
      "104.27.195.43",
      "104.20.176.124",
      "104.19.144.60",
      "104.17.219.150",
      "104.18.32.35",
      "104.19.192.114",
      "104.24.218.2",
      "104.20.222.120",
      "172.66.210.243",
      "104.20.50.98",
      "104.20.83.228"
    ],
    "SOUTH": [
      "104.18.114.236",
      "104.18.234.35",
      "104.19.226.93",
      "104.24.14.236",
      "104.18.213.66",
      "104.22.68.48"
    ],
    "NORTH": [
      "172.67.137.166",
      "104.18.134.165",
      "104.17.123.237",
      "104.16.118.69",
      "104.19.2.14",
      "104.19.239.41",
      "104.16.252.79",
      "104.18.222.215",
      "104.20.18.145",
      "104.22.34.116",
      "172.65.64.129",
      "104.24.90.60",
      "104.26.0.24"
    ],
    "CENTRAL": [
      "104.18.127.159",
      "104.22.48.225",
      "104.21.19.174",
      "104.27.199.24",
      "104.22.45.222",
      "104.16.17.121",
      "104.16.111.7",
      "104.18.43.79",
      "104.27.34.183",
      "172.65.72.137",
      "104.20.85.94",
      "104.25.102.62"
    ],
    "SOUTHWEST": [
      "104.19.42.94",
      "172.67.37.72",
      "172.67.20.212",
      "104.19.254.98",
      "172.65.45.59",
      "104.24.167.56",
      "172.65.246.149",
      "104.18.68.208",
      "104.27.114.163",
      "172.67.64.204",
      "172.65.161.131",
      "104.27.3.62",
      "104.25.44.78",
      "172.65.111.111",
      "104.20.164.202",
      "104.24.221.93",
      "104.27.126.196",
      "172.65.107.74"
    ],
    "NORTHWEST": [
      "104.17.248.89",
      "172.65.93.234",
      "104.17.75.60",
      "104.17.158.104",
      "104.25.77.60",
      "104.25.9.69",
      "104.24.28.227",
      "104.25.66.153"
    ],
    "NORTHEAST": [
      "172.65.59.222",
      "104.25.44.142",
      "104.16.135.204",
      "104.25.183.102",
      "104.20.219.90",
      "104.19.162.136",
      "104.25.225.3",
      "104.24.170.170",
      "104.27.38.126",
      "172.67.10.175",
      "172.65.96.38",
      "104.24.6.90",
      "172.67.49.32"
    ]
  },
  "CHINA_UNICOM": {
    "EAST": [
      "172.67.252.46",
      "172.67.181.71",
      "104.24.14.236",
      "104.19.192.114",
      "104.27.34.183",
      "172.65.64.129",
      "104.27.3.62",
      "104.20.85.94",
      "104.22.68.48",
      "104.24.28.227"
    ],
    "SOUTH": [
      "172.67.137.166",
      "172.67.243.41",
      "104.20.97.10",
      "104.20.144.137",
      "104.16.139.177",
      "172.67.33.6",
      "172.67.20.212",
      "104.18.235.38",
      "172.65.93.234",
      "104.25.228.51",
      "104.22.45.222",
      "104.16.111.7",
      "104.18.213.66",
      "104.20.50.98",
      "104.25.44.78",
      "104.20.83.228"
    ],
    "NORTH": [
      "172.67.61.154",
      "104.24.169.1",
      "172.66.1.113",
      "104.27.195.43",
      "104.18.204.252",
      "104.19.2.14",
      "104.19.162.136",
      "104.27.38.126",
      "172.65.111.111",
      "172.65.107.74"
    ],
    "CENTRAL": [
      "172.67.66.153",
      "104.19.6.232",
      "104.18.114.236",
      "172.65.99.139",
      "104.17.143.66",
      "104.24.203.44",
      "104.18.134.165",
      "104.18.234.35",
      "104.24.167.56",
      "172.65.234.1",
      "104.18.94.76",
      "104.20.219.90",
      "104.18.68.208",
      "104.19.31.163",
      "104.18.43.79",
      "104.17.158.104",
      "172.66.210.243",
      "172.67.10.175",
      "104.24.221.93",
      "172.67.49.32"
    ],
    "SOUTHWEST": [
      "104.25.227.19",
      "172.65.130.139",
      "172.65.49.176",
      "172.65.21.252",
      "104.25.183.102",
      "104.16.252.79",
      "104.22.34.116",
      "104.24.170.170",
      "104.26.0.24"
    ],
    "NORTHWEST": [
      "104.17.123.237",
      "104.20.203.187",
      "104.21.214.136",
      "172.65.175.246",
      "172.67.37.72",
      "104.19.158.164",
      "104.20.38.148",
      "104.22.71.244",
      "104.16.17.121",
      "172.67.64.204",
      "104.24.90.60",
      "172.65.96.38",
      "104.25.102.62"
    ],
    "NORTHEAST": [
      "104.22.48.225",
      "104.19.144.155",
      "104.17.75.60",
      "172.65.246.149",
      "104.18.222.215",
      "104.27.126.196"
    ]
  },
  "CHINA_MOBILE": {
    "EAST": [
      "104.24.203.44",
      "104.24.53.17",
      "172.67.181.71",
      "172.65.175.246",
      "172.66.1.113",
      "172.67.95.123",
      "104.16.135.204",
      "104.25.9.69"
    ],
    "SOUTH": [
      "104.20.97.10",
      "104.19.42.94",
      "104.19.158.164",
      "172.65.49.176",
      "104.25.228.51",
      "172.65.130.139",
      "104.27.199.24",
      "104.20.176.124",
      "104.24.6.90"
    ],
    "NORTH": [
      "104.20.144.137",
      "172.65.59.222",
      "104.16.210.13",
      "104.16.118.69",
      "104.19.144.155",
      "104.25.44.142",
      "104.19.239.41",
      "104.18.32.35",
      "104.25.225.3",
      "172.65.72.137",
      "104.24.218.2",
      "172.65.161.131"
    ],
    "CENTRAL": [
      "104.17.248.89",
      "104.20.38.148",
      "104.16.139.177",
      "172.65.45.59",
      "104.19.144.60",
      "104.20.18.145",
      "104.25.77.60",
      "104.20.164.202"
    ],
    "SOUTHWEST": [
      "104.16.199.232",
      "172.67.33.6",
      "104.21.19.174",
      "172.67.243.41",
      "104.17.219.150",
      "104.19.226.93",
      "104.27.114.163",
      "104.20.222.120"
    ],
    "NORTHWEST": [
      "104.20.203.187"
    ],
    "NORTHEAST": [
      "172.67.66.153",
      "104.25.227.19",
      "104.16.17.179",
      "172.65.234.1"
    ]
  }
};

// ASN到运营商的映射
const ASN_TO_ISP = {
  // 电信
  '4134': 'CHINA_TELECOM',
  '4809': 'CHINA_TELECOM',
  // 联通
  '4837': 'CHINA_UNICOM', 
  '9929': 'CHINA_UNICOM',
  '4808': 'CHINA_UNICOM',
  // 移动
  '9808': 'CHINA_MOBILE',
  '56040': 'CHINA_MOBILE'
};

// 区域列表
const REGIONS = [
  'EAST',
  'NORTH', 
  'SOUTH',
  'CENTRAL',
  'SOUTHWEST',
  'NORTHWEST',
  'NORTHEAST'
];

// 错误类型定义
const ERRORS = {
  NO_IP: '无可用IP',
  UNKNOWN_ISP: '未知运营商',
  INVALID_REGION: '无效区域'
};

addEventListener('fetch', event => {
  event.respondWith(handleRequest(event.request));
});

async function handleRequest(request) {
  const clientInfo = {
    ip: request.headers.get('CF-Connecting-IP'),
    asn: request.cf.asn.toString(),
    region: request.cf.region,
    colo: request.cf.colo
  };

  try {
    const isp = determineISP(clientInfo.asn);
    const region = determineRegion(clientInfo);
    const bestIP = await selectBestIP(isp, region);

    return new Response(JSON.stringify({
      status: 'success',
      client: clientInfo,
      result: {
        isp: isp,
        region: region,
        ip: bestIP
      }
    }), {
      headers: {
        'content-type': 'application/json',
        'cache-control': 'max-age=300'
      }
    });
  } catch (error) {
    const status = error.message === ERRORS.NO_IP ? 503 : 500;
    return new Response(JSON.stringify({
      status: 'error',
      message: error.message,
      client: clientInfo
    }), {
      status: status,
      headers: { 'content-type': 'application/json' }
    });
  }
}

function determineISP(asn) {
  const isp = ASN_TO_ISP[asn];
  if (!isp) {
    throw new Error(ERRORS.UNKNOWN_ISP);
  }
  return isp;
}

function determineRegion(clientInfo) {
  const regionMap = {
    'SHA': 'EAST',   // 上海
    'BEJ': 'NORTH',  // 北京
    'GUD': 'SOUTH',  // 广东
    'HUB': 'CENTRAL' // 湖北
  };

  if (clientInfo.region && regionMap[clientInfo.region]) {
    return regionMap[clientInfo.region];
  }

  // 默认返回华东
  return 'EAST';
}

async function selectBestIP(isp, region) {
  let candidates = [];

  // 1. 优先选择同ISP同区域的IP
  if (IP_POOLS[isp] && IP_POOLS[isp][region] && IP_POOLS[isp][region].length > 0) {
    candidates = IP_POOLS[isp][region];
  }

  // 2. 如果没有找到,尝试同ISP其他区域
  if (candidates.length === 0 && IP_POOLS[isp]) {
    for (const r of REGIONS) {
      if (r !== region && IP_POOLS[isp][r] && IP_POOLS[isp][r].length > 0) {
        candidates = candidates.concat(IP_POOLS[isp][r]);
      }
    }
  }

  // 3. 如果还是没有,使用其他ISP的IP
  if (candidates.length === 0) {
    for (const otherIsp in IP_POOLS) {
      if (otherIsp !== isp && IP_POOLS[otherIsp][region] && IP_POOLS[otherIsp][region].length > 0) {
        candidates = candidates.concat(IP_POOLS[otherIsp][region]);
      }
    }
  }

  // 4. 如果还是没有找到可用IP,则抛出错误
  if (candidates.length === 0) {
    throw new Error(ERRORS.NO_IP);
  }

  // 随机选择一个IP,避免单点故障
  return candidates[Math.floor(Math.random() * candidates.length)];
}