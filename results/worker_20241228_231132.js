// IP池配置 - 更新时间: 2024-12-28T23:11:30.944268
const IP_POOLS = {
  "CHINA_TELECOM": {
    "EAST": [
      "104.19.35.203",
      "104.16.206.63",
      "104.17.198.50",
      "104.21.229.33",
      "172.65.95.240",
      "104.18.163.131",
      "104.18.23.81",
      "104.18.164.204",
      "104.16.231.85",
      "104.20.38.119",
      "172.66.154.240",
      "172.67.253.100",
      "104.24.218.199",
      "172.66.204.123",
      "104.25.101.81",
      "104.25.109.9",
      "172.67.140.89"
    ],
    "SOUTH": [
      "104.17.111.169",
      "104.18.172.138",
      "172.65.217.39",
      "104.19.14.233",
      "104.18.132.140",
      "104.19.6.219",
      "104.16.224.104",
      "104.16.217.127",
      "172.67.208.52",
      "104.25.206.227",
      "104.20.106.222",
      "172.66.31.11",
      "104.24.7.64",
      "172.65.161.195"
    ],
    "NORTH": [
      "104.16.161.187",
      "172.67.176.244",
      "172.65.29.172",
      "172.65.43.26",
      "104.21.68.166",
      "104.19.0.18",
      "172.67.27.77",
      "104.18.18.23",
      "104.18.20.19",
      "104.24.234.237",
      "104.25.22.140",
      "104.25.143.22",
      "172.67.50.122",
      "104.22.2.49"
    ],
    "CENTRAL": [
      "104.17.174.194",
      "104.17.221.154",
      "104.17.170.253",
      "104.19.4.187",
      "104.17.97.243",
      "104.21.122.234",
      "172.67.29.236",
      "104.24.153.166",
      "172.66.132.147",
      "172.65.59.34",
      "104.21.223.191",
      "104.20.246.210",
      "104.21.1.137",
      "104.27.49.60",
      "172.67.122.217"
    ],
    "SOUTHWEST": [
      "104.18.96.48",
      "104.17.100.190",
      "104.19.0.87",
      "104.16.97.61",
      "104.21.218.71",
      "172.67.207.194",
      "104.20.198.109",
      "172.65.187.219",
      "104.20.224.23",
      "172.65.48.73"
    ],
    "NORTHWEST": [
      "104.16.18.163",
      "104.18.104.156",
      "104.16.217.87",
      "104.24.240.99",
      "104.25.128.139",
      "104.24.135.94",
      "172.67.122.167",
      "104.26.12.163",
      "172.67.106.14",
      "104.26.4.73",
      "104.25.64.32",
      "104.25.154.7"
    ],
    "NORTHEAST": [
      "104.18.220.241",
      "104.18.16.111",
      "104.25.56.251",
      "104.20.141.55",
      "172.66.158.46",
      "104.20.95.77"
    ]
  },
  "CHINA_UNICOM": {
    "EAST": [
      "172.67.190.126",
      "172.67.31.157",
      "104.24.236.201",
      "172.66.132.147",
      "172.67.207.194",
      "104.16.188.59",
      "104.20.95.77"
    ],
    "SOUTH": [
      "172.67.70.63",
      "172.65.43.26",
      "172.67.234.45",
      "104.24.157.78",
      "104.22.37.159",
      "104.19.4.187",
      "104.18.23.81",
      "104.24.198.162",
      "172.67.176.244",
      "172.67.29.236",
      "104.20.15.219",
      "104.24.234.237",
      "104.25.206.227",
      "104.21.229.33",
      "104.16.26.17",
      "104.20.224.23"
    ],
    "NORTH": [
      "104.19.60.146",
      "104.16.200.30",
      "104.25.213.121",
      "104.25.226.76",
      "104.25.97.50",
      "172.65.123.87",
      "104.18.16.111",
      "104.18.23.126",
      "104.18.132.140",
      "104.25.56.251",
      "104.25.143.22",
      "104.24.240.99",
      "104.20.141.55",
      "172.66.31.11",
      "104.25.64.32",
      "172.65.48.73"
    ],
    "CENTRAL": [
      "104.20.96.249",
      "104.25.241.105",
      "172.67.57.77",
      "172.67.253.100",
      "104.16.81.199",
      "104.22.2.49",
      "104.26.12.163"
    ],
    "SOUTHWEST": [
      "104.19.7.55",
      "104.21.94.120",
      "104.19.6.219",
      "104.19.0.87",
      "172.65.178.167",
      "172.65.160.117",
      "104.20.231.173",
      "172.67.255.13",
      "104.20.254.243",
      "104.16.206.63",
      "104.18.120.252"
    ],
    "NORTHWEST": [
      "172.67.27.77",
      "104.18.174.128",
      "104.25.101.81",
      "104.18.172.138",
      "104.24.7.64",
      "172.67.122.217",
      "172.67.150.20",
      "172.67.106.14",
      "104.18.235.12"
    ],
    "NORTHEAST": [
      "104.20.233.36",
      "104.20.38.119",
      "172.67.140.89",
      "104.18.165.4",
      "104.24.135.94"
    ]
  },
  "CHINA_MOBILE": {
    "EAST": [
      "104.17.111.169",
      "104.18.18.23",
      "172.65.95.240",
      "104.21.68.166",
      "172.65.254.218",
      "172.65.29.172",
      "104.18.164.204",
      "172.66.204.123",
      "172.65.217.39",
      "172.65.59.34",
      "172.67.50.122",
      "104.20.63.88",
      "104.25.154.7"
    ],
    "SOUTH": [
      "104.17.174.194",
      "172.67.93.126",
      "104.18.20.19",
      "104.16.66.93",
      "104.16.183.141",
      "104.16.56.14",
      "172.66.154.240",
      "104.20.96.249",
      "104.20.231.173",
      "104.21.223.191",
      "104.16.26.17",
      "104.21.218.71",
      "172.65.161.195",
      "172.66.158.46"
    ],
    "NORTH": [
      "104.17.170.253",
      "104.25.241.105",
      "104.19.0.18",
      "104.16.231.213",
      "104.19.14.233",
      "104.18.23.126",
      "104.18.174.128",
      "172.65.187.219",
      "104.27.49.60"
    ],
    "CENTRAL": [
      "104.27.9.133",
      "104.18.163.131",
      "104.25.213.121",
      "172.65.26.196",
      "104.18.133.120",
      "104.20.246.210",
      "104.25.128.139"
    ],
    "SOUTHWEST": [
      "104.17.97.243",
      "104.17.100.190",
      "104.20.254.243",
      "104.24.157.78",
      "172.65.160.117",
      "104.16.81.199",
      "172.65.178.167",
      "104.16.102.15"
    ],
    "NORTHWEST": [
      "104.16.97.61",
      "104.17.246.190",
      "104.16.237.34",
      "104.18.104.156"
    ],
    "NORTHEAST": [
      "104.17.121.83",
      "104.16.200.30",
      "104.19.60.146",
      "104.17.198.50",
      "104.24.236.201",
      "172.67.87.80",
      "104.21.48.127",
      "104.24.27.167",
      "104.20.198.109"
    ]
  }
};

// ASN到运营商的映射
const ASN_TO_ISP = {
  // 电信
  '4134': 'CHINA_TELECOM',
  '4809': 'CHINA_TELECOM',
  // 联通
  '4837': 'CHINA_UNICOM', 
  '9929': 'CHINA_UNICOM',
  '4808': 'CHINA_UNICOM',
  // 移动
  '9808': 'CHINA_MOBILE',
  '56040': 'CHINA_MOBILE'
};

// 区域列表
const REGIONS = [
  'EAST',
  'NORTH', 
  'SOUTH',
  'CENTRAL',
  'SOUTHWEST',
  'NORTHWEST',
  'NORTHEAST'
];

// 错误类型定义
const ERRORS = {
  NO_IP: '无可用IP',
  UNKNOWN_ISP: '未知运营商',
  INVALID_REGION: '无效区域'
};

addEventListener('fetch', event => {
  event.respondWith(handleRequest(event.request));
});

async function handleRequest(request) {
  const clientInfo = {
    ip: request.headers.get('CF-Connecting-IP'),
    asn: request.cf.asn.toString(),
    region: request.cf.region,
    colo: request.cf.colo
  };

  try {
    const isp = determineISP(clientInfo.asn);
    const region = determineRegion(clientInfo);
    const bestIP = await selectBestIP(isp, region);

    return new Response(JSON.stringify({
      status: 'success',
      client: clientInfo,
      result: {
        isp: isp,
        region: region,
        ip: bestIP
      }
    }), {
      headers: {
        'content-type': 'application/json',
        'cache-control': 'max-age=300'
      }
    });
  } catch (error) {
    const status = error.message === ERRORS.NO_IP ? 503 : 500;
    return new Response(JSON.stringify({
      status: 'error',
      message: error.message,
      client: clientInfo
    }), {
      status: status,
      headers: { 'content-type': 'application/json' }
    });
  }
}

function determineISP(asn) {
  const isp = ASN_TO_ISP[asn];
  if (!isp) {
    throw new Error(ERRORS.UNKNOWN_ISP);
  }
  return isp;
}

function determineRegion(clientInfo) {
  const regionMap = {
    'SHA': 'EAST',   // 上海
    'BEJ': 'NORTH',  // 北京
    'GUD': 'SOUTH',  // 广东
    'HUB': 'CENTRAL' // 湖北
  };

  if (clientInfo.region && regionMap[clientInfo.region]) {
    return regionMap[clientInfo.region];
  }

  // 默认返回华东
  return 'EAST';
}

async function selectBestIP(isp, region) {
  let candidates = [];

  // 1. 优先选择同ISP同区域的IP
  if (IP_POOLS[isp] && IP_POOLS[isp][region] && IP_POOLS[isp][region].length > 0) {
    candidates = IP_POOLS[isp][region];
  }

  // 2. 如果没有找到,尝试同ISP其他区域
  if (candidates.length === 0 && IP_POOLS[isp]) {
    for (const r of REGIONS) {
      if (r !== region && IP_POOLS[isp][r] && IP_POOLS[isp][r].length > 0) {
        candidates = candidates.concat(IP_POOLS[isp][r]);
      }
    }
  }

  // 3. 如果还是没有,使用其他ISP的IP
  if (candidates.length === 0) {
    for (const otherIsp in IP_POOLS) {
      if (otherIsp !== isp && IP_POOLS[otherIsp][region] && IP_POOLS[otherIsp][region].length > 0) {
        candidates = candidates.concat(IP_POOLS[otherIsp][region]);
      }
    }
  }

  // 4. 如果还是没有找到可用IP,则抛出错误
  if (candidates.length === 0) {
    throw new Error(ERRORS.NO_IP);
  }

  // 随机选择一个IP,避免单点故障
  return candidates[Math.floor(Math.random() * candidates.length)];
}