// IP池配置 - 更新时间: 2024-12-31T19:14:02.533253
const IP_POOLS = {
  "CHINA_TELECOM": {
    "EAST": [
      "104.16.162.50",
      "104.19.183.121",
      "104.21.224.66",
      "104.16.185.144",
      "104.22.17.125",
      "172.65.11.137",
      "104.21.208.144",
      "104.25.82.149",
      "104.20.50.78"
    ],
    "SOUTH": [
      "104.16.235.190",
      "104.18.37.58",
      "104.18.145.71",
      "104.18.28.95",
      "172.67.145.12",
      "104.21.5.228",
      "172.67.149.202",
      "172.67.127.178",
      "104.25.91.224",
      "104.24.179.40"
    ],
    "NORTH": [
      "104.19.93.48",
      "104.19.10.218",
      "104.17.225.7",
      "172.67.140.173",
      "104.21.33.27",
      "104.18.105.241",
      "104.17.21.0",
      "104.18.118.184",
      "104.27.112.3",
      "104.27.47.158",
      "104.25.244.246",
      "172.66.203.255"
    ],
    "CENTRAL": [
      "172.65.209.167",
      "104.16.83.18",
      "104.16.78.142",
      "104.16.75.129",
      "104.19.19.247",
      "104.16.211.30",
      "104.18.125.179",
      "104.27.195.36",
      "172.67.65.36",
      "104.25.196.14",
      "104.20.204.29",
      "104.27.48.35",
      "104.24.140.248",
      "104.27.10.86"
    ],
    "SOUTHWEST": [
      "104.17.238.247",
      "104.21.226.22",
      "104.18.24.208",
      "104.20.39.60",
      "104.25.58.138",
      "104.24.82.42",
      "172.66.172.243",
      "172.67.54.16",
      "104.25.121.118",
      "172.65.100.107",
      "104.24.208.3",
      "104.25.3.220"
    ],
    "NORTHWEST": [
      "104.18.211.175",
      "104.17.197.45",
      "104.16.184.36",
      "104.17.101.217",
      "172.67.243.22",
      "172.67.195.52",
      "104.19.24.116",
      "104.17.69.195",
      "104.16.92.40",
      "104.21.236.171",
      "104.25.45.191",
      "104.22.67.185",
      "104.25.46.38",
      "104.20.78.209",
      "172.65.153.104",
      "104.25.31.141"
    ],
    "NORTHEAST": [
      "104.18.132.96",
      "104.17.113.227",
      "104.19.192.203",
      "104.22.27.119",
      "104.19.244.225",
      "104.24.87.177",
      "172.65.78.94",
      "104.25.128.40",
      "104.25.61.81",
      "104.25.127.78",
      "104.24.231.232",
      "104.27.77.252",
      "104.27.116.92"
    ]
  },
  "CHINA_UNICOM": {
    "EAST": [
      "104.18.105.241",
      "104.20.200.124",
      "104.16.92.40",
      "104.25.58.138",
      "104.27.47.158",
      "104.27.116.92",
      "104.24.179.40"
    ],
    "SOUTH": [
      "104.27.78.99",
      "104.20.82.254",
      "104.19.19.247",
      "104.19.164.16",
      "104.19.192.203",
      "104.18.132.96",
      "104.16.162.50",
      "104.18.82.250",
      "104.21.226.22",
      "172.67.50.139",
      "104.25.196.14"
    ],
    "NORTH": [
      "104.18.211.175",
      "104.16.235.190",
      "104.16.75.129",
      "104.21.224.66",
      "172.67.38.250",
      "172.65.243.81",
      "104.19.93.48",
      "172.65.223.10",
      "172.65.218.60",
      "104.16.78.142",
      "172.65.11.137",
      "104.24.87.177",
      "172.65.78.94",
      "104.25.61.81",
      "104.27.112.3"
    ],
    "CENTRAL": [
      "172.67.118.22",
      "104.27.41.68",
      "104.22.17.125",
      "104.17.233.30",
      "104.21.16.191",
      "104.18.191.96",
      "104.19.183.121",
      "104.17.113.227",
      "104.21.208.144",
      "104.25.127.78"
    ],
    "SOUTHWEST": [
      "104.17.225.7",
      "104.16.231.70",
      "104.16.250.74",
      "104.20.188.125",
      "104.27.47.252",
      "104.18.145.71",
      "104.17.101.217",
      "104.18.212.233",
      "104.18.55.18",
      "104.16.83.18",
      "104.27.195.36",
      "104.25.221.247",
      "104.25.244.246"
    ],
    "NORTHWEST": [
      "104.17.220.164",
      "172.67.140.173",
      "104.27.10.174",
      "104.25.59.246",
      "104.18.118.174",
      "172.67.123.60",
      "104.19.10.218",
      "104.21.223.169",
      "172.67.156.4",
      "104.20.39.60",
      "104.25.82.149",
      "104.20.204.29",
      "104.25.128.40",
      "104.25.46.38",
      "104.25.121.118",
      "104.27.10.86"
    ],
    "NORTHEAST": [
      "104.18.118.184",
      "104.19.24.116",
      "104.19.244.135",
      "104.25.191.135",
      "104.21.194.194",
      "172.67.164.253",
      "104.25.45.191"
    ]
  },
  "CHINA_MOBILE": {
    "EAST": [
      "104.17.174.209",
      "104.20.188.125",
      "104.17.82.8",
      "104.20.62.180",
      "104.21.236.171",
      "172.66.172.243",
      "104.20.50.78",
      "104.24.140.248"
    ],
    "SOUTH": [
      "104.21.238.28",
      "104.16.250.74",
      "104.27.78.99",
      "104.25.191.135",
      "172.67.195.52",
      "104.17.69.195",
      "172.67.156.4",
      "104.25.221.247",
      "104.24.231.232",
      "104.24.208.3"
    ],
    "NORTH": [
      "104.17.21.0",
      "104.18.82.250",
      "104.16.231.70",
      "172.65.223.10",
      "104.22.27.119",
      "104.21.10.25",
      "104.21.37.9",
      "172.67.127.178"
    ],
    "CENTRAL": [
      "104.17.238.247",
      "104.19.141.47",
      "104.16.120.214",
      "104.16.184.36",
      "104.18.212.233",
      "104.18.125.179"
    ],
    "SOUTHWEST": [
      "104.20.82.254",
      "104.26.12.150",
      "172.65.38.222",
      "172.67.243.22",
      "104.27.47.252",
      "172.65.243.81",
      "104.20.78.209"
    ],
    "NORTHWEST": [
      "104.21.16.191"
    ],
    "NORTHEAST": [
      "104.18.28.95",
      "104.19.164.16",
      "172.67.118.22",
      "104.16.211.30",
      "104.19.244.225",
      "104.25.116.240",
      "104.19.244.135",
      "172.67.38.250",
      "104.21.33.27",
      "104.20.166.250",
      "104.27.48.35",
      "172.66.203.255"
    ]
  }
};

// ASN到运营商的映射
const ASN_TO_ISP = {
  // 电信
  '4134': 'CHINA_TELECOM',
  '4809': 'CHINA_TELECOM',
  // 联通
  '4837': 'CHINA_UNICOM', 
  '9929': 'CHINA_UNICOM',
  '4808': 'CHINA_UNICOM',
  // 移动
  '9808': 'CHINA_MOBILE',
  '56040': 'CHINA_MOBILE'
};

// 区域列表
const REGIONS = [
  'EAST',
  'NORTH', 
  'SOUTH',
  'CENTRAL',
  'SOUTHWEST',
  'NORTHWEST',
  'NORTHEAST'
];

// 错误类型定义
const ERRORS = {
  NO_IP: '无可用IP',
  UNKNOWN_ISP: '未知运营商',
  INVALID_REGION: '无效区域'
};

addEventListener('fetch', event => {
  event.respondWith(handleRequest(event.request));
});

async function handleRequest(request) {
  const clientInfo = {
    ip: request.headers.get('CF-Connecting-IP'),
    asn: request.cf.asn.toString(),
    region: request.cf.region,
    colo: request.cf.colo
  };

  try {
    const isp = determineISP(clientInfo.asn);
    const region = determineRegion(clientInfo);
    const bestIP = await selectBestIP(isp, region);

    return new Response(JSON.stringify({
      status: 'success',
      client: clientInfo,
      result: {
        isp: isp,
        region: region,
        ip: bestIP
      }
    }), {
      headers: {
        'content-type': 'application/json',
        'cache-control': 'max-age=300'
      }
    });
  } catch (error) {
    const status = error.message === ERRORS.NO_IP ? 503 : 500;
    return new Response(JSON.stringify({
      status: 'error',
      message: error.message,
      client: clientInfo
    }), {
      status: status,
      headers: { 'content-type': 'application/json' }
    });
  }
}

function determineISP(asn) {
  const isp = ASN_TO_ISP[asn];
  if (!isp) {
    throw new Error(ERRORS.UNKNOWN_ISP);
  }
  return isp;
}

function determineRegion(clientInfo) {
  const regionMap = {
    'SHA': 'EAST',   // 上海
    'BEJ': 'NORTH',  // 北京
    'GUD': 'SOUTH',  // 广东
    'HUB': 'CENTRAL' // 湖北
  };

  if (clientInfo.region && regionMap[clientInfo.region]) {
    return regionMap[clientInfo.region];
  }

  // 默认返回华东
  return 'EAST';
}

async function selectBestIP(isp, region) {
  let candidates = [];

  // 1. 优先选择同ISP同区域的IP
  if (IP_POOLS[isp] && IP_POOLS[isp][region] && IP_POOLS[isp][region].length > 0) {
    candidates = IP_POOLS[isp][region];
  }

  // 2. 如果没有找到,尝试同ISP其他区域
  if (candidates.length === 0 && IP_POOLS[isp]) {
    for (const r of REGIONS) {
      if (r !== region && IP_POOLS[isp][r] && IP_POOLS[isp][r].length > 0) {
        candidates = candidates.concat(IP_POOLS[isp][r]);
      }
    }
  }

  // 3. 如果还是没有,使用其他ISP的IP
  if (candidates.length === 0) {
    for (const otherIsp in IP_POOLS) {
      if (otherIsp !== isp && IP_POOLS[otherIsp][region] && IP_POOLS[otherIsp][region].length > 0) {
        candidates = candidates.concat(IP_POOLS[otherIsp][region]);
      }
    }
  }

  // 4. 如果还是没有找到可用IP,则抛出错误
  if (candidates.length === 0) {
    throw new Error(ERRORS.NO_IP);
  }

  // 随机选择一个IP,避免单点故障
  return candidates[Math.floor(Math.random() * candidates.length)];
}