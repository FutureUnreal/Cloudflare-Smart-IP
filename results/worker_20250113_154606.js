// IP池配置 - 更新时间: 2025-01-13T15:46:05.241695
const IP_POOLS = {
  "CHINA_TELECOM": {
    "EAST": [
      "104.22.63.128",
      "172.67.142.66",
      "172.65.56.1",
      "104.20.101.240",
      "172.66.211.213",
      "172.66.211.44",
      "104.20.78.158",
      "104.16.130.142",
      "104.24.248.217",
      "172.65.150.17",
      "172.66.211.114",
      "104.25.234.236"
    ],
    "SOUTH": [
      "172.65.88.134",
      "104.18.51.61",
      "104.21.30.254",
      "104.24.4.19",
      "172.67.14.200",
      "104.24.31.223"
    ],
    "NORTH": [
      "104.17.247.184",
      "172.65.1.226",
      "104.17.134.169",
      "104.19.191.250",
      "172.66.0.33",
      "172.66.139.219",
      "104.20.107.70",
      "104.18.246.46",
      "104.25.50.174",
      "104.27.42.74",
      "104.20.158.214",
      "104.25.155.78",
      "104.20.130.183",
      "104.24.237.27",
      "104.25.214.139",
      "104.20.6.41"
    ],
    "CENTRAL": [
      "104.19.51.16",
      "104.18.30.50",
      "104.22.29.6",
      "172.67.133.129",
      "172.65.16.93",
      "104.18.208.91",
      "104.17.206.31",
      "104.16.21.139",
      "104.16.18.140",
      "104.25.201.78",
      "104.24.42.126",
      "172.67.116.139",
      "104.20.132.120",
      "104.27.94.183"
    ],
    "SOUTHWEST": [
      "104.19.16.27",
      "104.17.136.211",
      "104.18.20.80",
      "104.18.127.201",
      "104.18.33.33",
      "104.21.28.254",
      "104.17.214.84",
      "104.17.6.198",
      "104.19.189.126",
      "104.25.150.235",
      "172.65.228.87",
      "104.19.176.147",
      "172.66.2.92",
      "104.27.88.72",
      "172.65.125.27",
      "172.65.167.228",
      "104.24.49.142",
      "104.27.18.127",
      "172.66.146.181"
    ],
    "NORTHWEST": [
      "104.19.23.6",
      "104.19.27.48",
      "104.21.20.88",
      "104.16.161.142",
      "104.22.77.43",
      "104.17.216.245",
      "172.65.214.134",
      "104.19.191.230",
      "172.67.10.249",
      "104.25.140.135",
      "104.24.79.244"
    ],
    "NORTHEAST": [
      "104.19.31.168",
      "172.67.209.12",
      "104.21.24.144",
      "104.17.69.111",
      "104.19.1.145",
      "104.25.22.119",
      "104.17.25.215",
      "104.17.187.171",
      "104.18.80.98",
      "104.24.236.199",
      "104.20.34.87"
    ]
  },
  "CHINA_UNICOM": {
    "EAST": [
      "172.67.108.0",
      "104.22.56.110",
      "104.18.127.201",
      "172.65.61.56",
      "172.67.94.234",
      "104.16.137.61",
      "104.19.212.70",
      "172.66.139.219",
      "104.19.176.147",
      "104.21.113.249",
      "104.24.49.142",
      "104.24.42.126"
    ],
    "SOUTH": [
      "104.17.77.210",
      "104.19.62.136",
      "104.16.244.190",
      "172.66.211.213",
      "104.16.161.142",
      "104.18.246.46",
      "172.67.209.12",
      "172.65.167.228",
      "172.67.10.249"
    ],
    "NORTH": [
      "104.16.50.110",
      "104.16.185.118",
      "104.17.188.245",
      "104.22.63.128",
      "104.18.51.61",
      "104.16.138.219",
      "104.18.246.147",
      "104.18.238.147",
      "172.65.97.26",
      "104.19.189.126",
      "172.66.168.115",
      "104.17.187.171",
      "104.21.30.254",
      "172.66.146.181",
      "104.27.94.183"
    ],
    "CENTRAL": [
      "104.18.38.183",
      "172.65.88.134",
      "104.22.6.205",
      "104.25.46.197",
      "104.20.183.64",
      "104.16.2.245",
      "104.17.214.84",
      "172.66.211.44",
      "104.19.191.250",
      "104.17.206.31",
      "172.66.0.33",
      "104.17.216.245",
      "172.65.214.134",
      "104.27.42.74",
      "172.66.211.114",
      "104.20.132.120",
      "104.24.79.244"
    ],
    "SOUTHWEST": [
      "104.25.135.86",
      "104.20.10.119",
      "104.25.30.42",
      "172.65.154.189",
      "104.17.12.4",
      "104.17.25.215",
      "104.22.77.43",
      "104.18.58.56",
      "104.25.50.174",
      "104.24.4.19"
    ],
    "NORTHWEST": [
      "172.65.1.226",
      "104.18.55.96",
      "104.19.27.48",
      "104.18.30.50",
      "104.24.131.14",
      "104.22.29.6",
      "104.18.20.80",
      "104.20.175.133",
      "104.20.159.108",
      "104.19.1.145",
      "104.20.78.158",
      "104.19.31.168",
      "104.16.21.139",
      "104.25.214.139"
    ],
    "NORTHEAST": [
      "104.19.23.6",
      "104.25.71.43",
      "104.19.81.40",
      "104.18.250.245",
      "104.16.18.140",
      "104.24.31.223"
    ]
  },
  "CHINA_MOBILE": {
    "EAST": [
      "104.16.255.209",
      "104.19.62.136",
      "104.16.50.110",
      "104.20.183.64",
      "104.21.127.27",
      "172.67.142.66",
      "172.65.228.87",
      "172.65.125.27",
      "104.20.34.87"
    ],
    "SOUTH": [
      "104.17.247.184",
      "104.25.30.42",
      "172.65.154.189",
      "104.20.101.240",
      "104.16.137.61",
      "104.20.107.70",
      "172.66.2.92",
      "104.24.248.217",
      "104.25.201.78"
    ],
    "NORTH": [
      "104.19.51.16",
      "172.66.131.74",
      "172.65.56.1"
    ],
    "CENTRAL": [
      "104.22.6.205",
      "104.24.71.9",
      "104.17.77.210",
      "104.17.188.245",
      "104.18.238.147",
      "104.19.212.70",
      "104.27.88.72",
      "172.67.222.85",
      "104.20.6.41",
      "104.25.140.135"
    ],
    "SOUTHWEST": [
      "104.20.10.119",
      "104.21.20.88",
      "172.67.94.234",
      "104.17.68.66",
      "104.18.208.91",
      "172.66.168.115",
      "104.25.150.235",
      "104.16.130.142",
      "104.19.191.230",
      "104.21.113.249",
      "104.25.155.78",
      "104.20.130.183"
    ],
    "NORTHWEST": [
      "104.25.22.119"
    ],
    "NORTHEAST": [
      "104.22.56.110",
      "172.67.133.129",
      "104.25.135.86",
      "104.17.12.4",
      "104.24.236.199"
    ]
  }
};

// ASN到运营商的映射
const ASN_TO_ISP = {
  // 电信
  '4134': 'CHINA_TELECOM',
  '4809': 'CHINA_TELECOM',
  // 联通
  '4837': 'CHINA_UNICOM', 
  '9929': 'CHINA_UNICOM',
  '4808': 'CHINA_UNICOM',
  // 移动
  '9808': 'CHINA_MOBILE',
  '56040': 'CHINA_MOBILE'
};

// 区域列表
const REGIONS = [
  'EAST',
  'NORTH', 
  'SOUTH',
  'CENTRAL',
  'SOUTHWEST',
  'NORTHWEST',
  'NORTHEAST'
];

// 错误类型定义
const ERRORS = {
  NO_IP: '无可用IP',
  UNKNOWN_ISP: '未知运营商',
  INVALID_REGION: '无效区域'
};

addEventListener('fetch', event => {
  event.respondWith(handleRequest(event.request));
});

async function handleRequest(request) {
  const clientInfo = {
    ip: request.headers.get('CF-Connecting-IP'),
    asn: request.cf.asn.toString(),
    region: request.cf.region,
    colo: request.cf.colo
  };

  try {
    const isp = determineISP(clientInfo.asn);
    const region = determineRegion(clientInfo);
    const bestIP = await selectBestIP(isp, region);

    return new Response(JSON.stringify({
      status: 'success',
      client: clientInfo,
      result: {
        isp: isp,
        region: region,
        ip: bestIP
      }
    }), {
      headers: {
        'content-type': 'application/json',
        'cache-control': 'max-age=300'
      }
    });
  } catch (error) {
    const status = error.message === ERRORS.NO_IP ? 503 : 500;
    return new Response(JSON.stringify({
      status: 'error',
      message: error.message,
      client: clientInfo
    }), {
      status: status,
      headers: { 'content-type': 'application/json' }
    });
  }
}

function determineISP(asn) {
  const isp = ASN_TO_ISP[asn];
  if (!isp) {
    throw new Error(ERRORS.UNKNOWN_ISP);
  }
  return isp;
}

function determineRegion(clientInfo) {
  const regionMap = {
    'SHA': 'EAST',   // 上海
    'BEJ': 'NORTH',  // 北京
    'GUD': 'SOUTH',  // 广东
    'HUB': 'CENTRAL' // 湖北
  };

  if (clientInfo.region && regionMap[clientInfo.region]) {
    return regionMap[clientInfo.region];
  }

  // 默认返回华东
  return 'EAST';
}

async function selectBestIP(isp, region) {
  let candidates = [];

  // 1. 优先选择同ISP同区域的IP
  if (IP_POOLS[isp] && IP_POOLS[isp][region] && IP_POOLS[isp][region].length > 0) {
    candidates = IP_POOLS[isp][region];
  }

  // 2. 如果没有找到,尝试同ISP其他区域
  if (candidates.length === 0 && IP_POOLS[isp]) {
    for (const r of REGIONS) {
      if (r !== region && IP_POOLS[isp][r] && IP_POOLS[isp][r].length > 0) {
        candidates = candidates.concat(IP_POOLS[isp][r]);
      }
    }
  }

  // 3. 如果还是没有,使用其他ISP的IP
  if (candidates.length === 0) {
    for (const otherIsp in IP_POOLS) {
      if (otherIsp !== isp && IP_POOLS[otherIsp][region] && IP_POOLS[otherIsp][region].length > 0) {
        candidates = candidates.concat(IP_POOLS[otherIsp][region]);
      }
    }
  }

  // 4. 如果还是没有找到可用IP,则抛出错误
  if (candidates.length === 0) {
    throw new Error(ERRORS.NO_IP);
  }

  // 随机选择一个IP,避免单点故障
  return candidates[Math.floor(Math.random() * candidates.length)];
}