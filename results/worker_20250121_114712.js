// IP池配置 - 更新时间: 2025-01-21T11:47:00.639535
const IP_POOLS = {
  "CHINA_TELECOM": {
    "EAST": [
      "104.18.170.139",
      "104.19.134.126",
      "104.18.18.1",
      "172.67.46.143",
      "172.65.101.114",
      "172.65.12.115",
      "104.24.32.40",
      "104.18.87.74",
      "104.16.7.140",
      "104.25.191.98",
      "104.24.156.206",
      "104.25.211.7",
      "104.24.33.203",
      "104.20.94.221",
      "104.20.251.108",
      "104.27.10.175"
    ],
    "SOUTH": [
      "104.16.65.179",
      "104.16.213.129",
      "104.18.116.242",
      "172.65.86.195",
      "172.65.228.139",
      "104.17.76.52",
      "104.21.0.176",
      "104.21.44.248",
      "172.67.108.0",
      "104.19.221.186",
      "104.25.175.229",
      "104.17.154.48",
      "104.24.217.168",
      "104.16.24.117",
      "104.20.135.67",
      "104.20.86.0",
      "104.24.141.125",
      "172.67.88.243",
      "104.24.60.44"
    ],
    "NORTH": [
      "104.18.99.161",
      "104.17.189.14",
      "104.21.127.144",
      "104.19.24.61",
      "104.19.244.42",
      "104.16.112.76",
      "104.17.203.19",
      "104.20.59.142",
      "172.65.110.193",
      "104.20.208.47",
      "172.66.153.110",
      "104.24.18.225",
      "104.20.162.94",
      "104.24.215.255",
      "104.20.140.250",
      "104.19.17.133",
      "104.24.40.63",
      "104.25.102.252",
      "172.65.168.67",
      "104.24.63.144"
    ],
    "CENTRAL": [
      "104.17.156.195",
      "104.19.133.205",
      "104.22.16.107",
      "172.67.163.17",
      "104.24.92.101",
      "104.19.45.125",
      "172.65.201.179",
      "104.20.46.3",
      "104.16.250.185",
      "104.20.11.172",
      "104.18.158.139",
      "104.19.0.99",
      "104.19.90.238",
      "104.25.72.194",
      "104.22.68.14",
      "172.65.77.165",
      "104.22.67.74"
    ],
    "SOUTHWEST": [
      "104.19.125.216",
      "104.18.207.28",
      "104.16.50.121",
      "172.65.81.38",
      "104.16.170.120",
      "104.17.72.35",
      "104.17.135.53",
      "104.18.4.112",
      "104.21.29.139",
      "104.25.3.63",
      "172.65.112.26",
      "104.19.46.184",
      "104.19.189.194",
      "104.25.125.57",
      "104.24.252.189",
      "172.65.183.218",
      "104.24.50.183"
    ],
    "NORTHWEST": [
      "104.21.38.232",
      "104.22.49.186",
      "104.19.203.52",
      "172.66.129.168",
      "104.17.26.230",
      "104.16.186.236",
      "172.65.116.42"
    ],
    "NORTHEAST": [
      "104.16.230.96",
      "104.17.209.188",
      "104.18.77.237",
      "104.16.127.56",
      "172.67.63.177",
      "104.27.30.224",
      "104.19.38.36",
      "104.24.161.106",
      "104.20.23.68",
      "104.27.51.139",
      "104.16.241.8",
      "104.24.203.118",
      "104.25.88.72",
      "104.25.199.150",
      "104.20.34.137",
      "104.25.119.237",
      "172.65.147.97",
      "104.24.42.208"
    ]
  },
  "CHINA_UNICOM": {
    "EAST": [
      "172.65.228.139",
      "104.16.51.232",
      "104.18.18.1",
      "104.19.24.61",
      "104.18.13.192",
      "104.19.134.126",
      "104.17.72.35",
      "104.21.0.176",
      "104.25.3.63",
      "104.19.221.186",
      "104.20.11.172",
      "104.16.24.117",
      "104.20.162.94",
      "104.20.251.108",
      "104.24.40.63",
      "104.24.141.125"
    ],
    "SOUTH": [
      "104.19.38.238",
      "172.67.60.113",
      "104.22.35.229",
      "104.16.6.122",
      "104.18.116.242",
      "172.65.12.115",
      "104.25.66.62",
      "104.16.213.129",
      "104.17.203.19",
      "172.67.63.177",
      "104.18.158.139",
      "104.16.241.8",
      "104.19.90.238",
      "104.25.211.7",
      "104.22.68.14",
      "172.65.77.165",
      "172.65.129.208",
      "104.27.7.213"
    ],
    "NORTH": [
      "104.18.99.121",
      "104.21.38.232",
      "172.67.46.143",
      "104.20.100.124",
      "172.65.86.195",
      "172.65.63.223",
      "104.18.77.237",
      "104.19.125.216",
      "104.19.38.36",
      "104.24.217.168",
      "104.16.7.140",
      "104.18.87.74",
      "104.16.250.185",
      "104.19.0.99",
      "104.20.135.67",
      "104.24.18.225",
      "104.25.102.252",
      "104.25.119.237",
      "104.24.60.44",
      "172.65.147.97"
    ],
    "CENTRAL": [
      "172.67.139.168",
      "104.16.230.96",
      "104.22.16.107",
      "104.18.125.89",
      "172.65.81.38",
      "104.17.76.52",
      "104.18.242.238",
      "104.18.101.159",
      "172.66.129.168",
      "104.27.30.224",
      "172.65.112.26",
      "104.20.59.142",
      "172.65.110.193",
      "104.20.23.68",
      "104.19.189.194",
      "104.24.252.189",
      "104.24.156.206",
      "104.24.33.203",
      "104.20.94.221",
      "104.25.199.150"
    ],
    "SOUTHWEST": [
      "104.17.189.14",
      "104.18.170.139",
      "104.27.3.6",
      "104.16.170.120",
      "104.18.4.112",
      "104.21.29.139",
      "104.16.127.56",
      "104.21.44.248",
      "104.17.156.195",
      "172.67.163.17",
      "104.17.135.53",
      "104.19.203.52",
      "104.17.154.48",
      "104.25.191.98",
      "104.24.203.118",
      "104.24.215.255",
      "104.24.42.208"
    ],
    "NORTHWEST": [
      "172.65.101.114",
      "104.22.49.186",
      "104.21.92.29",
      "104.18.99.161",
      "104.16.65.179",
      "104.19.244.42",
      "104.24.32.40",
      "172.65.201.179",
      "104.20.208.47",
      "104.17.26.230",
      "104.25.125.57",
      "104.16.186.236",
      "104.20.86.0",
      "104.25.72.194",
      "104.25.88.72",
      "104.20.34.137",
      "104.24.63.144",
      "172.67.88.243",
      "104.24.50.183",
      "172.65.116.42"
    ],
    "NORTHEAST": [
      "104.16.93.39",
      "104.21.127.144",
      "104.27.119.195",
      "104.19.45.125",
      "104.27.51.139",
      "104.20.140.250",
      "104.22.67.74"
    ]
  },
  "CHINA_MOBILE": {
    "EAST": [
      "104.17.209.188",
      "104.22.35.229",
      "104.27.119.195",
      "172.67.60.113",
      "104.24.92.101",
      "104.26.14.205"
    ],
    "SOUTH": [
      "104.16.112.76",
      "104.18.242.238",
      "104.27.3.6",
      "172.65.183.218"
    ],
    "NORTH": [
      "104.18.13.192",
      "104.25.81.158",
      "104.16.93.39",
      "104.24.161.106",
      "104.24.49.4"
    ],
    "CENTRAL": [
      "104.16.6.122",
      "104.25.66.62",
      "172.67.139.168",
      "104.25.175.229"
    ],
    "SOUTHWEST": [
      "172.66.174.241",
      "104.18.125.89",
      "172.66.153.110"
    ],
    "NORTHWEST": [
      "104.18.101.159",
      "104.18.56.196"
    ],
    "NORTHEAST": [
      "104.19.38.238",
      "104.18.99.121",
      "104.21.92.29",
      "104.19.133.205",
      "104.19.17.133"
    ]
  }
};

// ASN到运营商的映射
const ASN_TO_ISP = {
  // 电信
  '4134': 'CHINA_TELECOM',
  '4809': 'CHINA_TELECOM',
  // 联通
  '4837': 'CHINA_UNICOM', 
  '9929': 'CHINA_UNICOM',
  '4808': 'CHINA_UNICOM',
  // 移动
  '9808': 'CHINA_MOBILE',
  '56040': 'CHINA_MOBILE'
};

// 区域列表
const REGIONS = [
  'EAST',
  'NORTH', 
  'SOUTH',
  'CENTRAL',
  'SOUTHWEST',
  'NORTHWEST',
  'NORTHEAST'
];

// 错误类型定义
const ERRORS = {
  NO_IP: '无可用IP',
  UNKNOWN_ISP: '未知运营商',
  INVALID_REGION: '无效区域'
};

addEventListener('fetch', event => {
  event.respondWith(handleRequest(event.request));
});

async function handleRequest(request) {
  const clientInfo = {
    ip: request.headers.get('CF-Connecting-IP'),
    asn: request.cf.asn.toString(),
    region: request.cf.region,
    colo: request.cf.colo
  };

  try {
    const isp = determineISP(clientInfo.asn);
    const region = determineRegion(clientInfo);
    const bestIP = await selectBestIP(isp, region);

    return new Response(JSON.stringify({
      status: 'success',
      client: clientInfo,
      result: {
        isp: isp,
        region: region,
        ip: bestIP
      }
    }), {
      headers: {
        'content-type': 'application/json',
        'cache-control': 'max-age=300'
      }
    });
  } catch (error) {
    const status = error.message === ERRORS.NO_IP ? 503 : 500;
    return new Response(JSON.stringify({
      status: 'error',
      message: error.message,
      client: clientInfo
    }), {
      status: status,
      headers: { 'content-type': 'application/json' }
    });
  }
}

function determineISP(asn) {
  const isp = ASN_TO_ISP[asn];
  if (!isp) {
    throw new Error(ERRORS.UNKNOWN_ISP);
  }
  return isp;
}

function determineRegion(clientInfo) {
  const regionMap = {
    'SHA': 'EAST',   // 上海
    'BEJ': 'NORTH',  // 北京
    'GUD': 'SOUTH',  // 广东
    'HUB': 'CENTRAL' // 湖北
  };

  if (clientInfo.region && regionMap[clientInfo.region]) {
    return regionMap[clientInfo.region];
  }

  // 默认返回华东
  return 'EAST';
}

async function selectBestIP(isp, region) {
  let candidates = [];

  // 1. 优先选择同ISP同区域的IP
  if (IP_POOLS[isp] && IP_POOLS[isp][region] && IP_POOLS[isp][region].length > 0) {
    candidates = IP_POOLS[isp][region];
  }

  // 2. 如果没有找到,尝试同ISP其他区域
  if (candidates.length === 0 && IP_POOLS[isp]) {
    for (const r of REGIONS) {
      if (r !== region && IP_POOLS[isp][r] && IP_POOLS[isp][r].length > 0) {
        candidates = candidates.concat(IP_POOLS[isp][r]);
      }
    }
  }

  // 3. 如果还是没有,使用其他ISP的IP
  if (candidates.length === 0) {
    for (const otherIsp in IP_POOLS) {
      if (otherIsp !== isp && IP_POOLS[otherIsp][region] && IP_POOLS[otherIsp][region].length > 0) {
        candidates = candidates.concat(IP_POOLS[otherIsp][region]);
      }
    }
  }

  // 4. 如果还是没有找到可用IP,则抛出错误
  if (candidates.length === 0) {
    throw new Error(ERRORS.NO_IP);
  }

  // 随机选择一个IP,避免单点故障
  return candidates[Math.floor(Math.random() * candidates.length)];
}