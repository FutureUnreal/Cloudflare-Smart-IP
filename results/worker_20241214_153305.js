// IP池配置 - 更新时间: 2024-12-14T15:33:04.146129
const IP_POOLS = {
  "CHINA_TELECOM": {
    "EAST": [
      "104.16.148.168",
      "104.17.65.249",
      "188.114.97.5",
      "172.67.244.98",
      "104.17.245.247",
      "104.20.166.253",
      "104.17.249.45",
      "104.17.100.220",
      "104.20.226.28",
      "104.16.247.178",
      "104.20.228.76",
      "104.20.94.67",
      "172.65.109.136",
      "172.65.113.172"
    ],
    "SOUTH": [
      "172.65.209.243",
      "104.16.171.113",
      "104.18.36.108",
      "104.19.173.95",
      "104.21.124.77",
      "104.21.38.190",
      "104.25.140.8",
      "104.24.195.137",
      "104.27.98.206",
      "104.24.197.25",
      "104.18.91.14",
      "104.19.1.174",
      "172.67.13.109",
      "172.67.73.247",
      "104.20.230.109",
      "104.20.90.213"
    ],
    "NORTH": [
      "172.65.25.199",
      "104.21.209.138",
      "104.18.38.74",
      "104.22.60.6",
      "172.67.108.254",
      "104.17.31.112",
      "104.24.182.52",
      "104.27.80.35",
      "104.19.105.107",
      "172.67.100.59",
      "104.20.213.141",
      "104.22.43.238",
      "104.27.67.50"
    ],
    "CENTRAL": [
      "104.17.239.232",
      "104.17.165.81",
      "172.67.192.109",
      "104.21.38.220",
      "172.65.60.150",
      "172.67.177.19",
      "104.21.22.157",
      "104.20.217.96",
      "172.65.215.150",
      "104.17.103.79",
      "172.66.156.162",
      "104.25.43.54"
    ],
    "SOUTHWEST": [
      "104.17.212.43",
      "172.67.21.108",
      "104.25.123.13",
      "104.24.234.82",
      "104.22.15.208",
      "104.21.235.241"
    ],
    "NORTHWEST": [
      "172.65.43.194",
      "172.67.38.228",
      "104.18.32.218",
      "104.19.1.190",
      "172.67.116.7",
      "172.65.106.154",
      "104.20.154.52",
      "104.19.67.48"
    ],
    "NORTHEAST": [
      "104.18.249.101",
      "104.16.107.65",
      "172.65.49.122",
      "172.67.140.23",
      "172.66.150.20",
      "104.24.68.131",
      "104.25.51.96",
      "104.25.254.51",
      "104.27.121.136",
      "104.24.186.203"
    ]
  },
  "CHINA_UNICOM": {
    "EAST": [
      "104.24.225.34",
      "172.65.209.243",
      "104.16.64.30",
      "104.25.124.220",
      "172.67.244.98",
      "104.17.239.232",
      "188.114.97.5",
      "104.19.57.14",
      "104.16.107.65",
      "172.67.21.108",
      "172.67.108.254",
      "104.16.181.152",
      "104.25.91.144",
      "104.27.98.206",
      "172.65.215.150",
      "104.20.226.28",
      "104.21.55.83",
      "172.65.25.199",
      "172.65.60.150",
      "104.21.124.77"
    ],
    "SOUTH": [
      "104.18.38.74",
      "104.19.173.95",
      "104.18.132.252",
      "104.22.60.6",
      "104.24.213.205",
      "104.19.47.115",
      "172.67.38.228",
      "104.16.49.91",
      "104.26.4.170",
      "104.27.13.40",
      "104.20.217.96",
      "104.19.1.190",
      "104.19.1.174"
    ],
    "NORTH": [
      "172.66.128.203",
      "104.19.226.154",
      "104.24.222.65",
      "104.25.237.142",
      "104.18.249.101",
      "104.17.31.112",
      "104.24.197.25",
      "104.18.91.14",
      "104.17.100.220",
      "172.67.192.109"
    ],
    "CENTRAL": [
      "104.27.18.121",
      "104.18.250.124",
      "104.25.222.188",
      "172.65.54.20",
      "104.24.182.52",
      "104.25.123.13",
      "104.22.15.208"
    ],
    "SOUTHWEST": [
      "172.65.105.166",
      "104.21.217.222",
      "172.66.133.153",
      "104.25.188.159",
      "104.19.221.217",
      "104.25.68.3",
      "104.25.140.8",
      "104.16.148.168",
      "1.0.0.128",
      "104.19.79.52",
      "172.67.140.23",
      "104.20.94.67",
      "172.65.109.136",
      "104.22.43.238",
      "104.20.154.52",
      "104.19.67.48"
    ],
    "NORTHWEST": [
      "172.65.127.50",
      "172.67.27.228",
      "104.17.109.79",
      "104.16.163.128",
      "104.18.32.218",
      "104.18.36.108",
      "172.67.168.190",
      "172.66.150.20",
      "172.65.49.122",
      "104.21.3.222",
      "104.21.235.241"
    ],
    "NORTHEAST": [
      "104.21.44.6",
      "104.16.69.79",
      "104.25.43.54",
      "104.25.254.51"
    ]
  },
  "CHINA_MOBILE": {
    "EAST": [
      "104.24.19.144",
      "104.19.196.177",
      "104.24.129.228",
      "104.16.49.91",
      "104.19.226.154",
      "104.24.222.65",
      "104.21.55.83",
      "172.67.177.19",
      "104.24.234.82"
    ],
    "SOUTH": [
      "104.18.41.136",
      "104.17.65.249",
      "104.19.79.52",
      "172.67.13.109",
      "104.20.213.141",
      "104.27.121.136"
    ],
    "NORTH": [
      "104.19.1.111",
      "172.66.133.153",
      "172.65.20.120",
      "172.65.54.20",
      "104.24.195.137",
      "172.67.168.190",
      "104.24.186.203"
    ],
    "CENTRAL": [
      "172.65.63.20",
      "104.20.84.218",
      "104.25.124.220",
      "172.65.127.50",
      "104.17.249.45",
      "104.20.228.76",
      "172.67.73.247"
    ],
    "SOUTHWEST": [
      "104.18.181.104",
      "104.19.53.102",
      "104.17.165.81",
      "172.67.199.148",
      "104.24.232.148",
      "172.67.226.140",
      "104.18.132.252",
      "104.27.18.121",
      "104.25.91.144",
      "172.66.156.162",
      "172.65.113.172",
      "172.67.116.7",
      "172.65.106.154"
    ],
    "NORTHWEST": [
      "104.17.245.247",
      "104.25.51.96"
    ],
    "NORTHEAST": [
      "104.17.212.43",
      "104.25.205.21",
      "104.27.69.244",
      "104.17.203.171",
      "104.25.68.3",
      "1.0.0.128",
      "104.19.105.107",
      "104.24.68.131",
      "104.20.230.109"
    ]
  }
};

// ASN到运营商的映射
const ASN_TO_ISP = {
  // 电信
  '4134': 'CHINA_TELECOM',
  '4809': 'CHINA_TELECOM',
  // 联通
  '4837': 'CHINA_UNICOM', 
  '9929': 'CHINA_UNICOM',
  '4808': 'CHINA_UNICOM',
  // 移动
  '9808': 'CHINA_MOBILE',
  '56040': 'CHINA_MOBILE'
};

// 区域列表
const REGIONS = [
  'EAST',
  'NORTH', 
  'SOUTH',
  'CENTRAL',
  'SOUTHWEST',
  'NORTHWEST',
  'NORTHEAST'
];

// 错误类型定义
const ERRORS = {
  NO_IP: '无可用IP',
  UNKNOWN_ISP: '未知运营商',
  INVALID_REGION: '无效区域'
};

addEventListener('fetch', event => {
  event.respondWith(handleRequest(event.request));
});

async function handleRequest(request) {
  const clientInfo = {
    ip: request.headers.get('CF-Connecting-IP'),
    asn: request.cf.asn.toString(),
    region: request.cf.region,
    colo: request.cf.colo
  };

  try {
    const isp = determineISP(clientInfo.asn);
    const region = determineRegion(clientInfo);
    const bestIP = await selectBestIP(isp, region);

    return new Response(JSON.stringify({
      status: 'success',
      client: clientInfo,
      result: {
        isp: isp,
        region: region,
        ip: bestIP
      }
    }), {
      headers: {
        'content-type': 'application/json',
        'cache-control': 'max-age=300'
      }
    });
  } catch (error) {
    const status = error.message === ERRORS.NO_IP ? 503 : 500;
    return new Response(JSON.stringify({
      status: 'error',
      message: error.message,
      client: clientInfo
    }), {
      status: status,
      headers: { 'content-type': 'application/json' }
    });
  }
}

function determineISP(asn) {
  const isp = ASN_TO_ISP[asn];
  if (!isp) {
    throw new Error(ERRORS.UNKNOWN_ISP);
  }
  return isp;
}

function determineRegion(clientInfo) {
  const regionMap = {
    'SHA': 'EAST',   // 上海
    'BEJ': 'NORTH',  // 北京
    'GUD': 'SOUTH',  // 广东
    'HUB': 'CENTRAL' // 湖北
  };

  if (clientInfo.region && regionMap[clientInfo.region]) {
    return regionMap[clientInfo.region];
  }

  // 默认返回华东
  return 'EAST';
}

async function selectBestIP(isp, region) {
  let candidates = [];

  // 1. 优先选择同ISP同区域的IP
  if (IP_POOLS[isp] && IP_POOLS[isp][region] && IP_POOLS[isp][region].length > 0) {
    candidates = IP_POOLS[isp][region];
  }

  // 2. 如果没有找到,尝试同ISP其他区域
  if (candidates.length === 0 && IP_POOLS[isp]) {
    for (const r of REGIONS) {
      if (r !== region && IP_POOLS[isp][r] && IP_POOLS[isp][r].length > 0) {
        candidates = candidates.concat(IP_POOLS[isp][r]);
      }
    }
  }

  // 3. 如果还是没有,使用其他ISP的IP
  if (candidates.length === 0) {
    for (const otherIsp in IP_POOLS) {
      if (otherIsp !== isp && IP_POOLS[otherIsp][region] && IP_POOLS[otherIsp][region].length > 0) {
        candidates = candidates.concat(IP_POOLS[otherIsp][region]);
      }
    }
  }

  // 4. 如果还是没有找到可用IP,则抛出错误
  if (candidates.length === 0) {
    throw new Error(ERRORS.NO_IP);
  }

  // 随机选择一个IP,避免单点故障
  return candidates[Math.floor(Math.random() * candidates.length)];
}