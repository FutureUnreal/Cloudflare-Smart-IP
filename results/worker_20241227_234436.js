// IP池配置 - 更新时间: 2024-12-27T23:44:35.461524
const IP_POOLS = {
  "CHINA_TELECOM": {
    "EAST": [
      "104.16.68.50",
      "104.17.124.31",
      "104.16.67.29",
      "104.17.173.142",
      "104.17.172.117",
      "104.18.249.160",
      "104.19.179.80",
      "104.17.73.138",
      "104.18.169.45",
      "104.20.180.254",
      "172.67.227.162",
      "104.27.24.85",
      "172.67.247.86"
    ],
    "SOUTH": [
      "104.17.220.17",
      "104.17.97.249",
      "104.19.232.29",
      "104.18.14.38",
      "104.16.247.31",
      "104.16.115.33",
      "104.22.60.152",
      "172.67.254.4",
      "104.21.46.125",
      "104.21.46.54",
      "104.20.102.144",
      "104.27.51.119",
      "104.21.15.139",
      "104.21.223.128",
      "104.20.143.255",
      "104.24.255.106",
      "172.66.207.1",
      "104.25.43.183",
      "104.25.218.54"
    ],
    "NORTH": [
      "172.65.3.238",
      "104.16.6.50",
      "104.16.176.80",
      "104.18.207.26",
      "172.65.206.129",
      "104.17.74.50",
      "172.67.23.23",
      "172.67.22.162",
      "104.17.249.18",
      "104.25.236.129",
      "104.25.83.8",
      "104.22.64.168",
      "172.65.137.235",
      "172.67.88.191",
      "104.25.149.170",
      "172.65.136.203",
      "104.25.190.192",
      "104.25.190.169",
      "104.20.249.76",
      "104.25.73.76"
    ],
    "CENTRAL": [
      "104.19.164.42",
      "104.17.151.148",
      "104.18.3.83",
      "104.16.157.153",
      "104.19.23.76",
      "104.16.137.141",
      "104.16.33.108",
      "188.114.97.74",
      "104.20.231.227",
      "104.24.248.212",
      "104.20.58.253",
      "104.25.185.54",
      "104.20.200.231",
      "104.25.160.183",
      "104.21.102.219",
      "104.20.181.170",
      "104.21.62.34",
      "104.25.48.115",
      "104.27.12.227",
      "104.20.234.63"
    ],
    "SOUTHWEST": [
      "104.16.78.172",
      "104.18.130.247",
      "104.19.157.60",
      "104.19.225.39",
      "104.21.233.42",
      "104.19.214.87",
      "104.17.50.236",
      "172.67.37.198",
      "104.17.238.25",
      "104.18.119.10",
      "104.18.118.17",
      "104.20.90.228",
      "172.65.32.250",
      "172.65.3.59",
      "172.65.165.134",
      "104.20.25.4",
      "104.20.53.127",
      "172.65.69.36",
      "104.25.99.150"
    ],
    "NORTHWEST": [
      "104.17.18.155",
      "104.18.76.33",
      "104.18.176.190",
      "104.22.61.56",
      "104.18.65.177",
      "104.17.40.63",
      "172.65.16.255",
      "1.0.0.148",
      "104.19.8.16",
      "104.27.23.62",
      "104.27.22.169",
      "104.24.160.82",
      "172.65.92.9",
      "172.67.110.14",
      "104.17.73.171",
      "104.25.209.127",
      "104.25.124.83",
      "172.65.152.43",
      "104.25.104.97",
      "104.25.147.109"
    ],
    "NORTHEAST": [
      "104.19.189.205",
      "104.17.226.186",
      "104.18.111.195",
      "104.18.101.69",
      "104.19.200.113",
      "104.18.148.70",
      "104.17.175.24",
      "104.21.43.242",
      "104.17.211.155",
      "172.67.145.9",
      "104.16.208.28",
      "104.20.97.7",
      "104.20.154.149",
      "104.24.248.56",
      "104.20.190.65",
      "104.20.63.112",
      "104.27.92.78",
      "104.24.82.190",
      "172.67.117.130"
    ]
  },
  "CHINA_UNICOM": {
    "EAST": [
      "104.17.97.249",
      "104.19.164.42",
      "104.17.226.186",
      "104.17.211.155",
      "104.18.3.83",
      "104.17.173.142",
      "104.17.18.155",
      "104.18.249.160",
      "104.19.189.205",
      "104.19.214.87",
      "104.17.50.236",
      "104.22.61.56",
      "104.20.231.227",
      "172.65.16.255",
      "104.24.248.212",
      "104.25.236.129",
      "104.27.24.85",
      "104.25.149.170",
      "104.21.223.128",
      "104.24.248.56"
    ],
    "SOUTH": [
      "104.16.67.29",
      "104.19.179.80",
      "104.16.6.50",
      "172.67.22.162",
      "172.67.37.198",
      "104.21.46.54",
      "172.65.137.235",
      "104.20.102.144",
      "104.21.15.139",
      "104.24.255.106",
      "104.20.181.170",
      "104.27.22.169",
      "104.20.190.65",
      "104.24.160.82",
      "172.65.32.250",
      "104.20.3.169",
      "172.65.3.59",
      "104.27.92.78",
      "104.20.25.4",
      "172.65.152.43"
    ],
    "NORTH": [
      "104.18.101.69",
      "104.16.247.31",
      "104.16.115.33",
      "104.16.157.153",
      "104.21.233.42",
      "104.17.238.25",
      "104.19.200.113",
      "172.67.227.162",
      "172.67.254.4",
      "1.0.0.148",
      "104.22.64.168",
      "104.20.58.253",
      "172.65.136.203",
      "104.25.160.183",
      "104.20.234.63",
      "104.25.43.183",
      "104.20.249.76",
      "104.25.218.54"
    ],
    "CENTRAL": [
      "104.17.172.117",
      "104.17.74.50",
      "104.17.220.17",
      "172.67.145.9",
      "104.19.157.60",
      "104.18.76.33",
      "104.18.176.190",
      "104.17.40.63",
      "104.19.8.16",
      "172.67.88.191",
      "172.67.247.86",
      "104.20.200.231",
      "104.20.143.255",
      "104.20.97.7",
      "172.66.207.1",
      "104.20.154.149",
      "104.25.190.169",
      "104.27.12.227",
      "172.67.110.14"
    ],
    "SOUTHWEST": [
      "104.18.14.38",
      "104.16.78.172",
      "104.22.60.152",
      "104.16.208.28",
      "104.17.151.148",
      "172.67.23.23",
      "104.18.65.177",
      "104.18.207.26",
      "104.20.180.254",
      "104.17.124.31",
      "104.25.83.8",
      "104.18.130.247",
      "104.20.89.60",
      "104.20.59.74",
      "104.20.107.250"
    ],
    "NORTHWEST": [
      "104.18.169.45",
      "104.19.225.39",
      "104.21.43.242",
      "104.19.23.76",
      "104.16.137.141",
      "104.18.118.17",
      "104.17.249.18",
      "104.16.176.80",
      "104.21.46.125",
      "104.27.51.119",
      "104.21.102.219",
      "104.27.23.62",
      "104.25.61.251",
      "104.25.85.245",
      "104.24.82.190",
      "104.20.63.112",
      "104.20.74.80",
      "172.65.69.36",
      "104.25.99.150",
      "172.67.117.130"
    ],
    "NORTHEAST": [
      "188.114.97.74",
      "104.18.111.195",
      "104.17.73.138",
      "104.18.119.10",
      "172.65.206.129",
      "104.25.48.115",
      "104.20.90.228",
      "172.65.165.134"
    ]
  },
  "CHINA_MOBILE": {
    "EAST": [],
    "SOUTH": [
      "104.18.148.70"
    ],
    "NORTH": [
      "104.25.185.54",
      "104.25.190.192",
      "104.21.62.34"
    ],
    "CENTRAL": [
      "172.65.3.238",
      "104.16.33.108",
      "172.65.92.9",
      "172.65.178.115"
    ],
    "SOUTHWEST": [
      "104.16.157.153"
    ],
    "NORTHWEST": [
      "172.66.142.205",
      "172.67.57.183"
    ],
    "NORTHEAST": []
  }
};

// ASN到运营商的映射
const ASN_TO_ISP = {
  // 电信
  '4134': 'CHINA_TELECOM',
  '4809': 'CHINA_TELECOM',
  // 联通
  '4837': 'CHINA_UNICOM', 
  '9929': 'CHINA_UNICOM',
  '4808': 'CHINA_UNICOM',
  // 移动
  '9808': 'CHINA_MOBILE',
  '56040': 'CHINA_MOBILE'
};

// 区域列表
const REGIONS = [
  'EAST',
  'NORTH', 
  'SOUTH',
  'CENTRAL',
  'SOUTHWEST',
  'NORTHWEST',
  'NORTHEAST'
];

// 错误类型定义
const ERRORS = {
  NO_IP: '无可用IP',
  UNKNOWN_ISP: '未知运营商',
  INVALID_REGION: '无效区域'
};

addEventListener('fetch', event => {
  event.respondWith(handleRequest(event.request));
});

async function handleRequest(request) {
  const clientInfo = {
    ip: request.headers.get('CF-Connecting-IP'),
    asn: request.cf.asn.toString(),
    region: request.cf.region,
    colo: request.cf.colo
  };

  try {
    const isp = determineISP(clientInfo.asn);
    const region = determineRegion(clientInfo);
    const bestIP = await selectBestIP(isp, region);

    return new Response(JSON.stringify({
      status: 'success',
      client: clientInfo,
      result: {
        isp: isp,
        region: region,
        ip: bestIP
      }
    }), {
      headers: {
        'content-type': 'application/json',
        'cache-control': 'max-age=300'
      }
    });
  } catch (error) {
    const status = error.message === ERRORS.NO_IP ? 503 : 500;
    return new Response(JSON.stringify({
      status: 'error',
      message: error.message,
      client: clientInfo
    }), {
      status: status,
      headers: { 'content-type': 'application/json' }
    });
  }
}

function determineISP(asn) {
  const isp = ASN_TO_ISP[asn];
  if (!isp) {
    throw new Error(ERRORS.UNKNOWN_ISP);
  }
  return isp;
}

function determineRegion(clientInfo) {
  const regionMap = {
    'SHA': 'EAST',   // 上海
    'BEJ': 'NORTH',  // 北京
    'GUD': 'SOUTH',  // 广东
    'HUB': 'CENTRAL' // 湖北
  };

  if (clientInfo.region && regionMap[clientInfo.region]) {
    return regionMap[clientInfo.region];
  }

  // 默认返回华东
  return 'EAST';
}

async function selectBestIP(isp, region) {
  let candidates = [];

  // 1. 优先选择同ISP同区域的IP
  if (IP_POOLS[isp] && IP_POOLS[isp][region] && IP_POOLS[isp][region].length > 0) {
    candidates = IP_POOLS[isp][region];
  }

  // 2. 如果没有找到,尝试同ISP其他区域
  if (candidates.length === 0 && IP_POOLS[isp]) {
    for (const r of REGIONS) {
      if (r !== region && IP_POOLS[isp][r] && IP_POOLS[isp][r].length > 0) {
        candidates = candidates.concat(IP_POOLS[isp][r]);
      }
    }
  }

  // 3. 如果还是没有,使用其他ISP的IP
  if (candidates.length === 0) {
    for (const otherIsp in IP_POOLS) {
      if (otherIsp !== isp && IP_POOLS[otherIsp][region] && IP_POOLS[otherIsp][region].length > 0) {
        candidates = candidates.concat(IP_POOLS[otherIsp][region]);
      }
    }
  }

  // 4. 如果还是没有找到可用IP,则抛出错误
  if (candidates.length === 0) {
    throw new Error(ERRORS.NO_IP);
  }

  // 随机选择一个IP,避免单点故障
  return candidates[Math.floor(Math.random() * candidates.length)];
}