// IP池配置 - 更新时间: 2024-12-29T11:46:43.271153
const IP_POOLS = {
  "CHINA_TELECOM": {
    "EAST": [
      "108.162.193.62",
      "104.16.105.72",
      "104.19.122.129",
      "104.19.188.35",
      "172.65.58.129",
      "104.21.84.222",
      "104.19.227.222",
      "172.67.126.153",
      "172.65.42.116",
      "172.67.190.161",
      "104.25.211.242",
      "104.16.118.107",
      "104.25.24.141",
      "104.25.44.28",
      "172.66.149.186"
    ],
    "SOUTH": [
      "104.16.136.216",
      "104.19.90.76",
      "104.18.106.211",
      "104.17.106.144",
      "104.18.54.12",
      "172.67.137.0",
      "104.20.75.20",
      "104.25.216.4",
      "172.67.2.69",
      "104.20.240.85"
    ],
    "NORTH": [
      "104.17.97.221",
      "172.67.184.58",
      "104.19.111.200",
      "172.67.151.196",
      "104.21.203.150",
      "172.67.35.190",
      "104.20.253.237",
      "104.25.254.32",
      "104.24.184.23",
      "104.20.125.9",
      "104.20.200.26"
    ],
    "CENTRAL": [
      "104.16.155.144",
      "104.17.32.174",
      "104.16.187.111",
      "104.18.99.99",
      "172.65.196.145",
      "104.17.33.86",
      "104.17.107.191",
      "104.16.5.72",
      "104.16.211.252",
      "104.22.24.40",
      "172.67.170.43",
      "104.20.114.86",
      "104.24.84.48",
      "104.24.29.106",
      "104.19.248.133",
      "172.65.107.184",
      "172.67.56.204"
    ],
    "SOUTHWEST": [
      "104.18.248.95",
      "104.18.223.218",
      "104.17.247.75",
      "104.19.57.242",
      "172.67.187.48",
      "104.20.40.252",
      "172.66.140.205",
      "172.67.9.93",
      "104.18.118.203",
      "104.25.130.161",
      "104.20.39.245",
      "104.20.196.177",
      "104.20.231.139"
    ],
    "NORTHWEST": [
      "104.17.21.98",
      "104.16.195.24",
      "104.21.4.205",
      "104.16.103.247",
      "172.65.207.253",
      "104.18.110.143",
      "104.20.87.245",
      "172.66.193.187",
      "104.25.185.82"
    ],
    "NORTHEAST": [
      "104.18.161.136",
      "104.18.187.63",
      "104.16.131.26",
      "104.19.228.236",
      "104.19.222.9",
      "172.67.147.76",
      "104.19.75.26",
      "104.16.125.230",
      "104.16.33.152",
      "104.25.227.110",
      "104.27.58.248",
      "104.27.109.91",
      "104.20.219.92",
      "172.67.74.158",
      "104.24.14.207",
      "104.20.204.98",
      "104.25.56.122",
      "104.24.218.106",
      "172.67.50.159",
      "104.20.69.196"
    ]
  },
  "CHINA_UNICOM": {
    "EAST": [
      "104.18.161.136",
      "104.16.13.53",
      "104.17.33.214",
      "104.17.107.191",
      "104.27.42.132",
      "104.18.223.218",
      "104.21.203.150",
      "104.24.94.57",
      "104.19.122.129",
      "172.65.69.91",
      "172.67.35.190",
      "104.24.84.48",
      "104.25.44.28",
      "104.25.185.82"
    ],
    "SOUTH": [
      "104.24.49.180",
      "104.24.211.99",
      "104.24.226.91",
      "104.21.84.222",
      "104.27.65.177",
      "104.17.33.86",
      "104.18.48.237",
      "104.16.187.111",
      "104.17.247.75",
      "104.19.188.35",
      "172.67.242.147",
      "104.20.114.86",
      "104.24.29.106",
      "104.20.125.9",
      "104.25.24.141",
      "172.66.193.187"
    ],
    "NORTH": [
      "104.17.32.174",
      "104.25.216.245",
      "104.24.12.93",
      "172.65.100.162",
      "104.20.238.88",
      "104.21.39.48",
      "104.16.131.26",
      "172.67.190.161",
      "104.16.125.230",
      "104.25.227.110",
      "172.65.196.145",
      "104.16.136.216",
      "172.67.9.93",
      "172.67.74.158",
      "172.65.107.184",
      "104.24.14.207"
    ],
    "CENTRAL": [
      "104.17.28.128",
      "104.18.106.211",
      "172.67.147.76",
      "104.20.115.97",
      "104.19.152.254",
      "172.67.126.153",
      "104.16.33.152",
      "172.65.42.116",
      "104.20.40.252",
      "104.19.248.133",
      "104.18.118.203",
      "104.27.109.91",
      "172.67.50.159",
      "104.20.69.196"
    ],
    "SOUTHWEST": [
      "104.17.106.144",
      "104.18.54.12",
      "172.67.187.48",
      "104.16.195.24",
      "104.19.228.236",
      "104.20.253.237",
      "104.18.110.143",
      "104.16.211.252",
      "104.24.184.23",
      "104.25.216.4",
      "172.67.56.204",
      "104.20.240.85",
      "104.24.218.106",
      "104.20.87.245"
    ],
    "NORTHWEST": [
      "104.19.222.9",
      "104.18.99.99",
      "104.21.38.222",
      "104.25.233.62",
      "104.17.97.221",
      "104.16.155.144",
      "172.65.207.253",
      "172.67.184.58",
      "104.22.24.40",
      "108.162.193.62",
      "104.17.21.98",
      "104.16.118.107"
    ],
    "NORTHEAST": [
      "104.18.62.178",
      "104.27.79.115",
      "104.27.44.202",
      "104.20.75.20",
      "104.16.5.72",
      "104.20.39.245",
      "172.66.149.186"
    ]
  },
  "CHINA_MOBILE": {
    "EAST": [
      "172.67.151.196",
      "104.19.110.242",
      "172.65.56.239",
      "104.24.89.136",
      "104.20.196.177",
      "104.20.231.139"
    ],
    "SOUTH": [
      "104.24.226.91",
      "104.24.49.180",
      "104.24.94.57"
    ],
    "NORTH": [
      "104.18.187.63",
      "104.21.4.205",
      "172.65.100.162",
      "104.18.62.178",
      "104.21.38.222",
      "104.27.58.248"
    ],
    "CENTRAL": [
      "104.17.28.128",
      "104.19.111.200",
      "104.24.211.99",
      "104.19.75.26",
      "172.66.140.205",
      "104.20.219.92",
      "104.20.200.26",
      "104.20.204.98",
      "172.67.2.69"
    ],
    "SOUTHWEST": [
      "104.21.212.228",
      "104.16.9.187",
      "104.16.103.247"
    ],
    "NORTHWEST": [
      "172.67.137.0",
      "104.25.130.161"
    ],
    "NORTHEAST": [
      "172.66.43.79",
      "104.18.48.237",
      "104.24.12.93",
      "172.67.242.147",
      "104.25.56.122"
    ]
  }
};

// ASN到运营商的映射
const ASN_TO_ISP = {
  // 电信
  '4134': 'CHINA_TELECOM',
  '4809': 'CHINA_TELECOM',
  // 联通
  '4837': 'CHINA_UNICOM', 
  '9929': 'CHINA_UNICOM',
  '4808': 'CHINA_UNICOM',
  // 移动
  '9808': 'CHINA_MOBILE',
  '56040': 'CHINA_MOBILE'
};

// 区域列表
const REGIONS = [
  'EAST',
  'NORTH', 
  'SOUTH',
  'CENTRAL',
  'SOUTHWEST',
  'NORTHWEST',
  'NORTHEAST'
];

// 错误类型定义
const ERRORS = {
  NO_IP: '无可用IP',
  UNKNOWN_ISP: '未知运营商',
  INVALID_REGION: '无效区域'
};

addEventListener('fetch', event => {
  event.respondWith(handleRequest(event.request));
});

async function handleRequest(request) {
  const clientInfo = {
    ip: request.headers.get('CF-Connecting-IP'),
    asn: request.cf.asn.toString(),
    region: request.cf.region,
    colo: request.cf.colo
  };

  try {
    const isp = determineISP(clientInfo.asn);
    const region = determineRegion(clientInfo);
    const bestIP = await selectBestIP(isp, region);

    return new Response(JSON.stringify({
      status: 'success',
      client: clientInfo,
      result: {
        isp: isp,
        region: region,
        ip: bestIP
      }
    }), {
      headers: {
        'content-type': 'application/json',
        'cache-control': 'max-age=300'
      }
    });
  } catch (error) {
    const status = error.message === ERRORS.NO_IP ? 503 : 500;
    return new Response(JSON.stringify({
      status: 'error',
      message: error.message,
      client: clientInfo
    }), {
      status: status,
      headers: { 'content-type': 'application/json' }
    });
  }
}

function determineISP(asn) {
  const isp = ASN_TO_ISP[asn];
  if (!isp) {
    throw new Error(ERRORS.UNKNOWN_ISP);
  }
  return isp;
}

function determineRegion(clientInfo) {
  const regionMap = {
    'SHA': 'EAST',   // 上海
    'BEJ': 'NORTH',  // 北京
    'GUD': 'SOUTH',  // 广东
    'HUB': 'CENTRAL' // 湖北
  };

  if (clientInfo.region && regionMap[clientInfo.region]) {
    return regionMap[clientInfo.region];
  }

  // 默认返回华东
  return 'EAST';
}

async function selectBestIP(isp, region) {
  let candidates = [];

  // 1. 优先选择同ISP同区域的IP
  if (IP_POOLS[isp] && IP_POOLS[isp][region] && IP_POOLS[isp][region].length > 0) {
    candidates = IP_POOLS[isp][region];
  }

  // 2. 如果没有找到,尝试同ISP其他区域
  if (candidates.length === 0 && IP_POOLS[isp]) {
    for (const r of REGIONS) {
      if (r !== region && IP_POOLS[isp][r] && IP_POOLS[isp][r].length > 0) {
        candidates = candidates.concat(IP_POOLS[isp][r]);
      }
    }
  }

  // 3. 如果还是没有,使用其他ISP的IP
  if (candidates.length === 0) {
    for (const otherIsp in IP_POOLS) {
      if (otherIsp !== isp && IP_POOLS[otherIsp][region] && IP_POOLS[otherIsp][region].length > 0) {
        candidates = candidates.concat(IP_POOLS[otherIsp][region]);
      }
    }
  }

  // 4. 如果还是没有找到可用IP,则抛出错误
  if (candidates.length === 0) {
    throw new Error(ERRORS.NO_IP);
  }

  // 随机选择一个IP,避免单点故障
  return candidates[Math.floor(Math.random() * candidates.length)];
}