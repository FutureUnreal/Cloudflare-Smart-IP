// IP池配置 - 更新时间: 2024-12-15T19:37:10.379130
const IP_POOLS = {
  "CHINA_TELECOM": {
    "EAST": [
      "104.19.112.2",
      "172.65.249.187",
      "104.19.245.169",
      "104.17.134.134",
      "172.67.34.207",
      "104.21.20.139",
      "104.24.94.195",
      "104.24.131.75",
      "104.26.7.209",
      "104.19.227.77",
      "104.25.138.76",
      "172.66.194.39",
      "104.24.138.185",
      "104.24.52.35"
    ],
    "SOUTH": [
      "104.19.6.127",
      "172.65.255.132",
      "104.17.210.252",
      "172.65.94.166",
      "104.18.232.161",
      "104.16.231.71",
      "104.18.24.31",
      "104.19.226.155",
      "104.18.26.202",
      "104.18.8.50",
      "104.22.16.7",
      "104.17.9.14",
      "172.67.20.126",
      "172.65.138.208",
      "172.66.140.142",
      "104.25.176.98",
      "104.25.25.241",
      "104.20.31.83",
      "104.25.176.57"
    ],
    "NORTH": [
      "104.18.108.137",
      "104.21.126.253",
      "172.67.169.22",
      "104.21.215.112",
      "104.19.141.167",
      "104.27.62.221",
      "172.66.138.160",
      "172.67.57.186",
      "104.20.94.165",
      "104.20.41.129",
      "172.67.52.65",
      "104.25.123.57"
    ],
    "CENTRAL": [
      "104.19.69.192",
      "104.18.104.174",
      "104.16.9.60",
      "104.21.89.58",
      "104.17.73.227",
      "172.67.81.222",
      "172.67.9.222",
      "104.25.74.239",
      "104.27.95.43",
      "104.21.55.234",
      "172.66.137.67",
      "104.27.86.116",
      "104.24.175.114",
      "104.25.185.153",
      "104.24.210.188",
      "104.27.80.88",
      "104.25.167.250"
    ],
    "SOUTHWEST": [
      "104.17.11.104",
      "104.19.57.159",
      "104.19.164.187",
      "104.19.5.35",
      "104.22.62.2",
      "104.21.60.100",
      "103.21.246.105",
      "104.20.178.166",
      "104.20.47.213",
      "104.27.205.135",
      "104.20.60.138",
      "172.66.202.212",
      "104.20.73.198",
      "104.25.127.105",
      "104.24.3.217",
      "172.67.52.250",
      "104.20.161.51"
    ],
    "NORTHWEST": [
      "104.16.178.63",
      "104.17.241.213",
      "104.16.191.101",
      "104.17.93.9",
      "104.17.78.193",
      "104.18.100.39",
      "104.19.3.188",
      "104.17.154.125",
      "172.65.94.136",
      "104.17.85.189",
      "104.16.145.75",
      "104.17.183.53",
      "104.17.48.164",
      "104.16.41.14",
      "104.22.59.90",
      "172.67.98.127",
      "104.27.42.67",
      "104.17.120.229",
      "172.67.109.186",
      "104.20.83.105"
    ],
    "NORTHEAST": [
      "104.19.204.9",
      "172.65.14.68",
      "104.17.102.143",
      "104.17.207.238",
      "104.18.118.40",
      "172.65.102.91",
      "172.67.121.77",
      "104.27.202.128",
      "104.25.108.18",
      "104.16.250.193",
      "104.16.94.18",
      "104.20.240.165",
      "104.20.226.79",
      "104.20.179.54",
      "104.25.45.244"
    ]
  },
  "CHINA_UNICOM": {
    "EAST": [
      "104.18.232.161",
      "104.25.228.134",
      "104.19.164.187",
      "104.22.16.7",
      "104.18.26.202",
      "172.65.255.132",
      "172.67.106.188",
      "104.19.46.15",
      "104.17.207.238",
      "172.65.94.136",
      "104.17.48.164",
      "172.66.138.160",
      "104.25.74.239",
      "172.65.102.91",
      "104.19.227.77",
      "104.25.176.98",
      "104.20.73.198",
      "104.20.226.79",
      "104.25.25.241",
      "104.27.80.88"
    ],
    "SOUTH": [
      "104.25.120.173",
      "104.21.215.112",
      "104.18.24.31",
      "104.19.15.161",
      "172.65.14.68",
      "172.67.20.126",
      "104.19.57.159",
      "104.17.78.193",
      "104.22.62.2",
      "104.19.3.188",
      "104.17.85.189",
      "104.18.118.40",
      "172.67.9.222",
      "104.27.62.221",
      "172.67.57.186",
      "172.66.137.67",
      "104.25.123.57",
      "104.25.176.57"
    ],
    "NORTH": [
      "172.65.224.238",
      "104.18.104.174",
      "104.17.224.117",
      "104.17.154.125",
      "104.27.89.155",
      "104.24.131.75",
      "104.16.41.14",
      "104.22.59.90",
      "104.20.47.213",
      "104.16.94.18",
      "104.25.138.76",
      "104.25.185.153"
    ],
    "CENTRAL": [
      "104.19.245.169",
      "104.17.9.14",
      "172.65.249.187",
      "172.66.215.192",
      "104.17.102.143",
      "104.17.11.104",
      "104.16.178.63",
      "104.17.210.252",
      "104.19.134.77",
      "104.26.7.209",
      "104.17.241.213",
      "172.67.81.222",
      "172.65.138.208",
      "104.20.94.165",
      "104.21.55.234",
      "104.20.41.129",
      "172.66.202.212",
      "104.20.179.54"
    ],
    "SOUTHWEST": [
      "104.18.77.237",
      "104.21.20.139",
      "104.19.69.192",
      "104.19.6.127",
      "104.24.94.195",
      "104.16.119.52",
      "104.20.128.89",
      "104.16.191.101",
      "172.66.133.70",
      "104.19.226.155",
      "104.16.145.75",
      "104.17.120.229",
      "104.27.202.128",
      "104.25.127.105",
      "104.20.240.165",
      "104.24.138.185",
      "104.24.3.217",
      "104.20.161.51"
    ],
    "NORTHWEST": [
      "104.21.126.253",
      "104.19.131.19",
      "104.24.199.141",
      "104.18.5.198",
      "172.65.131.75",
      "104.16.231.71",
      "104.17.183.53",
      "104.21.60.100",
      "104.18.108.137",
      "104.21.89.58",
      "103.21.246.105",
      "104.20.178.166",
      "104.19.204.9",
      "104.19.21.134",
      "172.67.34.207",
      "104.19.141.167",
      "172.67.109.186",
      "104.25.48.34",
      "104.20.60.138",
      "104.25.108.18"
    ],
    "NORTHEAST": [
      "104.17.93.9",
      "172.65.94.166",
      "104.20.72.178",
      "104.19.173.27",
      "104.19.5.35",
      "172.67.98.127",
      "104.20.83.105",
      "104.20.247.0",
      "104.25.45.244"
    ]
  },
  "CHINA_MOBILE": {
    "EAST": [
      "104.25.228.134",
      "104.17.224.117",
      "104.27.62.94",
      "172.67.121.77",
      "104.27.86.116"
    ],
    "SOUTH": [
      "172.67.169.22",
      "172.66.215.192",
      "172.65.131.75",
      "104.19.131.19",
      "104.27.89.155"
    ],
    "NORTH": [
      "104.19.112.2",
      "104.27.41.191",
      "104.20.72.178",
      "104.19.21.134",
      "104.27.42.67"
    ],
    "CENTRAL": [
      "172.67.106.188",
      "104.25.120.173",
      "104.18.5.198",
      "172.66.133.70",
      "104.18.100.39",
      "172.66.140.142",
      "104.24.175.114"
    ],
    "SOUTHWEST": [
      "104.24.199.141",
      "104.19.173.27",
      "104.16.119.52",
      "172.66.194.39"
    ],
    "NORTHWEST": [
      "104.25.146.248"
    ],
    "NORTHEAST": [
      "104.19.46.15",
      "104.16.9.60",
      "104.19.15.161",
      "104.19.134.77",
      "104.20.128.89",
      "104.27.95.43"
    ]
  }
};

// ASN到运营商的映射
const ASN_TO_ISP = {
  // 电信
  '4134': 'CHINA_TELECOM',
  '4809': 'CHINA_TELECOM',
  // 联通
  '4837': 'CHINA_UNICOM', 
  '9929': 'CHINA_UNICOM',
  '4808': 'CHINA_UNICOM',
  // 移动
  '9808': 'CHINA_MOBILE',
  '56040': 'CHINA_MOBILE'
};

// 区域列表
const REGIONS = [
  'EAST',
  'NORTH', 
  'SOUTH',
  'CENTRAL',
  'SOUTHWEST',
  'NORTHWEST',
  'NORTHEAST'
];

// 错误类型定义
const ERRORS = {
  NO_IP: '无可用IP',
  UNKNOWN_ISP: '未知运营商',
  INVALID_REGION: '无效区域'
};

addEventListener('fetch', event => {
  event.respondWith(handleRequest(event.request));
});

async function handleRequest(request) {
  const clientInfo = {
    ip: request.headers.get('CF-Connecting-IP'),
    asn: request.cf.asn.toString(),
    region: request.cf.region,
    colo: request.cf.colo
  };

  try {
    const isp = determineISP(clientInfo.asn);
    const region = determineRegion(clientInfo);
    const bestIP = await selectBestIP(isp, region);

    return new Response(JSON.stringify({
      status: 'success',
      client: clientInfo,
      result: {
        isp: isp,
        region: region,
        ip: bestIP
      }
    }), {
      headers: {
        'content-type': 'application/json',
        'cache-control': 'max-age=300'
      }
    });
  } catch (error) {
    const status = error.message === ERRORS.NO_IP ? 503 : 500;
    return new Response(JSON.stringify({
      status: 'error',
      message: error.message,
      client: clientInfo
    }), {
      status: status,
      headers: { 'content-type': 'application/json' }
    });
  }
}

function determineISP(asn) {
  const isp = ASN_TO_ISP[asn];
  if (!isp) {
    throw new Error(ERRORS.UNKNOWN_ISP);
  }
  return isp;
}

function determineRegion(clientInfo) {
  const regionMap = {
    'SHA': 'EAST',   // 上海
    'BEJ': 'NORTH',  // 北京
    'GUD': 'SOUTH',  // 广东
    'HUB': 'CENTRAL' // 湖北
  };

  if (clientInfo.region && regionMap[clientInfo.region]) {
    return regionMap[clientInfo.region];
  }

  // 默认返回华东
  return 'EAST';
}

async function selectBestIP(isp, region) {
  let candidates = [];

  // 1. 优先选择同ISP同区域的IP
  if (IP_POOLS[isp] && IP_POOLS[isp][region] && IP_POOLS[isp][region].length > 0) {
    candidates = IP_POOLS[isp][region];
  }

  // 2. 如果没有找到,尝试同ISP其他区域
  if (candidates.length === 0 && IP_POOLS[isp]) {
    for (const r of REGIONS) {
      if (r !== region && IP_POOLS[isp][r] && IP_POOLS[isp][r].length > 0) {
        candidates = candidates.concat(IP_POOLS[isp][r]);
      }
    }
  }

  // 3. 如果还是没有,使用其他ISP的IP
  if (candidates.length === 0) {
    for (const otherIsp in IP_POOLS) {
      if (otherIsp !== isp && IP_POOLS[otherIsp][region] && IP_POOLS[otherIsp][region].length > 0) {
        candidates = candidates.concat(IP_POOLS[otherIsp][region]);
      }
    }
  }

  // 4. 如果还是没有找到可用IP,则抛出错误
  if (candidates.length === 0) {
    throw new Error(ERRORS.NO_IP);
  }

  // 随机选择一个IP,避免单点故障
  return candidates[Math.floor(Math.random() * candidates.length)];
}