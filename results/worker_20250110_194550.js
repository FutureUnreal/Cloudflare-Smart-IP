// IP池配置 - 更新时间: 2025-01-10T19:45:48.872001
const IP_POOLS = {
  "CHINA_TELECOM": {
    "EAST": [
      "104.19.173.166",
      "104.17.60.138",
      "172.65.203.66",
      "104.18.182.182",
      "104.18.77.95",
      "104.19.156.232",
      "104.18.166.48",
      "104.21.58.168",
      "104.20.40.2",
      "104.21.1.36",
      "104.17.212.6",
      "172.65.196.215",
      "104.27.122.255",
      "104.25.72.192",
      "104.25.121.5",
      "172.66.134.164",
      "172.67.88.158"
    ],
    "SOUTH": [
      "104.18.66.251",
      "104.19.82.98",
      "104.16.250.216",
      "104.19.254.255",
      "104.19.121.135",
      "104.21.198.165",
      "104.22.34.67",
      "104.27.83.212",
      "104.24.162.206",
      "104.17.126.50",
      "104.20.135.229",
      "104.18.9.36",
      "172.65.108.132",
      "104.25.216.3",
      "104.20.41.154",
      "104.24.136.150",
      "172.65.118.125",
      "104.25.161.243",
      "104.20.212.190"
    ],
    "NORTH": [
      "104.17.223.196",
      "104.21.39.95",
      "104.21.93.181",
      "104.18.23.215",
      "104.18.65.122",
      "104.17.141.162",
      "104.18.181.219",
      "104.17.214.229",
      "104.25.51.85",
      "104.25.10.209",
      "104.22.37.207",
      "172.67.119.186",
      "104.25.34.134",
      "104.22.67.227",
      "104.17.32.152",
      "104.19.235.212",
      "104.17.213.64",
      "104.27.87.120",
      "104.22.64.191",
      "172.66.199.220"
    ],
    "CENTRAL": [
      "104.17.213.199",
      "104.19.235.58",
      "104.19.27.232",
      "104.17.168.7",
      "104.22.59.48",
      "172.67.44.38",
      "172.65.41.207",
      "104.20.55.104",
      "104.26.7.103",
      "104.16.105.188",
      "104.25.8.156",
      "172.66.176.237",
      "172.66.131.142"
    ],
    "SOUTHWEST": [
      "104.19.11.156",
      "104.21.229.244",
      "172.65.232.250",
      "104.19.95.61",
      "104.19.249.25",
      "104.24.68.108",
      "104.21.80.214",
      "104.21.44.75",
      "104.24.151.165",
      "104.20.124.201",
      "104.25.176.9",
      "104.18.228.63",
      "104.16.143.207",
      "172.67.110.105",
      "104.17.82.51",
      "104.24.184.225",
      "104.25.2.240",
      "104.20.112.141",
      "104.25.153.133"
    ],
    "NORTHWEST": [
      "104.21.90.87",
      "172.67.23.252",
      "104.17.214.159",
      "172.65.33.194",
      "104.21.22.212",
      "104.17.162.250",
      "172.67.158.162",
      "104.16.204.23",
      "104.17.172.196",
      "104.22.48.130",
      "104.25.21.6",
      "104.18.160.143",
      "104.20.195.58",
      "104.18.94.106",
      "104.27.6.66",
      "172.66.204.217",
      "104.25.170.75"
    ],
    "NORTHEAST": [
      "103.21.244.68",
      "104.21.212.176",
      "172.67.247.30",
      "172.67.156.212",
      "172.65.209.245",
      "104.18.36.99",
      "104.17.124.118",
      "104.17.97.63",
      "172.65.253.48",
      "104.18.251.40",
      "104.16.74.238",
      "104.20.8.188",
      "104.24.255.135",
      "104.24.199.41",
      "172.65.145.30"
    ]
  },
  "CHINA_UNICOM": {
    "EAST": [
      "104.18.77.95",
      "104.18.65.122",
      "104.19.249.25",
      "104.24.199.131",
      "104.17.214.159",
      "104.19.224.176",
      "104.21.90.87",
      "104.22.37.207",
      "104.25.34.134",
      "104.21.1.36",
      "104.21.22.212",
      "172.65.196.215",
      "104.18.94.106",
      "104.25.170.75"
    ],
    "SOUTH": [
      "104.21.93.181",
      "172.65.203.66",
      "104.27.1.17",
      "104.19.82.98",
      "104.27.42.91",
      "104.17.60.138",
      "172.67.44.38",
      "172.67.23.252",
      "104.18.166.48",
      "172.67.158.162",
      "104.21.198.165",
      "104.25.10.209",
      "104.20.65.249",
      "104.25.21.6",
      "104.18.251.40",
      "104.17.213.64",
      "172.65.108.132",
      "104.20.8.188",
      "104.24.255.135"
    ],
    "NORTH": [
      "104.17.223.196",
      "104.19.254.255",
      "104.21.39.95",
      "172.65.209.245",
      "104.20.40.2",
      "104.24.68.108",
      "104.18.79.31",
      "104.24.162.206",
      "172.65.33.194",
      "104.17.212.6",
      "104.19.235.212",
      "104.25.72.192",
      "104.24.184.225",
      "172.65.145.30",
      "104.25.153.133"
    ],
    "CENTRAL": [
      "104.25.13.252",
      "104.19.11.156",
      "104.24.174.119",
      "172.67.247.30",
      "104.20.195.65",
      "104.17.141.162",
      "104.27.42.146",
      "104.19.156.232",
      "104.21.58.168",
      "104.21.44.75",
      "104.17.126.50",
      "104.20.135.229",
      "104.17.97.63",
      "172.65.253.48",
      "104.18.9.36",
      "172.67.110.105",
      "172.66.176.237",
      "104.24.199.41",
      "172.66.204.217"
    ],
    "SOUTHWEST": [
      "104.18.182.182",
      "104.18.181.219",
      "104.17.213.199",
      "104.19.121.135",
      "172.67.156.212",
      "104.24.19.15",
      "104.25.207.154",
      "104.21.229.244",
      "104.17.214.229",
      "104.22.48.130",
      "104.17.172.196",
      "104.17.168.7",
      "104.20.55.104",
      "104.21.80.214",
      "104.18.36.99",
      "104.25.176.9",
      "104.17.124.118",
      "104.20.195.58",
      "104.16.143.207",
      "104.25.121.5"
    ],
    "NORTHWEST": [
      "104.18.66.251",
      "103.21.244.68",
      "172.65.41.207",
      "104.27.83.212",
      "104.20.124.201",
      "104.22.67.227",
      "104.17.32.152",
      "104.25.216.3",
      "104.25.149.29",
      "172.66.199.220",
      "172.67.88.158",
      "172.65.118.125",
      "104.25.161.243",
      "104.20.112.141"
    ],
    "NORTHEAST": [
      "104.19.173.166",
      "104.16.250.216",
      "104.19.235.58",
      "104.19.27.232",
      "104.16.255.35",
      "104.16.204.23",
      "104.19.82.117",
      "104.22.34.67",
      "172.67.247.223",
      "104.26.7.103",
      "104.27.122.255",
      "104.27.6.66",
      "172.66.134.164"
    ]
  },
  "CHINA_MOBILE": {
    "EAST": [
      "104.22.59.48",
      "104.19.95.61",
      "104.24.19.15",
      "172.65.232.250",
      "104.19.224.176",
      "104.22.64.191"
    ],
    "SOUTH": [
      "104.18.23.215",
      "104.19.82.117",
      "104.24.199.131",
      "104.21.212.176",
      "172.67.119.186",
      "104.17.82.51"
    ],
    "NORTH": [
      "104.24.174.119",
      "104.17.162.250",
      "104.25.207.154",
      "104.24.151.165"
    ],
    "CENTRAL": [
      "104.25.13.252",
      "104.16.255.35",
      "104.27.42.91",
      "104.16.74.238"
    ],
    "SOUTHWEST": [
      "104.27.42.146",
      "104.25.51.85",
      "104.18.228.63"
    ],
    "NORTHWEST": [
      "104.20.212.190"
    ],
    "NORTHEAST": [
      "172.67.247.223",
      "104.20.65.249",
      "104.25.2.240"
    ]
  }
};

// ASN到运营商的映射
const ASN_TO_ISP = {
  // 电信
  '4134': 'CHINA_TELECOM',
  '4809': 'CHINA_TELECOM',
  // 联通
  '4837': 'CHINA_UNICOM', 
  '9929': 'CHINA_UNICOM',
  '4808': 'CHINA_UNICOM',
  // 移动
  '9808': 'CHINA_MOBILE',
  '56040': 'CHINA_MOBILE'
};

// 区域列表
const REGIONS = [
  'EAST',
  'NORTH', 
  'SOUTH',
  'CENTRAL',
  'SOUTHWEST',
  'NORTHWEST',
  'NORTHEAST'
];

// 错误类型定义
const ERRORS = {
  NO_IP: '无可用IP',
  UNKNOWN_ISP: '未知运营商',
  INVALID_REGION: '无效区域'
};

addEventListener('fetch', event => {
  event.respondWith(handleRequest(event.request));
});

async function handleRequest(request) {
  const clientInfo = {
    ip: request.headers.get('CF-Connecting-IP'),
    asn: request.cf.asn.toString(),
    region: request.cf.region,
    colo: request.cf.colo
  };

  try {
    const isp = determineISP(clientInfo.asn);
    const region = determineRegion(clientInfo);
    const bestIP = await selectBestIP(isp, region);

    return new Response(JSON.stringify({
      status: 'success',
      client: clientInfo,
      result: {
        isp: isp,
        region: region,
        ip: bestIP
      }
    }), {
      headers: {
        'content-type': 'application/json',
        'cache-control': 'max-age=300'
      }
    });
  } catch (error) {
    const status = error.message === ERRORS.NO_IP ? 503 : 500;
    return new Response(JSON.stringify({
      status: 'error',
      message: error.message,
      client: clientInfo
    }), {
      status: status,
      headers: { 'content-type': 'application/json' }
    });
  }
}

function determineISP(asn) {
  const isp = ASN_TO_ISP[asn];
  if (!isp) {
    throw new Error(ERRORS.UNKNOWN_ISP);
  }
  return isp;
}

function determineRegion(clientInfo) {
  const regionMap = {
    'SHA': 'EAST',   // 上海
    'BEJ': 'NORTH',  // 北京
    'GUD': 'SOUTH',  // 广东
    'HUB': 'CENTRAL' // 湖北
  };

  if (clientInfo.region && regionMap[clientInfo.region]) {
    return regionMap[clientInfo.region];
  }

  // 默认返回华东
  return 'EAST';
}

async function selectBestIP(isp, region) {
  let candidates = [];

  // 1. 优先选择同ISP同区域的IP
  if (IP_POOLS[isp] && IP_POOLS[isp][region] && IP_POOLS[isp][region].length > 0) {
    candidates = IP_POOLS[isp][region];
  }

  // 2. 如果没有找到,尝试同ISP其他区域
  if (candidates.length === 0 && IP_POOLS[isp]) {
    for (const r of REGIONS) {
      if (r !== region && IP_POOLS[isp][r] && IP_POOLS[isp][r].length > 0) {
        candidates = candidates.concat(IP_POOLS[isp][r]);
      }
    }
  }

  // 3. 如果还是没有,使用其他ISP的IP
  if (candidates.length === 0) {
    for (const otherIsp in IP_POOLS) {
      if (otherIsp !== isp && IP_POOLS[otherIsp][region] && IP_POOLS[otherIsp][region].length > 0) {
        candidates = candidates.concat(IP_POOLS[otherIsp][region]);
      }
    }
  }

  // 4. 如果还是没有找到可用IP,则抛出错误
  if (candidates.length === 0) {
    throw new Error(ERRORS.NO_IP);
  }

  // 随机选择一个IP,避免单点故障
  return candidates[Math.floor(Math.random() * candidates.length)];
}