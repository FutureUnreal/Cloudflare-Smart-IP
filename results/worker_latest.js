// IP池配置 - 更新时间: 2024-12-26T15:46:39.330250
const IP_POOLS = {
  "CHINA_TELECOM": {
    "EAST": [
      "104.16.182.65",
      "104.16.154.162",
      "104.18.242.203",
      "104.17.124.94",
      "104.19.90.129",
      "104.17.79.216",
      "104.21.90.148",
      "104.25.234.13",
      "104.20.18.61",
      "104.24.0.230",
      "104.25.186.136",
      "104.20.120.183"
    ],
    "SOUTH": [
      "172.65.226.251",
      "104.19.93.20",
      "104.17.182.80",
      "172.65.11.237",
      "172.67.218.231",
      "104.21.126.173",
      "104.18.170.202",
      "172.67.5.207",
      "172.66.214.33"
    ],
    "NORTH": [
      "104.19.24.178",
      "104.16.91.178",
      "104.18.151.117",
      "104.16.10.168",
      "172.67.231.155",
      "172.67.227.180",
      "172.65.209.74",
      "172.65.24.142",
      "172.66.44.42",
      "172.67.133.149",
      "104.18.250.183",
      "104.24.238.246",
      "104.25.138.99",
      "104.25.138.96",
      "104.27.107.178"
    ],
    "CENTRAL": [
      "104.18.60.254",
      "172.65.44.248",
      "172.67.169.32",
      "104.21.62.66",
      "104.25.111.247",
      "104.24.223.167",
      "104.20.78.73",
      "104.20.36.170",
      "172.65.105.165",
      "172.67.107.39"
    ],
    "SOUTHWEST": [
      "104.19.230.245",
      "104.17.36.226",
      "104.17.147.173",
      "104.16.251.198",
      "104.19.133.127",
      "172.65.250.7",
      "104.16.155.145",
      "104.16.213.228",
      "104.19.182.207",
      "104.25.224.42",
      "172.66.199.136",
      "104.20.240.130"
    ],
    "NORTHWEST": [
      "104.21.125.212",
      "104.21.42.64",
      "104.21.215.63",
      "104.17.21.46",
      "104.17.95.98",
      "104.16.56.136",
      "104.19.88.185",
      "104.19.114.197",
      "104.16.157.49",
      "104.21.233.90",
      "104.19.143.212",
      "172.65.213.162",
      "104.20.75.88",
      "104.25.211.187",
      "104.22.41.57",
      "172.65.122.190",
      "104.25.91.150",
      "104.25.88.28",
      "104.20.14.177"
    ],
    "NORTHEAST": [
      "104.19.99.125",
      "104.19.120.152",
      "104.16.227.186",
      "104.17.18.78",
      "104.24.61.206",
      "104.20.153.34",
      "104.27.45.29",
      "172.66.195.207",
      "104.24.24.178",
      "104.24.84.86"
    ]
  },
  "CHINA_UNICOM": {
    "EAST": [
      "104.18.242.203",
      "104.21.239.58",
      "104.17.147.173",
      "104.16.229.151",
      "172.65.17.8",
      "104.18.250.183",
      "104.19.162.119",
      "104.25.108.41",
      "104.18.59.18",
      "104.18.220.219",
      "104.24.238.246",
      "104.25.138.99",
      "104.27.107.178"
    ],
    "SOUTH": [
      "104.16.251.198",
      "104.21.125.212",
      "104.24.186.106",
      "104.21.42.64",
      "104.19.90.129",
      "172.67.133.149",
      "172.65.44.248",
      "104.19.153.82",
      "172.67.169.32",
      "104.17.79.216",
      "104.18.60.254",
      "104.20.23.61",
      "172.65.230.129",
      "104.20.18.61",
      "104.25.91.150"
    ],
    "NORTH": [
      "172.65.226.251",
      "172.67.231.155",
      "172.67.75.118",
      "104.24.228.202",
      "104.16.56.136",
      "172.67.70.189",
      "172.65.24.142",
      "104.25.9.180",
      "104.21.90.148",
      "104.16.227.186",
      "104.16.213.228",
      "104.19.27.121",
      "172.67.16.65",
      "104.24.53.187",
      "172.66.167.195",
      "104.19.182.207"
    ],
    "CENTRAL": [
      "104.16.182.65",
      "104.18.18.41",
      "104.16.213.19",
      "104.27.10.121",
      "104.18.218.145",
      "172.67.227.180",
      "104.19.93.20",
      "172.65.162.142",
      "104.25.186.136",
      "104.25.88.28"
    ],
    "SOUTHWEST": [
      "104.22.75.196",
      "104.21.62.66",
      "104.21.215.63",
      "104.25.132.7",
      "104.25.111.247",
      "172.65.122.190",
      "104.25.138.96"
    ],
    "NORTHWEST": [
      "104.20.40.104",
      "104.18.128.162",
      "104.19.120.152",
      "104.24.219.43",
      "104.17.21.46",
      "104.17.18.78",
      "104.27.5.114",
      "172.66.199.136",
      "104.20.78.73"
    ],
    "NORTHEAST": [
      "104.17.219.181",
      "104.18.88.129",
      "104.17.182.80",
      "104.25.234.13",
      "104.19.99.125",
      "104.24.24.178",
      "104.20.14.177"
    ]
  },
  "CHINA_MOBILE": {
    "EAST": [
      "104.16.10.168",
      "172.67.83.153",
      "104.22.75.196",
      "104.20.40.104",
      "172.65.213.162",
      "104.25.224.42",
      "104.24.0.230",
      "104.24.223.167",
      "104.20.240.130",
      "104.27.45.29",
      "172.67.5.207"
    ],
    "SOUTH": [
      "172.66.217.128",
      "104.17.95.98",
      "172.65.250.7",
      "104.24.147.241",
      "104.27.10.121",
      "104.19.162.119",
      "172.67.83.201",
      "104.19.27.121",
      "104.22.41.57"
    ],
    "NORTH": [
      "104.17.36.226",
      "172.67.88.121",
      "104.24.61.206",
      "104.18.59.18",
      "104.25.211.187"
    ],
    "CENTRAL": [
      "104.17.218.134",
      "104.24.53.40",
      "172.66.44.42",
      "172.67.70.189",
      "104.19.133.127",
      "104.18.218.145",
      "104.18.128.162",
      "172.65.162.142",
      "172.66.167.195",
      "104.18.170.202",
      "172.66.214.33",
      "172.66.195.207"
    ],
    "SOUTHWEST": [
      "104.18.18.41",
      "104.19.114.197",
      "104.19.143.212",
      "172.67.218.231",
      "104.20.23.61",
      "104.18.220.219",
      "104.20.75.88",
      "104.20.120.183"
    ],
    "NORTHWEST": [
      "104.19.24.178",
      "172.65.11.237"
    ],
    "NORTHEAST": [
      "104.16.154.162",
      "172.67.75.118",
      "104.16.91.178",
      "104.16.213.19",
      "104.18.180.82",
      "104.19.102.37",
      "104.19.153.82",
      "172.67.219.230",
      "104.25.108.41",
      "104.25.132.7"
    ]
  }
};

// ASN到运营商的映射
const ASN_TO_ISP = {
  // 电信
  '4134': 'CHINA_TELECOM',
  '4809': 'CHINA_TELECOM',
  // 联通
  '4837': 'CHINA_UNICOM', 
  '9929': 'CHINA_UNICOM',
  '4808': 'CHINA_UNICOM',
  // 移动
  '9808': 'CHINA_MOBILE',
  '56040': 'CHINA_MOBILE'
};

// 区域列表
const REGIONS = [
  'EAST',
  'NORTH', 
  'SOUTH',
  'CENTRAL',
  'SOUTHWEST',
  'NORTHWEST',
  'NORTHEAST'
];

// 错误类型定义
const ERRORS = {
  NO_IP: '无可用IP',
  UNKNOWN_ISP: '未知运营商',
  INVALID_REGION: '无效区域'
};

addEventListener('fetch', event => {
  event.respondWith(handleRequest(event.request));
});

async function handleRequest(request) {
  const clientInfo = {
    ip: request.headers.get('CF-Connecting-IP'),
    asn: request.cf.asn.toString(),
    region: request.cf.region,
    colo: request.cf.colo
  };

  try {
    const isp = determineISP(clientInfo.asn);
    const region = determineRegion(clientInfo);
    const bestIP = await selectBestIP(isp, region);

    return new Response(JSON.stringify({
      status: 'success',
      client: clientInfo,
      result: {
        isp: isp,
        region: region,
        ip: bestIP
      }
    }), {
      headers: {
        'content-type': 'application/json',
        'cache-control': 'max-age=300'
      }
    });
  } catch (error) {
    const status = error.message === ERRORS.NO_IP ? 503 : 500;
    return new Response(JSON.stringify({
      status: 'error',
      message: error.message,
      client: clientInfo
    }), {
      status: status,
      headers: { 'content-type': 'application/json' }
    });
  }
}

function determineISP(asn) {
  const isp = ASN_TO_ISP[asn];
  if (!isp) {
    throw new Error(ERRORS.UNKNOWN_ISP);
  }
  return isp;
}

function determineRegion(clientInfo) {
  const regionMap = {
    'SHA': 'EAST',   // 上海
    'BEJ': 'NORTH',  // 北京
    'GUD': 'SOUTH',  // 广东
    'HUB': 'CENTRAL' // 湖北
  };

  if (clientInfo.region && regionMap[clientInfo.region]) {
    return regionMap[clientInfo.region];
  }

  // 默认返回华东
  return 'EAST';
}

async function selectBestIP(isp, region) {
  let candidates = [];

  // 1. 优先选择同ISP同区域的IP
  if (IP_POOLS[isp] && IP_POOLS[isp][region] && IP_POOLS[isp][region].length > 0) {
    candidates = IP_POOLS[isp][region];
  }

  // 2. 如果没有找到,尝试同ISP其他区域
  if (candidates.length === 0 && IP_POOLS[isp]) {
    for (const r of REGIONS) {
      if (r !== region && IP_POOLS[isp][r] && IP_POOLS[isp][r].length > 0) {
        candidates = candidates.concat(IP_POOLS[isp][r]);
      }
    }
  }

  // 3. 如果还是没有,使用其他ISP的IP
  if (candidates.length === 0) {
    for (const otherIsp in IP_POOLS) {
      if (otherIsp !== isp && IP_POOLS[otherIsp][region] && IP_POOLS[otherIsp][region].length > 0) {
        candidates = candidates.concat(IP_POOLS[otherIsp][region]);
      }
    }
  }

  // 4. 如果还是没有找到可用IP,则抛出错误
  if (candidates.length === 0) {
    throw new Error(ERRORS.NO_IP);
  }

  // 随机选择一个IP,避免单点故障
  return candidates[Math.floor(Math.random() * candidates.length)];
}