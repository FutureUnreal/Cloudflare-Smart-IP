// IP池配置 - 更新时间: 2025-01-13T23:17:35.523901
const IP_POOLS = {
  "CHINA_TELECOM": {
    "EAST": [
      "104.18.55.46",
      "104.19.69.182",
      "104.17.148.152",
      "104.25.25.28",
      "104.24.216.248",
      "172.67.233.151",
      "172.67.221.23",
      "104.25.115.21"
    ],
    "SOUTH": [
      "104.16.60.23",
      "104.18.58.230",
      "104.17.179.97",
      "172.65.231.112",
      "172.65.238.5",
      "104.19.219.79",
      "104.20.12.242",
      "172.67.238.208",
      "104.20.249.129",
      "104.24.181.200",
      "172.66.175.199",
      "104.24.129.157",
      "104.25.238.192",
      "104.24.176.174"
    ],
    "NORTH": [
      "104.18.195.61",
      "172.65.208.12",
      "104.19.198.43",
      "104.16.57.32",
      "104.17.109.173",
      "172.67.169.39",
      "104.18.136.222",
      "104.17.96.197",
      "104.16.40.218",
      "104.16.115.93",
      "104.20.206.154",
      "172.67.5.116",
      "104.25.67.33",
      "104.24.153.253",
      "172.65.116.251",
      "104.25.235.167",
      "104.25.213.124",
      "104.25.1.242",
      "172.65.116.43"
    ],
    "CENTRAL": [
      "104.19.54.36",
      "104.18.197.4",
      "104.19.38.131",
      "104.16.251.235",
      "104.16.251.164",
      "104.18.252.158",
      "172.66.165.201",
      "104.20.15.39",
      "104.25.176.214",
      "104.24.18.188",
      "104.20.17.122",
      "104.20.255.114",
      "172.65.60.110",
      "104.25.209.56",
      "104.24.82.157",
      "104.24.219.213"
    ],
    "SOUTHWEST": [
      "172.65.232.223",
      "104.17.24.2",
      "104.16.241.176",
      "104.21.81.206",
      "172.67.160.0",
      "172.65.14.56",
      "104.21.197.69",
      "104.20.1.26",
      "104.20.138.127",
      "104.22.14.32",
      "104.27.6.76",
      "104.27.4.127"
    ],
    "NORTHWEST": [
      "104.18.146.234",
      "104.21.16.154",
      "104.17.225.216",
      "172.65.33.101",
      "104.21.37.162",
      "104.17.5.185",
      "104.21.49.40",
      "104.20.110.144",
      "104.25.9.203",
      "104.24.230.219",
      "104.25.71.97",
      "104.24.232.210",
      "104.22.73.74"
    ],
    "NORTHEAST": [
      "172.65.206.236",
      "104.18.100.30",
      "104.21.87.31",
      "104.16.132.226",
      "104.18.170.218",
      "104.17.236.159",
      "172.65.44.15",
      "104.27.200.137",
      "172.67.86.81",
      "104.27.30.17",
      "104.24.0.94",
      "104.27.112.167",
      "172.67.109.229",
      "172.67.119.132",
      "172.66.202.56"
    ]
  },
  "CHINA_UNICOM": {
    "EAST": [
      "104.18.136.222",
      "104.21.87.31",
      "104.19.54.36",
      "172.65.208.12",
      "172.65.109.155",
      "172.67.218.124",
      "104.17.225.216",
      "104.27.200.137",
      "104.24.0.94",
      "104.27.30.17",
      "172.65.14.56",
      "104.27.6.76",
      "104.24.129.157"
    ],
    "SOUTH": [
      "172.67.66.164",
      "172.67.204.204",
      "172.65.145.124",
      "104.20.98.231",
      "104.25.84.171",
      "104.16.115.93",
      "172.67.221.23",
      "172.67.233.151",
      "104.20.249.129",
      "104.25.9.203",
      "104.20.138.127",
      "104.22.14.32"
    ],
    "NORTH": [
      "104.18.195.61",
      "104.18.197.4",
      "172.65.232.223",
      "104.21.41.34",
      "172.67.169.39",
      "104.19.77.26",
      "104.25.97.235",
      "104.21.112.28",
      "104.20.15.39",
      "104.24.176.174",
      "172.67.5.116"
    ],
    "CENTRAL": [
      "104.17.148.152",
      "172.65.238.5",
      "104.16.251.164",
      "104.25.147.253",
      "104.25.18.225",
      "172.67.132.32",
      "104.18.252.158",
      "104.16.60.23",
      "104.21.16.154",
      "104.21.49.40",
      "104.21.81.206",
      "172.67.160.0",
      "104.24.216.248",
      "104.24.153.253",
      "104.20.110.144",
      "104.24.18.188",
      "104.24.219.213",
      "104.27.4.127",
      "104.22.73.74"
    ],
    "SOUTHWEST": [
      "104.16.132.226",
      "104.25.254.192",
      "172.66.148.183",
      "104.21.213.250",
      "104.18.58.230",
      "172.65.33.101",
      "104.27.14.165",
      "104.20.206.154",
      "172.67.238.208",
      "104.25.238.192",
      "172.66.202.56"
    ],
    "NORTHWEST": [
      "104.16.251.235",
      "104.19.11.32",
      "172.66.209.0",
      "104.17.236.159",
      "104.18.55.46",
      "104.16.241.176",
      "104.25.25.28",
      "104.25.67.33",
      "104.19.9.213",
      "172.65.116.43",
      "104.20.255.114",
      "104.25.209.56",
      "104.20.12.242"
    ],
    "NORTHEAST": [
      "172.65.234.58",
      "172.65.238.127",
      "104.18.100.30",
      "104.18.170.218",
      "172.67.202.77",
      "104.24.181.200",
      "172.67.109.229",
      "104.20.1.26",
      "104.25.71.97"
    ]
  },
  "CHINA_MOBILE": {
    "EAST": [
      "104.17.96.197",
      "172.65.231.112",
      "104.25.18.225",
      "104.19.69.182",
      "104.27.64.97",
      "172.66.209.0",
      "104.24.172.40",
      "104.24.232.210"
    ],
    "SOUTH": [
      "104.20.113.111",
      "104.25.213.124"
    ],
    "NORTH": [
      "104.25.254.192",
      "104.20.13.209",
      "172.65.116.251",
      "104.25.115.21"
    ],
    "CENTRAL": [
      "104.17.109.173",
      "104.24.70.244",
      "104.25.147.253",
      "104.21.41.34",
      "104.21.66.230",
      "104.19.11.32",
      "104.25.97.235",
      "172.67.119.132"
    ],
    "SOUTHWEST": [
      "172.66.151.7",
      "104.19.27.206",
      "172.66.148.183",
      "104.24.86.172"
    ],
    "NORTHWEST": [
      "104.19.38.131",
      "172.66.43.253"
    ],
    "NORTHEAST": [
      "104.16.40.218",
      "104.16.57.32",
      "172.65.44.15",
      "104.20.98.231",
      "172.65.206.236",
      "172.65.145.124",
      "104.21.37.162",
      "104.17.5.185",
      "104.21.197.69"
    ]
  }
};

// ASN到运营商的映射
const ASN_TO_ISP = {
  // 电信
  '4134': 'CHINA_TELECOM',
  '4809': 'CHINA_TELECOM',
  // 联通
  '4837': 'CHINA_UNICOM', 
  '9929': 'CHINA_UNICOM',
  '4808': 'CHINA_UNICOM',
  // 移动
  '9808': 'CHINA_MOBILE',
  '56040': 'CHINA_MOBILE'
};

// 区域列表
const REGIONS = [
  'EAST',
  'NORTH', 
  'SOUTH',
  'CENTRAL',
  'SOUTHWEST',
  'NORTHWEST',
  'NORTHEAST'
];

// 错误类型定义
const ERRORS = {
  NO_IP: '无可用IP',
  UNKNOWN_ISP: '未知运营商',
  INVALID_REGION: '无效区域'
};

addEventListener('fetch', event => {
  event.respondWith(handleRequest(event.request));
});

async function handleRequest(request) {
  const clientInfo = {
    ip: request.headers.get('CF-Connecting-IP'),
    asn: request.cf.asn.toString(),
    region: request.cf.region,
    colo: request.cf.colo
  };

  try {
    const isp = determineISP(clientInfo.asn);
    const region = determineRegion(clientInfo);
    const bestIP = await selectBestIP(isp, region);

    return new Response(JSON.stringify({
      status: 'success',
      client: clientInfo,
      result: {
        isp: isp,
        region: region,
        ip: bestIP
      }
    }), {
      headers: {
        'content-type': 'application/json',
        'cache-control': 'max-age=300'
      }
    });
  } catch (error) {
    const status = error.message === ERRORS.NO_IP ? 503 : 500;
    return new Response(JSON.stringify({
      status: 'error',
      message: error.message,
      client: clientInfo
    }), {
      status: status,
      headers: { 'content-type': 'application/json' }
    });
  }
}

function determineISP(asn) {
  const isp = ASN_TO_ISP[asn];
  if (!isp) {
    throw new Error(ERRORS.UNKNOWN_ISP);
  }
  return isp;
}

function determineRegion(clientInfo) {
  const regionMap = {
    'SHA': 'EAST',   // 上海
    'BEJ': 'NORTH',  // 北京
    'GUD': 'SOUTH',  // 广东
    'HUB': 'CENTRAL' // 湖北
  };

  if (clientInfo.region && regionMap[clientInfo.region]) {
    return regionMap[clientInfo.region];
  }

  // 默认返回华东
  return 'EAST';
}

async function selectBestIP(isp, region) {
  let candidates = [];

  // 1. 优先选择同ISP同区域的IP
  if (IP_POOLS[isp] && IP_POOLS[isp][region] && IP_POOLS[isp][region].length > 0) {
    candidates = IP_POOLS[isp][region];
  }

  // 2. 如果没有找到,尝试同ISP其他区域
  if (candidates.length === 0 && IP_POOLS[isp]) {
    for (const r of REGIONS) {
      if (r !== region && IP_POOLS[isp][r] && IP_POOLS[isp][r].length > 0) {
        candidates = candidates.concat(IP_POOLS[isp][r]);
      }
    }
  }

  // 3. 如果还是没有,使用其他ISP的IP
  if (candidates.length === 0) {
    for (const otherIsp in IP_POOLS) {
      if (otherIsp !== isp && IP_POOLS[otherIsp][region] && IP_POOLS[otherIsp][region].length > 0) {
        candidates = candidates.concat(IP_POOLS[otherIsp][region]);
      }
    }
  }

  // 4. 如果还是没有找到可用IP,则抛出错误
  if (candidates.length === 0) {
    throw new Error(ERRORS.NO_IP);
  }

  // 随机选择一个IP,避免单点故障
  return candidates[Math.floor(Math.random() * candidates.length)];
}