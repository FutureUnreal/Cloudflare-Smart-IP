// IP池配置 - 更新时间: 2024-12-28T19:23:53.160790
const IP_POOLS = {
  "CHINA_TELECOM": {
    "EAST": [
      "104.17.222.255",
      "104.18.49.93",
      "104.18.118.12",
      "104.19.17.214",
      "104.19.201.95",
      "104.19.53.98",
      "104.21.66.191",
      "172.67.78.215",
      "104.20.122.240",
      "104.27.70.216",
      "172.67.218.189",
      "104.24.200.249",
      "104.20.96.136",
      "104.22.77.114",
      "104.25.86.2"
    ],
    "SOUTH": [
      "104.17.144.108",
      "104.16.81.53",
      "104.16.13.234",
      "104.19.255.30",
      "104.18.43.89",
      "104.18.40.47",
      "104.17.40.45",
      "172.66.204.154",
      "172.65.139.225",
      "104.20.49.1",
      "104.24.210.55",
      "172.65.119.7"
    ],
    "NORTH": [
      "104.18.6.78",
      "104.17.157.182",
      "104.19.220.248",
      "104.18.121.136",
      "104.19.128.47",
      "104.20.48.225",
      "104.21.96.50",
      "104.21.18.78",
      "104.24.39.161",
      "104.27.30.140",
      "172.66.198.28",
      "104.24.244.41",
      "104.27.61.207"
    ],
    "CENTRAL": [
      "104.16.253.94",
      "104.19.1.236",
      "104.17.52.251",
      "104.16.193.243",
      "104.17.90.174",
      "104.19.221.85",
      "104.21.227.74",
      "172.66.198.78",
      "172.66.162.196",
      "104.20.86.225",
      "104.25.140.183"
    ],
    "SOUTHWEST": [
      "104.17.170.40",
      "104.18.77.120",
      "104.18.108.54",
      "104.18.247.84",
      "104.16.1.31",
      "104.17.239.102",
      "104.22.17.241",
      "104.22.19.53",
      "104.27.67.172",
      "172.67.150.135",
      "104.20.24.35",
      "104.25.63.80",
      "104.20.136.6",
      "104.27.2.234",
      "104.24.244.150",
      "172.65.102.8",
      "104.20.234.169"
    ],
    "NORTHWEST": [
      "172.67.235.43",
      "104.18.133.214",
      "104.19.101.62",
      "104.21.113.207",
      "104.21.226.52",
      "104.21.88.116",
      "104.16.102.167",
      "172.67.51.221",
      "104.27.93.159",
      "104.25.230.83",
      "104.24.93.139",
      "104.20.188.215",
      "104.20.55.218",
      "104.25.39.70",
      "104.20.220.5"
    ],
    "NORTHEAST": [
      "104.18.190.121",
      "172.67.213.212",
      "104.17.229.254",
      "104.18.16.83",
      "104.19.23.10",
      "104.21.48.5",
      "172.65.29.131",
      "104.20.168.149",
      "104.27.31.97",
      "172.65.171.86"
    ]
  },
  "CHINA_UNICOM": {
    "EAST": [
      "104.16.19.4",
      "104.19.53.98",
      "104.17.40.45",
      "104.19.255.30",
      "104.25.189.48",
      "104.16.13.234",
      "104.21.96.50",
      "104.20.136.6",
      "172.65.171.86",
      "104.25.230.83",
      "104.24.244.150"
    ],
    "SOUTH": [
      "104.24.34.186",
      "104.21.113.207",
      "172.67.78.215",
      "104.16.81.53",
      "104.16.102.167",
      "104.21.48.5",
      "104.17.157.182",
      "104.20.49.1",
      "104.24.39.161",
      "104.25.140.183",
      "104.27.30.140",
      "104.27.61.207",
      "104.24.93.139"
    ],
    "NORTH": [
      "104.21.227.74",
      "104.19.17.214",
      "104.19.101.62",
      "104.17.144.108",
      "104.16.154.213",
      "104.25.253.239",
      "104.18.190.121",
      "104.16.136.219",
      "104.19.220.248",
      "104.18.118.12",
      "172.65.29.131",
      "104.24.200.249",
      "104.27.197.105",
      "104.22.77.114"
    ],
    "CENTRAL": [
      "104.27.108.192",
      "104.20.129.41",
      "104.18.40.47",
      "104.21.71.174",
      "104.25.150.140",
      "104.18.16.83",
      "172.65.58.219",
      "104.18.121.136",
      "172.67.72.214",
      "104.16.253.94",
      "104.18.133.214",
      "172.67.150.135",
      "172.65.139.225",
      "104.25.86.2",
      "104.20.220.5"
    ],
    "SOUTHWEST": [
      "104.19.201.95",
      "104.19.23.10",
      "104.24.58.147",
      "104.22.9.107",
      "104.16.1.31",
      "104.18.108.54",
      "104.17.241.161",
      "104.19.1.236",
      "104.19.221.85",
      "104.27.67.172",
      "172.67.218.189",
      "104.21.18.78",
      "104.18.192.194",
      "104.25.63.80",
      "104.20.86.225",
      "172.65.102.8",
      "104.20.55.218"
    ],
    "NORTHWEST": [
      "172.65.166.189",
      "104.22.19.53",
      "104.17.170.40",
      "104.22.17.241",
      "104.21.226.52",
      "104.20.122.240",
      "172.67.213.212",
      "104.17.222.255",
      "104.20.134.205",
      "104.17.90.174",
      "104.18.49.93",
      "104.20.96.136",
      "104.27.2.234"
    ],
    "NORTHEAST": [
      "172.67.51.221",
      "104.20.168.149"
    ]
  },
  "CHINA_MOBILE": {
    "EAST": [
      "104.18.77.120",
      "172.67.210.242",
      "104.17.238.161",
      "172.65.58.219",
      "104.19.83.213",
      "104.19.137.94",
      "104.20.234.169"
    ],
    "SOUTH": [
      "104.18.43.89",
      "104.24.34.186",
      "104.16.118.160",
      "104.18.57.173",
      "104.16.139.133",
      "104.20.24.35"
    ],
    "NORTH": [
      "104.17.239.102",
      "104.18.247.84",
      "104.16.70.81",
      "104.18.228.50",
      "104.27.41.157",
      "104.16.209.133"
    ],
    "CENTRAL": [
      "104.17.229.254",
      "104.18.99.139",
      "104.27.93.159",
      "172.66.162.196",
      "172.66.204.154",
      "172.66.198.28",
      "104.24.244.41"
    ],
    "SOUTHWEST": [
      "104.16.154.213",
      "104.27.31.97",
      "172.65.119.7"
    ],
    "NORTHWEST": [
      "104.27.108.192",
      "172.66.149.245",
      "104.20.48.225",
      "104.19.128.47",
      "172.67.72.214"
    ],
    "NORTHEAST": [
      "104.19.227.115",
      "172.67.235.43",
      "104.21.88.116",
      "172.65.192.41",
      "104.17.241.161",
      "104.21.71.174",
      "104.20.188.215"
    ]
  }
};

// ASN到运营商的映射
const ASN_TO_ISP = {
  // 电信
  '4134': 'CHINA_TELECOM',
  '4809': 'CHINA_TELECOM',
  // 联通
  '4837': 'CHINA_UNICOM', 
  '9929': 'CHINA_UNICOM',
  '4808': 'CHINA_UNICOM',
  // 移动
  '9808': 'CHINA_MOBILE',
  '56040': 'CHINA_MOBILE'
};

// 区域列表
const REGIONS = [
  'EAST',
  'NORTH', 
  'SOUTH',
  'CENTRAL',
  'SOUTHWEST',
  'NORTHWEST',
  'NORTHEAST'
];

// 错误类型定义
const ERRORS = {
  NO_IP: '无可用IP',
  UNKNOWN_ISP: '未知运营商',
  INVALID_REGION: '无效区域'
};

addEventListener('fetch', event => {
  event.respondWith(handleRequest(event.request));
});

async function handleRequest(request) {
  const clientInfo = {
    ip: request.headers.get('CF-Connecting-IP'),
    asn: request.cf.asn.toString(),
    region: request.cf.region,
    colo: request.cf.colo
  };

  try {
    const isp = determineISP(clientInfo.asn);
    const region = determineRegion(clientInfo);
    const bestIP = await selectBestIP(isp, region);

    return new Response(JSON.stringify({
      status: 'success',
      client: clientInfo,
      result: {
        isp: isp,
        region: region,
        ip: bestIP
      }
    }), {
      headers: {
        'content-type': 'application/json',
        'cache-control': 'max-age=300'
      }
    });
  } catch (error) {
    const status = error.message === ERRORS.NO_IP ? 503 : 500;
    return new Response(JSON.stringify({
      status: 'error',
      message: error.message,
      client: clientInfo
    }), {
      status: status,
      headers: { 'content-type': 'application/json' }
    });
  }
}

function determineISP(asn) {
  const isp = ASN_TO_ISP[asn];
  if (!isp) {
    throw new Error(ERRORS.UNKNOWN_ISP);
  }
  return isp;
}

function determineRegion(clientInfo) {
  const regionMap = {
    'SHA': 'EAST',   // 上海
    'BEJ': 'NORTH',  // 北京
    'GUD': 'SOUTH',  // 广东
    'HUB': 'CENTRAL' // 湖北
  };

  if (clientInfo.region && regionMap[clientInfo.region]) {
    return regionMap[clientInfo.region];
  }

  // 默认返回华东
  return 'EAST';
}

async function selectBestIP(isp, region) {
  let candidates = [];

  // 1. 优先选择同ISP同区域的IP
  if (IP_POOLS[isp] && IP_POOLS[isp][region] && IP_POOLS[isp][region].length > 0) {
    candidates = IP_POOLS[isp][region];
  }

  // 2. 如果没有找到,尝试同ISP其他区域
  if (candidates.length === 0 && IP_POOLS[isp]) {
    for (const r of REGIONS) {
      if (r !== region && IP_POOLS[isp][r] && IP_POOLS[isp][r].length > 0) {
        candidates = candidates.concat(IP_POOLS[isp][r]);
      }
    }
  }

  // 3. 如果还是没有,使用其他ISP的IP
  if (candidates.length === 0) {
    for (const otherIsp in IP_POOLS) {
      if (otherIsp !== isp && IP_POOLS[otherIsp][region] && IP_POOLS[otherIsp][region].length > 0) {
        candidates = candidates.concat(IP_POOLS[otherIsp][region]);
      }
    }
  }

  // 4. 如果还是没有找到可用IP,则抛出错误
  if (candidates.length === 0) {
    throw new Error(ERRORS.NO_IP);
  }

  // 随机选择一个IP,避免单点故障
  return candidates[Math.floor(Math.random() * candidates.length)];
}