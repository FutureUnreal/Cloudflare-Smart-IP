// IP池配置 - 更新时间: 2024-12-30T11:21:32.318496
const IP_POOLS = {
  "CHINA_TELECOM": {
    "EAST": [
      "172.65.201.9",
      "104.16.81.184",
      "104.19.45.55",
      "104.18.202.172",
      "188.114.96.94",
      "104.24.68.139",
      "104.22.45.232",
      "172.67.139.9",
      "104.20.237.68",
      "104.24.69.249",
      "172.65.145.54",
      "104.24.2.42",
      "104.25.19.243"
    ],
    "SOUTH": [
      "104.19.85.36",
      "104.17.219.67",
      "104.19.160.211",
      "104.19.54.175",
      "172.65.247.139",
      "104.18.30.47",
      "104.21.88.50",
      "172.67.131.98",
      "104.24.86.50",
      "104.20.242.237",
      "104.25.78.165",
      "172.67.67.24",
      "172.67.75.121",
      "104.24.186.190"
    ],
    "NORTH": [
      "104.17.1.158",
      "172.65.19.44",
      "172.67.215.238",
      "172.67.193.105",
      "104.21.40.147",
      "104.18.57.108",
      "104.17.98.67",
      "172.67.16.57",
      "104.27.196.204",
      "172.65.69.124",
      "104.20.71.33",
      "104.25.56.69",
      "104.25.38.136",
      "104.22.39.108"
    ],
    "CENTRAL": [
      "104.19.167.196",
      "172.65.245.201",
      "104.16.137.241",
      "104.21.30.126",
      "104.20.68.222",
      "172.67.64.59",
      "104.25.26.51",
      "104.25.180.149",
      "172.65.189.99",
      "172.65.77.68",
      "172.65.146.153"
    ],
    "SOUTHWEST": [
      "104.19.78.246",
      "104.16.231.184",
      "104.19.63.118",
      "104.18.2.112",
      "104.19.244.39",
      "104.21.202.217",
      "104.20.0.234",
      "172.66.213.188",
      "104.20.236.119",
      "104.24.255.164",
      "104.24.206.66",
      "104.24.206.51",
      "104.27.48.77",
      "104.20.202.128",
      "104.20.104.219"
    ],
    "NORTHWEST": [
      "104.17.117.230",
      "104.18.96.120",
      "104.18.226.185",
      "104.19.53.196",
      "104.17.168.138",
      "104.16.173.140",
      "104.17.182.244",
      "104.25.54.51",
      "104.20.168.88",
      "104.24.33.90",
      "104.20.2.121",
      "104.25.101.70"
    ],
    "NORTHEAST": [
      "104.17.9.136",
      "104.18.42.39",
      "104.21.32.214",
      "172.65.208.0",
      "172.65.218.216",
      "104.22.30.207",
      "172.67.24.233",
      "104.22.21.101",
      "104.25.254.145",
      "172.65.163.146",
      "104.20.155.109",
      "172.65.67.11",
      "172.65.175.228"
    ]
  },
  "CHINA_UNICOM": {
    "EAST": [
      "104.19.160.211",
      "172.67.216.165",
      "104.27.112.222",
      "104.21.202.217",
      "104.16.81.184",
      "104.24.206.66",
      "172.67.64.59",
      "172.65.69.124",
      "104.25.26.51",
      "172.67.67.24",
      "104.20.202.128",
      "104.20.2.121"
    ],
    "SOUTH": [
      "172.65.201.9",
      "104.19.53.196",
      "172.65.3.169",
      "172.65.208.0",
      "104.21.40.147",
      "104.20.173.65",
      "104.18.202.172",
      "104.17.1.158",
      "104.19.63.118",
      "104.19.190.103",
      "104.22.21.101",
      "104.27.196.204",
      "104.24.255.164",
      "104.20.242.237",
      "104.20.68.222",
      "104.24.206.51",
      "172.65.77.68",
      "104.20.104.219"
    ],
    "NORTH": [
      "104.19.45.55",
      "172.67.16.57",
      "104.19.25.130",
      "104.19.114.44",
      "104.19.78.246",
      "104.19.101.20",
      "172.66.159.68",
      "172.65.245.201",
      "104.17.182.244",
      "104.22.39.108"
    ],
    "CENTRAL": [
      "104.24.252.245",
      "104.25.68.167",
      "104.17.219.67",
      "104.17.219.57"
    ],
    "SOUTHWEST": [
      "172.65.19.44",
      "104.21.230.121",
      "172.67.177.9",
      "104.25.185.245",
      "104.19.32.134",
      "104.18.12.192",
      "172.66.215.191",
      "104.17.215.217",
      "104.20.129.61",
      "104.17.51.200",
      "172.67.24.233",
      "104.22.45.232",
      "104.25.254.145",
      "104.24.86.50",
      "172.65.145.54",
      "104.25.78.165",
      "104.25.56.69",
      "172.67.75.121"
    ],
    "NORTHWEST": [
      "104.18.42.39",
      "104.19.244.39",
      "104.18.64.180",
      "104.25.125.81",
      "104.20.168.88",
      "104.24.2.42",
      "104.25.180.149",
      "172.65.175.228"
    ],
    "NORTHEAST": [
      "104.18.96.120",
      "104.17.32.141",
      "172.67.147.64",
      "172.65.247.139",
      "104.18.30.47",
      "104.24.68.139",
      "104.21.86.234",
      "104.16.203.244",
      "104.21.45.212"
    ]
  },
  "CHINA_MOBILE": {
    "EAST": [
      "104.18.12.192",
      "104.18.57.108",
      "172.65.218.216",
      "104.16.133.222",
      "104.25.38.136",
      "172.65.146.153"
    ],
    "SOUTH": [
      "104.17.168.138",
      "172.65.246.136",
      "104.19.114.44",
      "104.19.167.196",
      "104.25.6.85",
      "104.21.30.126",
      "172.65.163.146",
      "104.24.186.190"
    ],
    "NORTH": [
      "104.19.32.134",
      "104.17.40.70",
      "104.24.252.245",
      "104.25.185.245",
      "172.67.254.113",
      "172.67.139.9",
      "104.20.236.119",
      "104.20.71.33",
      "172.65.67.11"
    ],
    "CENTRAL": [
      "104.17.29.229",
      "104.17.190.208",
      "172.65.99.18",
      "172.66.162.31"
    ],
    "SOUTHWEST": [
      "104.17.98.67",
      "104.25.12.180",
      "104.16.231.184",
      "104.20.173.65",
      "172.67.202.205",
      "104.27.50.195",
      "172.66.130.206",
      "104.19.190.103",
      "188.114.96.94",
      "172.67.215.238",
      "104.20.0.234"
    ],
    "NORTHWEST": [
      "104.17.219.57",
      "104.18.2.112",
      "104.22.30.207",
      "104.21.86.234",
      "104.21.79.220",
      "104.25.101.70"
    ],
    "NORTHEAST": [
      "104.17.117.230",
      "172.66.47.233",
      "104.19.85.36",
      "104.17.32.141",
      "104.16.173.140",
      "104.25.68.167",
      "172.67.131.98",
      "104.20.129.61",
      "172.66.213.188",
      "104.24.33.90",
      "104.17.9.136"
    ]
  }
};

// ASN到运营商的映射
const ASN_TO_ISP = {
  // 电信
  '4134': 'CHINA_TELECOM',
  '4809': 'CHINA_TELECOM',
  // 联通
  '4837': 'CHINA_UNICOM', 
  '9929': 'CHINA_UNICOM',
  '4808': 'CHINA_UNICOM',
  // 移动
  '9808': 'CHINA_MOBILE',
  '56040': 'CHINA_MOBILE'
};

// 区域列表
const REGIONS = [
  'EAST',
  'NORTH', 
  'SOUTH',
  'CENTRAL',
  'SOUTHWEST',
  'NORTHWEST',
  'NORTHEAST'
];

// 错误类型定义
const ERRORS = {
  NO_IP: '无可用IP',
  UNKNOWN_ISP: '未知运营商',
  INVALID_REGION: '无效区域'
};

addEventListener('fetch', event => {
  event.respondWith(handleRequest(event.request));
});

async function handleRequest(request) {
  const clientInfo = {
    ip: request.headers.get('CF-Connecting-IP'),
    asn: request.cf.asn.toString(),
    region: request.cf.region,
    colo: request.cf.colo
  };

  try {
    const isp = determineISP(clientInfo.asn);
    const region = determineRegion(clientInfo);
    const bestIP = await selectBestIP(isp, region);

    return new Response(JSON.stringify({
      status: 'success',
      client: clientInfo,
      result: {
        isp: isp,
        region: region,
        ip: bestIP
      }
    }), {
      headers: {
        'content-type': 'application/json',
        'cache-control': 'max-age=300'
      }
    });
  } catch (error) {
    const status = error.message === ERRORS.NO_IP ? 503 : 500;
    return new Response(JSON.stringify({
      status: 'error',
      message: error.message,
      client: clientInfo
    }), {
      status: status,
      headers: { 'content-type': 'application/json' }
    });
  }
}

function determineISP(asn) {
  const isp = ASN_TO_ISP[asn];
  if (!isp) {
    throw new Error(ERRORS.UNKNOWN_ISP);
  }
  return isp;
}

function determineRegion(clientInfo) {
  const regionMap = {
    'SHA': 'EAST',   // 上海
    'BEJ': 'NORTH',  // 北京
    'GUD': 'SOUTH',  // 广东
    'HUB': 'CENTRAL' // 湖北
  };

  if (clientInfo.region && regionMap[clientInfo.region]) {
    return regionMap[clientInfo.region];
  }

  // 默认返回华东
  return 'EAST';
}

async function selectBestIP(isp, region) {
  let candidates = [];

  // 1. 优先选择同ISP同区域的IP
  if (IP_POOLS[isp] && IP_POOLS[isp][region] && IP_POOLS[isp][region].length > 0) {
    candidates = IP_POOLS[isp][region];
  }

  // 2. 如果没有找到,尝试同ISP其他区域
  if (candidates.length === 0 && IP_POOLS[isp]) {
    for (const r of REGIONS) {
      if (r !== region && IP_POOLS[isp][r] && IP_POOLS[isp][r].length > 0) {
        candidates = candidates.concat(IP_POOLS[isp][r]);
      }
    }
  }

  // 3. 如果还是没有,使用其他ISP的IP
  if (candidates.length === 0) {
    for (const otherIsp in IP_POOLS) {
      if (otherIsp !== isp && IP_POOLS[otherIsp][region] && IP_POOLS[otherIsp][region].length > 0) {
        candidates = candidates.concat(IP_POOLS[otherIsp][region]);
      }
    }
  }

  // 4. 如果还是没有找到可用IP,则抛出错误
  if (candidates.length === 0) {
    throw new Error(ERRORS.NO_IP);
  }

  // 随机选择一个IP,避免单点故障
  return candidates[Math.floor(Math.random() * candidates.length)];
}