// IP池配置 - 更新时间: 2025-01-03T23:18:43.096024
const IP_POOLS = {
  "CHINA_TELECOM": {
    "EAST": [
      "104.16.131.124",
      "104.17.151.234",
      "104.18.52.52",
      "104.18.223.145",
      "104.16.204.84",
      "104.17.13.215",
      "172.67.27.19",
      "104.25.255.56",
      "172.67.9.65",
      "104.24.220.237",
      "104.27.33.132",
      "104.27.68.44",
      "104.27.124.254",
      "104.20.215.17"
    ],
    "SOUTH": [
      "104.19.212.129",
      "104.19.227.146",
      "104.19.9.166",
      "104.17.160.59",
      "104.19.0.255",
      "104.17.9.63",
      "104.17.135.126",
      "104.19.213.82",
      "104.16.90.243",
      "104.18.10.115",
      "172.65.193.221",
      "172.67.188.17",
      "172.67.179.110",
      "104.24.14.76",
      "104.27.28.97",
      "172.65.191.211",
      "104.21.44.247"
    ],
    "NORTH": [
      "104.18.71.43",
      "104.21.78.209",
      "104.19.104.181",
      "104.17.144.191",
      "172.67.220.249",
      "104.18.30.125",
      "104.27.39.137",
      "104.24.204.45",
      "104.24.12.76",
      "104.24.148.174",
      "104.24.45.57",
      "104.25.165.83"
    ],
    "CENTRAL": [
      "104.18.99.201",
      "104.19.110.184",
      "104.18.224.121",
      "172.65.59.110",
      "172.66.128.89",
      "172.66.128.44",
      "104.25.14.136",
      "104.22.41.136"
    ],
    "SOUTHWEST": [
      "172.65.235.180",
      "104.16.241.175",
      "104.17.46.92",
      "104.19.43.1",
      "104.16.18.220",
      "104.16.86.223",
      "104.19.18.242",
      "104.19.244.76",
      "104.21.42.27",
      "172.65.99.61",
      "172.65.140.228",
      "104.24.58.91",
      "172.67.205.10",
      "104.24.61.191",
      "172.66.164.39",
      "104.24.129.211"
    ],
    "NORTHWEST": [
      "104.18.47.224",
      "172.65.242.51",
      "104.18.229.77",
      "104.21.5.145",
      "104.18.237.22",
      "172.65.3.13",
      "104.17.31.10",
      "104.16.10.46",
      "104.18.212.136",
      "172.67.184.2",
      "104.27.50.121",
      "104.25.161.138",
      "104.27.60.192",
      "172.67.115.131",
      "172.65.128.98",
      "172.67.123.143",
      "172.65.136.84",
      "104.22.46.214",
      "104.20.130.101",
      "104.20.230.28"
    ],
    "NORTHEAST": [
      "104.19.208.22",
      "104.17.5.248",
      "172.65.254.34",
      "104.21.107.161",
      "172.65.44.138",
      "104.18.241.83",
      "104.19.141.94",
      "104.22.53.237",
      "172.67.54.118",
      "104.24.71.189",
      "104.20.63.254",
      "104.26.11.183",
      "104.20.1.28"
    ]
  },
  "CHINA_UNICOM": {
    "EAST": [
      "104.17.139.88",
      "104.18.71.43",
      "104.19.213.82",
      "104.18.237.22",
      "172.67.147.249",
      "172.65.187.97",
      "172.66.161.145",
      "104.17.121.254",
      "104.19.20.166",
      "104.21.97.73",
      "172.66.128.44",
      "104.25.165.83"
    ],
    "SOUTH": [
      "172.66.47.145",
      "104.20.71.238",
      "172.65.57.44",
      "104.19.227.146",
      "104.21.5.145",
      "172.65.3.13",
      "104.17.135.126",
      "104.16.86.223",
      "104.25.255.56",
      "104.24.148.174",
      "104.21.42.27",
      "104.25.14.136",
      "104.20.1.28",
      "172.65.136.84",
      "172.66.164.39"
    ],
    "NORTH": [
      "104.17.13.215",
      "104.16.90.243",
      "104.18.206.84",
      "104.16.241.175",
      "104.17.5.248",
      "104.24.215.120",
      "104.24.19.60",
      "172.66.147.159",
      "104.27.68.44",
      "172.65.140.228",
      "104.24.61.191",
      "104.24.129.211",
      "172.65.74.156",
      "172.67.86.215",
      "104.20.230.28",
      "104.24.45.57"
    ],
    "CENTRAL": [
      "104.19.208.22",
      "104.21.107.161",
      "104.24.68.201",
      "104.19.0.255",
      "172.65.36.3",
      "104.19.212.129",
      "172.65.254.34",
      "104.18.47.224",
      "104.20.84.38",
      "104.16.79.133",
      "104.25.14.0",
      "104.16.54.167",
      "104.21.226.219",
      "104.24.220.237",
      "172.65.191.211",
      "104.21.44.247",
      "104.22.46.214"
    ],
    "SOUTHWEST": [
      "104.17.31.10",
      "104.19.9.166",
      "172.67.27.19",
      "172.65.59.110",
      "172.65.44.138",
      "104.20.166.105",
      "104.17.160.59",
      "172.67.184.2",
      "104.27.28.97",
      "104.27.124.254",
      "104.25.161.138",
      "104.22.41.136",
      "172.67.205.10",
      "104.24.163.36"
    ],
    "NORTHWEST": [
      "104.17.107.92",
      "104.16.169.238",
      "104.16.20.191",
      "104.16.131.124",
      "172.67.54.118",
      "104.21.78.209",
      "104.16.59.176",
      "104.21.95.235"
    ],
    "NORTHEAST": [
      "104.18.99.201",
      "104.18.178.1",
      "104.18.30.125",
      "104.24.12.76",
      "104.27.60.192",
      "104.24.58.91",
      "172.65.128.98",
      "104.20.130.101"
    ]
  },
  "CHINA_MOBILE": {
    "EAST": [
      "104.17.9.63",
      "104.16.18.220",
      "104.19.244.76",
      "104.20.166.105",
      "104.21.68.209",
      "104.27.50.121",
      "172.66.206.41",
      "104.20.142.253"
    ],
    "SOUTH": [
      "104.17.107.92",
      "104.16.10.46",
      "104.20.71.238",
      "104.19.20.166",
      "104.24.20.10",
      "104.18.212.136",
      "104.18.206.84",
      "104.24.19.60",
      "172.65.187.97"
    ],
    "NORTH": [
      "104.18.178.1",
      "104.24.236.100",
      "172.65.235.180",
      "104.19.77.210",
      "172.67.9.65",
      "172.65.242.51",
      "104.18.241.83",
      "104.24.204.45",
      "172.66.128.89"
    ],
    "CENTRAL": [
      "172.67.147.249",
      "104.16.20.191",
      "104.27.39.137",
      "104.27.33.132",
      "104.16.59.176",
      "172.67.115.131",
      "172.67.123.143"
    ],
    "SOUTHWEST": [
      "104.18.10.115",
      "104.22.53.237",
      "172.67.188.17",
      "172.65.193.221",
      "172.65.99.61",
      "172.65.74.156",
      "172.67.86.215"
    ],
    "NORTHWEST": [
      "104.24.68.201",
      "104.19.110.184",
      "104.16.22.128",
      "104.26.11.183"
    ],
    "NORTHEAST": [
      "104.19.43.1",
      "172.65.36.3",
      "104.21.226.219",
      "104.24.215.120",
      "104.21.210.203",
      "104.17.46.92",
      "104.24.14.76",
      "104.20.63.254"
    ]
  }
};

// ASN到运营商的映射
const ASN_TO_ISP = {
  // 电信
  '4134': 'CHINA_TELECOM',
  '4809': 'CHINA_TELECOM',
  // 联通
  '4837': 'CHINA_UNICOM', 
  '9929': 'CHINA_UNICOM',
  '4808': 'CHINA_UNICOM',
  // 移动
  '9808': 'CHINA_MOBILE',
  '56040': 'CHINA_MOBILE'
};

// 区域列表
const REGIONS = [
  'EAST',
  'NORTH', 
  'SOUTH',
  'CENTRAL',
  'SOUTHWEST',
  'NORTHWEST',
  'NORTHEAST'
];

// 错误类型定义
const ERRORS = {
  NO_IP: '无可用IP',
  UNKNOWN_ISP: '未知运营商',
  INVALID_REGION: '无效区域'
};

addEventListener('fetch', event => {
  event.respondWith(handleRequest(event.request));
});

async function handleRequest(request) {
  const clientInfo = {
    ip: request.headers.get('CF-Connecting-IP'),
    asn: request.cf.asn.toString(),
    region: request.cf.region,
    colo: request.cf.colo
  };

  try {
    const isp = determineISP(clientInfo.asn);
    const region = determineRegion(clientInfo);
    const bestIP = await selectBestIP(isp, region);

    return new Response(JSON.stringify({
      status: 'success',
      client: clientInfo,
      result: {
        isp: isp,
        region: region,
        ip: bestIP
      }
    }), {
      headers: {
        'content-type': 'application/json',
        'cache-control': 'max-age=300'
      }
    });
  } catch (error) {
    const status = error.message === ERRORS.NO_IP ? 503 : 500;
    return new Response(JSON.stringify({
      status: 'error',
      message: error.message,
      client: clientInfo
    }), {
      status: status,
      headers: { 'content-type': 'application/json' }
    });
  }
}

function determineISP(asn) {
  const isp = ASN_TO_ISP[asn];
  if (!isp) {
    throw new Error(ERRORS.UNKNOWN_ISP);
  }
  return isp;
}

function determineRegion(clientInfo) {
  const regionMap = {
    'SHA': 'EAST',   // 上海
    'BEJ': 'NORTH',  // 北京
    'GUD': 'SOUTH',  // 广东
    'HUB': 'CENTRAL' // 湖北
  };

  if (clientInfo.region && regionMap[clientInfo.region]) {
    return regionMap[clientInfo.region];
  }

  // 默认返回华东
  return 'EAST';
}

async function selectBestIP(isp, region) {
  let candidates = [];

  // 1. 优先选择同ISP同区域的IP
  if (IP_POOLS[isp] && IP_POOLS[isp][region] && IP_POOLS[isp][region].length > 0) {
    candidates = IP_POOLS[isp][region];
  }

  // 2. 如果没有找到,尝试同ISP其他区域
  if (candidates.length === 0 && IP_POOLS[isp]) {
    for (const r of REGIONS) {
      if (r !== region && IP_POOLS[isp][r] && IP_POOLS[isp][r].length > 0) {
        candidates = candidates.concat(IP_POOLS[isp][r]);
      }
    }
  }

  // 3. 如果还是没有,使用其他ISP的IP
  if (candidates.length === 0) {
    for (const otherIsp in IP_POOLS) {
      if (otherIsp !== isp && IP_POOLS[otherIsp][region] && IP_POOLS[otherIsp][region].length > 0) {
        candidates = candidates.concat(IP_POOLS[otherIsp][region]);
      }
    }
  }

  // 4. 如果还是没有找到可用IP,则抛出错误
  if (candidates.length === 0) {
    throw new Error(ERRORS.NO_IP);
  }

  // 随机选择一个IP,避免单点故障
  return candidates[Math.floor(Math.random() * candidates.length)];
}