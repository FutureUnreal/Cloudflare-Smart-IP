// IP池配置 - 更新时间: 2025-01-22T07:21:44.670793
const IP_POOLS = {
  "CHINA_TELECOM": {
    "EAST": [
      "104.17.177.54",
      "104.22.60.140",
      "172.65.27.20",
      "104.18.25.63",
      "104.21.16.4",
      "104.17.198.194",
      "104.18.175.165",
      "104.18.147.15",
      "104.24.146.200",
      "172.67.110.8",
      "104.25.191.8",
      "172.66.147.190",
      "104.25.218.110"
    ],
    "SOUTH": [
      "104.21.229.143",
      "104.22.56.68",
      "172.65.60.228",
      "104.21.108.236",
      "104.21.62.30",
      "104.16.50.252",
      "104.20.168.76",
      "104.16.182.54",
      "104.18.155.29",
      "104.19.229.139",
      "104.24.143.37",
      "104.20.57.25"
    ],
    "NORTH": [
      "104.18.58.8",
      "104.17.235.48",
      "172.67.159.124",
      "104.17.139.10",
      "104.16.12.136",
      "104.20.11.247",
      "104.16.111.54",
      "172.66.130.5",
      "172.65.64.69",
      "104.24.198.185",
      "172.67.94.229",
      "104.20.250.48",
      "172.67.121.223",
      "104.27.99.160"
    ],
    "CENTRAL": [
      "172.67.26.13",
      "172.66.200.54",
      "172.65.165.246",
      "104.17.119.236",
      "104.17.243.63",
      "104.17.46.132",
      "104.16.0.21",
      "104.18.108.207",
      "172.67.96.245",
      "172.65.65.251",
      "104.22.45.120",
      "172.65.187.188",
      "104.24.245.3",
      "104.24.234.23",
      "104.27.106.164",
      "104.25.175.157",
      "104.24.185.224"
    ],
    "SOUTHWEST": [
      "172.67.242.41",
      "104.21.102.177",
      "172.67.189.166",
      "104.27.194.187",
      "104.16.76.234",
      "172.65.142.23",
      "104.19.21.97",
      "104.18.14.218",
      "104.24.130.8",
      "104.24.74.119",
      "104.20.8.126",
      "104.24.31.188"
    ],
    "NORTHWEST": [
      "104.21.27.96",
      "104.21.98.42",
      "104.16.41.24",
      "172.66.171.217",
      "104.16.60.178",
      "104.24.45.239",
      "104.27.18.35",
      "104.25.136.187",
      "172.67.1.108",
      "172.67.83.19"
    ],
    "NORTHEAST": [
      "172.67.166.153",
      "172.65.46.255",
      "104.24.157.54",
      "104.17.210.56",
      "104.17.195.81",
      "104.17.80.11",
      "104.17.232.44",
      "172.65.238.80",
      "104.18.134.45",
      "104.27.85.180",
      "104.24.191.45",
      "104.24.40.94"
    ]
  },
  "CHINA_UNICOM": {
    "EAST": [
      "104.18.215.236",
      "104.20.74.146",
      "104.17.198.194",
      "104.24.157.54",
      "172.65.165.246",
      "104.18.155.29",
      "172.66.130.5",
      "172.67.110.8",
      "104.25.136.187"
    ],
    "SOUTH": [
      "104.19.154.13",
      "172.66.156.65",
      "172.67.159.124",
      "104.22.8.19",
      "104.17.139.10",
      "104.19.84.180",
      "172.65.27.20",
      "104.17.235.48",
      "104.17.195.81",
      "104.16.60.178",
      "104.24.143.37",
      "104.27.106.164",
      "104.24.31.188"
    ],
    "NORTH": [
      "104.17.18.175",
      "104.21.92.159",
      "104.24.87.163",
      "172.65.96.253",
      "172.67.52.89",
      "172.65.46.255",
      "104.21.16.4",
      "104.17.119.236",
      "104.16.0.21",
      "104.24.146.200"
    ],
    "CENTRAL": [
      "172.67.76.199",
      "104.21.104.75",
      "172.67.166.153",
      "172.65.66.97",
      "104.19.81.230",
      "104.24.82.74",
      "104.25.233.34",
      "104.20.188.242",
      "172.67.242.41",
      "104.16.182.54",
      "104.24.45.239",
      "172.67.121.223",
      "104.24.40.94"
    ],
    "SOUTHWEST": [
      "104.25.229.20",
      "104.18.4.127",
      "104.21.98.42",
      "104.25.105.25",
      "104.21.83.111",
      "172.67.59.40",
      "104.18.215.71",
      "104.16.20.112",
      "104.20.168.76",
      "172.65.65.251",
      "104.25.218.110",
      "172.67.94.229",
      "172.67.1.108",
      "104.25.175.157",
      "104.27.85.180"
    ],
    "NORTHWEST": [
      "104.25.160.213",
      "172.65.164.214",
      "104.17.105.58",
      "172.66.200.54",
      "104.18.177.75",
      "172.65.238.80",
      "104.24.234.23",
      "172.65.64.69",
      "104.24.191.45"
    ],
    "NORTHEAST": [
      "104.20.99.167",
      "104.20.254.248",
      "104.16.176.245",
      "104.19.229.139",
      "104.17.80.11",
      "104.24.198.185"
    ]
  },
  "CHINA_MOBILE": {
    "EAST": [
      "104.17.214.195",
      "104.17.114.185",
      "104.22.60.140",
      "104.18.25.63",
      "104.18.138.149",
      "104.22.8.19",
      "104.21.92.159",
      "172.65.96.253",
      "104.21.104.75",
      "172.67.52.89",
      "104.24.74.119"
    ],
    "SOUTH": [
      "104.25.105.25",
      "172.65.0.32",
      "172.65.152.122",
      "104.21.102.177",
      "104.27.194.187",
      "104.18.147.15",
      "104.19.21.97"
    ],
    "NORTH": [
      "104.18.4.127",
      "104.24.82.74",
      "104.25.229.20",
      "172.66.194.196",
      "104.20.99.167",
      "104.16.20.112",
      "104.21.62.30",
      "172.67.189.166"
    ],
    "CENTRAL": [
      "104.19.9.141",
      "172.67.26.13",
      "104.24.237.191",
      "104.22.56.68",
      "172.65.228.65",
      "104.24.76.216",
      "172.66.171.217",
      "104.18.108.207",
      "104.20.11.247",
      "104.25.191.8",
      "172.66.147.190",
      "172.67.83.19"
    ],
    "SOUTHWEST": [
      "172.67.220.115",
      "104.17.210.56",
      "172.65.142.23",
      "104.17.243.63"
    ],
    "NORTHWEST": [
      "104.18.215.71",
      "104.17.232.44",
      "104.18.134.45",
      "104.18.14.218"
    ],
    "NORTHEAST": [
      "104.19.154.13",
      "104.21.27.96",
      "104.21.229.143",
      "104.18.215.236",
      "104.21.83.111",
      "104.19.84.180",
      "104.18.58.8",
      "104.27.18.35",
      "104.24.130.8",
      "104.20.57.25",
      "104.20.250.48",
      "104.27.99.160"
    ]
  }
};

// ASN到运营商的映射
const ASN_TO_ISP = {
  // 电信
  '4134': 'CHINA_TELECOM',
  '4809': 'CHINA_TELECOM',
  // 联通
  '4837': 'CHINA_UNICOM', 
  '9929': 'CHINA_UNICOM',
  '4808': 'CHINA_UNICOM',
  // 移动
  '9808': 'CHINA_MOBILE',
  '56040': 'CHINA_MOBILE'
};

// 区域列表
const REGIONS = [
  'EAST',
  'NORTH', 
  'SOUTH',
  'CENTRAL',
  'SOUTHWEST',
  'NORTHWEST',
  'NORTHEAST'
];

// 错误类型定义
const ERRORS = {
  NO_IP: '无可用IP',
  UNKNOWN_ISP: '未知运营商',
  INVALID_REGION: '无效区域'
};

addEventListener('fetch', event => {
  event.respondWith(handleRequest(event.request));
});

async function handleRequest(request) {
  const clientInfo = {
    ip: request.headers.get('CF-Connecting-IP'),
    asn: request.cf.asn.toString(),
    region: request.cf.region,
    colo: request.cf.colo
  };

  try {
    const isp = determineISP(clientInfo.asn);
    const region = determineRegion(clientInfo);
    const bestIP = await selectBestIP(isp, region);

    return new Response(JSON.stringify({
      status: 'success',
      client: clientInfo,
      result: {
        isp: isp,
        region: region,
        ip: bestIP
      }
    }), {
      headers: {
        'content-type': 'application/json',
        'cache-control': 'max-age=300'
      }
    });
  } catch (error) {
    const status = error.message === ERRORS.NO_IP ? 503 : 500;
    return new Response(JSON.stringify({
      status: 'error',
      message: error.message,
      client: clientInfo
    }), {
      status: status,
      headers: { 'content-type': 'application/json' }
    });
  }
}

function determineISP(asn) {
  const isp = ASN_TO_ISP[asn];
  if (!isp) {
    throw new Error(ERRORS.UNKNOWN_ISP);
  }
  return isp;
}

function determineRegion(clientInfo) {
  const regionMap = {
    'SHA': 'EAST',   // 上海
    'BEJ': 'NORTH',  // 北京
    'GUD': 'SOUTH',  // 广东
    'HUB': 'CENTRAL' // 湖北
  };

  if (clientInfo.region && regionMap[clientInfo.region]) {
    return regionMap[clientInfo.region];
  }

  // 默认返回华东
  return 'EAST';
}

async function selectBestIP(isp, region) {
  let candidates = [];

  // 1. 优先选择同ISP同区域的IP
  if (IP_POOLS[isp] && IP_POOLS[isp][region] && IP_POOLS[isp][region].length > 0) {
    candidates = IP_POOLS[isp][region];
  }

  // 2. 如果没有找到,尝试同ISP其他区域
  if (candidates.length === 0 && IP_POOLS[isp]) {
    for (const r of REGIONS) {
      if (r !== region && IP_POOLS[isp][r] && IP_POOLS[isp][r].length > 0) {
        candidates = candidates.concat(IP_POOLS[isp][r]);
      }
    }
  }

  // 3. 如果还是没有,使用其他ISP的IP
  if (candidates.length === 0) {
    for (const otherIsp in IP_POOLS) {
      if (otherIsp !== isp && IP_POOLS[otherIsp][region] && IP_POOLS[otherIsp][region].length > 0) {
        candidates = candidates.concat(IP_POOLS[otherIsp][region]);
      }
    }
  }

  // 4. 如果还是没有找到可用IP,则抛出错误
  if (candidates.length === 0) {
    throw new Error(ERRORS.NO_IP);
  }

  // 随机选择一个IP,避免单点故障
  return candidates[Math.floor(Math.random() * candidates.length)];
}