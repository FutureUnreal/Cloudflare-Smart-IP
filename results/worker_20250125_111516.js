// IP池配置 - 更新时间: 2025-01-25T11:15:14.583049
const IP_POOLS = {
  "CHINA_TELECOM": {
    "EAST": [
      "104.19.167.202",
      "104.17.84.170",
      "172.67.35.9",
      "104.21.97.50",
      "104.27.95.99",
      "104.18.177.194",
      "104.18.211.69",
      "104.20.105.76",
      "104.20.219.76",
      "172.67.89.206",
      "172.67.81.24",
      "172.65.136.159"
    ],
    "SOUTH": [
      "104.18.205.207",
      "104.16.10.206",
      "104.16.122.81",
      "104.19.19.98",
      "104.19.36.72",
      "104.16.215.176",
      "104.16.117.158",
      "104.18.160.185",
      "104.17.30.73",
      "104.17.31.62",
      "172.67.218.229",
      "104.18.170.248",
      "172.67.7.168",
      "104.16.51.25",
      "104.18.102.151",
      "104.16.104.135",
      "104.20.214.70",
      "172.65.69.232"
    ],
    "NORTH": [
      "104.16.63.91",
      "172.65.28.94",
      "172.67.191.57",
      "104.19.59.12",
      "172.67.218.187",
      "104.18.123.229",
      "104.24.80.72",
      "104.18.4.170",
      "104.18.11.59",
      "104.17.214.31",
      "172.67.60.85",
      "104.25.243.183",
      "104.26.14.151",
      "104.25.151.210"
    ],
    "CENTRAL": [
      "104.19.47.85",
      "104.19.161.235",
      "104.19.42.234",
      "104.18.90.36",
      "172.65.216.99",
      "104.17.74.143",
      "104.18.67.157",
      "104.16.177.0",
      "172.67.181.89",
      "104.18.106.149",
      "104.27.49.108",
      "104.27.22.93",
      "104.20.65.206",
      "172.65.126.59",
      "104.24.247.122"
    ],
    "SOUTHWEST": [
      "104.19.102.49",
      "104.19.193.44",
      "104.17.137.188",
      "104.16.216.62",
      "172.67.250.229",
      "104.18.125.253",
      "104.18.182.244",
      "104.25.176.191",
      "104.27.110.166",
      "104.22.67.32",
      "104.20.104.137"
    ],
    "NORTHWEST": [
      "104.21.56.228",
      "104.27.44.207"
    ],
    "NORTHEAST": [
      "104.17.146.1",
      "104.18.241.23",
      "172.65.209.14",
      "104.17.203.89",
      "104.19.243.108",
      "104.18.48.14",
      "104.17.69.90",
      "104.16.47.188",
      "172.66.176.46",
      "104.17.54.40",
      "104.25.116.52",
      "172.67.112.112"
    ]
  },
  "CHINA_UNICOM": {
    "EAST": [
      "104.18.160.185",
      "104.19.83.17",
      "104.19.42.234",
      "104.25.242.37",
      "104.20.219.213",
      "104.16.177.0"
    ],
    "SOUTH": [
      "172.65.226.116",
      "104.19.224.132",
      "104.19.59.12",
      "104.16.62.8",
      "172.67.218.187",
      "104.18.10.29",
      "104.17.141.84",
      "104.21.108.52",
      "104.17.74.143",
      "104.17.146.1",
      "104.19.181.75",
      "104.27.95.99",
      "104.18.177.194",
      "104.18.170.248",
      "172.67.181.89",
      "104.18.11.59",
      "104.18.106.149",
      "104.18.102.151",
      "104.20.219.76"
    ],
    "NORTH": [
      "104.18.166.4",
      "104.16.117.158",
      "104.19.47.85",
      "104.17.30.73",
      "104.25.162.76",
      "104.21.67.87",
      "104.19.243.108",
      "104.20.31.249",
      "104.17.203.89",
      "172.65.126.116",
      "104.20.166.47",
      "104.25.3.108",
      "104.18.40.246",
      "104.27.85.175",
      "104.27.8.42",
      "104.19.15.210",
      "104.18.4.170",
      "104.18.211.69",
      "104.25.176.191",
      "172.67.112.112"
    ],
    "CENTRAL": [
      "104.19.165.83",
      "104.17.177.41",
      "104.16.210.115",
      "104.17.221.78",
      "104.18.131.18",
      "104.24.198.245",
      "104.25.14.178",
      "104.16.10.206",
      "172.67.152.185",
      "104.19.36.72",
      "104.18.8.6",
      "104.16.216.62",
      "104.17.31.62",
      "104.27.22.93"
    ],
    "SOUTHWEST": [
      "104.16.215.176",
      "172.65.28.94",
      "104.24.206.90",
      "104.19.102.49",
      "104.20.118.227",
      "104.20.86.16",
      "172.67.250.229",
      "104.18.238.223",
      "104.20.105.76"
    ],
    "NORTHWEST": [
      "104.16.63.91",
      "104.19.167.202",
      "104.19.193.44",
      "104.18.152.40",
      "104.18.125.253",
      "104.22.76.187",
      "104.17.69.90",
      "104.18.205.207",
      "104.17.137.188",
      "104.20.177.47",
      "172.67.218.229",
      "104.27.44.207",
      "104.25.116.52",
      "172.65.69.232",
      "104.20.214.70"
    ],
    "NORTHEAST": [
      "104.21.224.22",
      "104.27.34.158",
      "172.67.211.83",
      "172.67.81.11",
      "104.25.151.210",
      "104.20.65.206"
    ]
  },
  "CHINA_MOBILE": {
    "EAST": [
      "104.18.166.4",
      "104.19.165.83",
      "104.18.241.23",
      "104.19.19.98",
      "104.19.83.17",
      "104.25.36.211",
      "172.67.81.11",
      "172.65.126.116",
      "104.21.97.50",
      "172.67.7.168",
      "172.67.60.85"
    ],
    "SOUTH": [
      "104.27.34.158",
      "104.18.48.14",
      "104.20.219.213",
      "104.27.49.108"
    ],
    "NORTH": [
      "104.18.90.36",
      "104.16.61.82",
      "104.18.152.40",
      "172.65.88.44",
      "104.20.86.16",
      "104.25.179.196",
      "104.20.166.47",
      "104.19.181.75",
      "104.22.35.135",
      "172.67.1.203",
      "104.27.110.166",
      "104.20.104.137"
    ],
    "CENTRAL": [
      "104.21.56.228",
      "104.20.31.249",
      "104.24.80.72",
      "172.67.89.206"
    ],
    "SOUTHWEST": [
      "104.17.177.41",
      "104.16.122.81",
      "104.17.84.170",
      "104.27.8.42",
      "104.16.51.25",
      "172.66.176.46",
      "104.18.123.229",
      "104.19.224.132"
    ],
    "NORTHWEST": [
      "172.67.211.83",
      "172.65.114.15",
      "104.18.238.223",
      "104.20.177.47",
      "172.67.201.190"
    ],
    "NORTHEAST": [
      "104.16.203.46",
      "104.19.15.210",
      "104.25.3.108",
      "172.67.35.9",
      "104.24.247.122",
      "104.22.67.32"
    ]
  }
};

// ASN到运营商的映射
const ASN_TO_ISP = {
  // 电信
  '4134': 'CHINA_TELECOM',
  '4809': 'CHINA_TELECOM',
  // 联通
  '4837': 'CHINA_UNICOM', 
  '9929': 'CHINA_UNICOM',
  '4808': 'CHINA_UNICOM',
  // 移动
  '9808': 'CHINA_MOBILE',
  '56040': 'CHINA_MOBILE'
};

// 区域列表
const REGIONS = [
  'EAST',
  'NORTH', 
  'SOUTH',
  'CENTRAL',
  'SOUTHWEST',
  'NORTHWEST',
  'NORTHEAST'
];

// 错误类型定义
const ERRORS = {
  NO_IP: '无可用IP',
  UNKNOWN_ISP: '未知运营商',
  INVALID_REGION: '无效区域'
};

addEventListener('fetch', event => {
  event.respondWith(handleRequest(event.request));
});

async function handleRequest(request) {
  const clientInfo = {
    ip: request.headers.get('CF-Connecting-IP'),
    asn: request.cf.asn.toString(),
    region: request.cf.region,
    colo: request.cf.colo
  };

  try {
    const isp = determineISP(clientInfo.asn);
    const region = determineRegion(clientInfo);
    const bestIP = await selectBestIP(isp, region);

    return new Response(JSON.stringify({
      status: 'success',
      client: clientInfo,
      result: {
        isp: isp,
        region: region,
        ip: bestIP
      }
    }), {
      headers: {
        'content-type': 'application/json',
        'cache-control': 'max-age=300'
      }
    });
  } catch (error) {
    const status = error.message === ERRORS.NO_IP ? 503 : 500;
    return new Response(JSON.stringify({
      status: 'error',
      message: error.message,
      client: clientInfo
    }), {
      status: status,
      headers: { 'content-type': 'application/json' }
    });
  }
}

function determineISP(asn) {
  const isp = ASN_TO_ISP[asn];
  if (!isp) {
    throw new Error(ERRORS.UNKNOWN_ISP);
  }
  return isp;
}

function determineRegion(clientInfo) {
  const regionMap = {
    'SHA': 'EAST',   // 上海
    'BEJ': 'NORTH',  // 北京
    'GUD': 'SOUTH',  // 广东
    'HUB': 'CENTRAL' // 湖北
  };

  if (clientInfo.region && regionMap[clientInfo.region]) {
    return regionMap[clientInfo.region];
  }

  // 默认返回华东
  return 'EAST';
}

async function selectBestIP(isp, region) {
  let candidates = [];

  // 1. 优先选择同ISP同区域的IP
  if (IP_POOLS[isp] && IP_POOLS[isp][region] && IP_POOLS[isp][region].length > 0) {
    candidates = IP_POOLS[isp][region];
  }

  // 2. 如果没有找到,尝试同ISP其他区域
  if (candidates.length === 0 && IP_POOLS[isp]) {
    for (const r of REGIONS) {
      if (r !== region && IP_POOLS[isp][r] && IP_POOLS[isp][r].length > 0) {
        candidates = candidates.concat(IP_POOLS[isp][r]);
      }
    }
  }

  // 3. 如果还是没有,使用其他ISP的IP
  if (candidates.length === 0) {
    for (const otherIsp in IP_POOLS) {
      if (otherIsp !== isp && IP_POOLS[otherIsp][region] && IP_POOLS[otherIsp][region].length > 0) {
        candidates = candidates.concat(IP_POOLS[otherIsp][region]);
      }
    }
  }

  // 4. 如果还是没有找到可用IP,则抛出错误
  if (candidates.length === 0) {
    throw new Error(ERRORS.NO_IP);
  }

  // 随机选择一个IP,避免单点故障
  return candidates[Math.floor(Math.random() * candidates.length)];
}