// IP池配置 - 更新时间: 2024-12-20T19:30:32.610722
const IP_POOLS = {
  "CHINA_TELECOM": {
    "EAST": [
      "104.17.207.37",
      "104.19.66.254",
      "104.19.68.84",
      "104.18.3.241",
      "104.19.249.214",
      "172.65.23.222",
      "172.67.250.143",
      "104.25.173.73",
      "104.16.85.89",
      "172.67.86.241",
      "172.65.103.124",
      "104.27.6.12"
    ],
    "SOUTH": [
      "104.17.169.53",
      "104.16.30.229",
      "104.17.120.130",
      "104.17.178.16",
      "104.19.133.58",
      "104.22.57.25",
      "104.17.114.243",
      "104.16.46.64",
      "172.67.33.116",
      "104.16.222.16",
      "172.67.200.191",
      "104.21.220.132",
      "172.66.211.90",
      "172.66.166.6",
      "172.67.113.110",
      "104.20.251.113"
    ],
    "NORTH": [
      "104.17.5.189",
      "104.19.19.152",
      "104.19.110.121",
      "104.19.175.37",
      "104.19.122.140",
      "104.27.206.218",
      "104.24.211.47",
      "104.16.101.186",
      "104.20.84.151",
      "104.25.249.107"
    ],
    "CENTRAL": [
      "104.18.232.165",
      "104.16.136.36",
      "104.16.88.197",
      "104.17.38.40",
      "104.16.212.239",
      "104.16.141.194",
      "104.18.67.227",
      "104.21.203.28",
      "104.21.62.213",
      "172.65.150.212",
      "104.25.73.6",
      "104.25.40.241",
      "104.20.163.142"
    ],
    "SOUTHWEST": [
      "104.18.45.133",
      "104.17.124.28",
      "104.21.237.125",
      "104.16.115.15",
      "104.18.17.160",
      "172.65.211.72",
      "172.65.33.51",
      "104.16.32.136",
      "172.65.52.121",
      "172.67.80.148",
      "104.20.85.176",
      "172.65.126.78",
      "172.67.72.67",
      "104.25.115.150",
      "104.20.124.218",
      "104.25.71.255",
      "104.25.230.133",
      "104.19.71.47",
      "104.25.169.159",
      "104.20.246.218"
    ],
    "NORTHWEST": [
      "104.21.95.27",
      "172.65.11.189",
      "172.67.202.59",
      "104.25.3.254",
      "104.20.170.6",
      "172.67.88.102",
      "172.66.151.76",
      "104.25.224.115",
      "104.24.222.163",
      "172.66.171.105",
      "172.65.103.60",
      "104.20.225.174",
      "104.24.22.190"
    ],
    "NORTHEAST": [
      "104.16.240.125",
      "104.16.22.71",
      "104.17.148.174",
      "104.19.67.86",
      "104.21.63.159",
      "104.17.20.243",
      "104.19.254.54",
      "104.18.47.168",
      "104.16.176.62",
      "104.22.32.252",
      "104.25.222.14",
      "172.66.134.21",
      "104.18.8.234",
      "104.25.230.22",
      "104.27.20.234"
    ]
  },
  "CHINA_UNICOM": {
    "EAST": [
      "104.18.232.165",
      "104.17.207.37",
      "104.17.114.243",
      "172.67.202.59",
      "104.20.236.206",
      "104.18.87.48",
      "104.27.206.218",
      "172.67.80.148",
      "104.24.211.47",
      "104.25.222.14",
      "104.25.115.150",
      "104.24.22.190"
    ],
    "SOUTH": [
      "104.20.106.104",
      "104.27.40.96",
      "104.27.84.72",
      "104.20.97.133",
      "104.20.108.117",
      "104.17.246.172",
      "104.21.63.159",
      "172.65.211.72",
      "104.22.32.252"
    ],
    "NORTH": [
      "104.17.76.8",
      "104.16.30.229",
      "104.16.212.239",
      "104.20.235.98",
      "104.21.237.125",
      "104.19.122.140",
      "172.65.206.217",
      "172.66.134.21",
      "172.65.33.51",
      "104.20.84.151"
    ],
    "CENTRAL": [
      "104.16.240.125",
      "104.16.136.36",
      "104.20.133.186",
      "104.18.181.207",
      "172.65.93.167",
      "104.17.253.44",
      "104.19.110.121",
      "104.19.66.254",
      "104.17.169.53",
      "104.17.148.174",
      "172.65.11.189",
      "104.16.123.178",
      "104.19.249.214",
      "104.20.124.218",
      "172.66.151.76",
      "104.25.224.115",
      "104.16.101.186",
      "104.19.133.58"
    ],
    "SOUTHWEST": [
      "172.67.74.53",
      "104.19.67.86",
      "104.21.14.17",
      "104.16.141.194",
      "104.18.3.241",
      "104.27.49.170",
      "104.24.189.32",
      "104.18.45.133",
      "172.67.200.191",
      "104.17.178.16",
      "104.16.115.15",
      "172.65.52.121",
      "104.20.85.176",
      "104.25.71.255",
      "104.24.222.163",
      "104.20.246.218",
      "172.67.86.241"
    ],
    "NORTHWEST": [
      "104.19.93.255",
      "172.67.123.224",
      "104.19.68.84",
      "104.20.245.112",
      "104.25.224.77",
      "104.19.50.114",
      "104.16.22.71",
      "172.65.42.159",
      "104.22.3.66",
      "104.21.62.213",
      "104.20.170.6",
      "172.66.166.6",
      "104.25.73.6"
    ],
    "NORTHEAST": [
      "104.16.46.64",
      "104.16.222.16",
      "104.18.67.227",
      "104.18.47.168",
      "104.25.173.73",
      "104.27.6.12",
      "104.27.20.234"
    ]
  },
  "CHINA_MOBILE": {
    "EAST": [
      "104.17.61.9",
      "104.16.240.125",
      "104.25.224.77"
    ],
    "SOUTH": [
      "104.17.124.28",
      "104.27.40.96",
      "104.21.14.17",
      "172.67.74.53",
      "172.67.123.224",
      "104.22.34.24",
      "104.19.50.114",
      "104.22.57.25",
      "104.27.49.170",
      "104.25.94.26",
      "172.67.72.67"
    ],
    "NORTH": [
      "104.17.253.44",
      "104.16.88.197",
      "104.20.133.186",
      "104.16.176.62",
      "172.65.98.204",
      "104.16.123.178",
      "104.16.32.136",
      "172.65.150.212",
      "172.65.103.124",
      "104.20.251.113"
    ],
    "CENTRAL": [
      "104.18.181.207",
      "104.19.175.37",
      "104.18.87.48",
      "172.66.134.49",
      "172.65.42.159",
      "172.65.206.217",
      "104.25.3.254",
      "172.66.171.105"
    ],
    "SOUTHWEST": [
      "104.17.20.243",
      "104.20.106.104",
      "104.17.5.189",
      "104.24.141.58",
      "104.27.14.91",
      "104.20.235.98",
      "104.17.38.40",
      "104.21.203.28",
      "104.16.85.89",
      "172.65.126.78",
      "104.25.230.133",
      "104.19.71.47",
      "172.67.113.110",
      "104.20.225.174"
    ],
    "NORTHWEST": [
      "172.65.93.167",
      "104.27.84.72",
      "104.19.93.255",
      "104.20.108.117",
      "104.21.220.132"
    ],
    "NORTHEAST": [
      "104.21.95.27",
      "104.24.189.188",
      "104.22.3.66",
      "172.67.33.116",
      "104.20.236.206",
      "172.66.211.90"
    ]
  }
};

// ASN到运营商的映射
const ASN_TO_ISP = {
  // 电信
  '4134': 'CHINA_TELECOM',
  '4809': 'CHINA_TELECOM',
  // 联通
  '4837': 'CHINA_UNICOM', 
  '9929': 'CHINA_UNICOM',
  '4808': 'CHINA_UNICOM',
  // 移动
  '9808': 'CHINA_MOBILE',
  '56040': 'CHINA_MOBILE'
};

// 区域列表
const REGIONS = [
  'EAST',
  'NORTH', 
  'SOUTH',
  'CENTRAL',
  'SOUTHWEST',
  'NORTHWEST',
  'NORTHEAST'
];

// 错误类型定义
const ERRORS = {
  NO_IP: '无可用IP',
  UNKNOWN_ISP: '未知运营商',
  INVALID_REGION: '无效区域'
};

addEventListener('fetch', event => {
  event.respondWith(handleRequest(event.request));
});

async function handleRequest(request) {
  const clientInfo = {
    ip: request.headers.get('CF-Connecting-IP'),
    asn: request.cf.asn.toString(),
    region: request.cf.region,
    colo: request.cf.colo
  };

  try {
    const isp = determineISP(clientInfo.asn);
    const region = determineRegion(clientInfo);
    const bestIP = await selectBestIP(isp, region);

    return new Response(JSON.stringify({
      status: 'success',
      client: clientInfo,
      result: {
        isp: isp,
        region: region,
        ip: bestIP
      }
    }), {
      headers: {
        'content-type': 'application/json',
        'cache-control': 'max-age=300'
      }
    });
  } catch (error) {
    const status = error.message === ERRORS.NO_IP ? 503 : 500;
    return new Response(JSON.stringify({
      status: 'error',
      message: error.message,
      client: clientInfo
    }), {
      status: status,
      headers: { 'content-type': 'application/json' }
    });
  }
}

function determineISP(asn) {
  const isp = ASN_TO_ISP[asn];
  if (!isp) {
    throw new Error(ERRORS.UNKNOWN_ISP);
  }
  return isp;
}

function determineRegion(clientInfo) {
  const regionMap = {
    'SHA': 'EAST',   // 上海
    'BEJ': 'NORTH',  // 北京
    'GUD': 'SOUTH',  // 广东
    'HUB': 'CENTRAL' // 湖北
  };

  if (clientInfo.region && regionMap[clientInfo.region]) {
    return regionMap[clientInfo.region];
  }

  // 默认返回华东
  return 'EAST';
}

async function selectBestIP(isp, region) {
  let candidates = [];

  // 1. 优先选择同ISP同区域的IP
  if (IP_POOLS[isp] && IP_POOLS[isp][region] && IP_POOLS[isp][region].length > 0) {
    candidates = IP_POOLS[isp][region];
  }

  // 2. 如果没有找到,尝试同ISP其他区域
  if (candidates.length === 0 && IP_POOLS[isp]) {
    for (const r of REGIONS) {
      if (r !== region && IP_POOLS[isp][r] && IP_POOLS[isp][r].length > 0) {
        candidates = candidates.concat(IP_POOLS[isp][r]);
      }
    }
  }

  // 3. 如果还是没有,使用其他ISP的IP
  if (candidates.length === 0) {
    for (const otherIsp in IP_POOLS) {
      if (otherIsp !== isp && IP_POOLS[otherIsp][region] && IP_POOLS[otherIsp][region].length > 0) {
        candidates = candidates.concat(IP_POOLS[otherIsp][region]);
      }
    }
  }

  // 4. 如果还是没有找到可用IP,则抛出错误
  if (candidates.length === 0) {
    throw new Error(ERRORS.NO_IP);
  }

  // 随机选择一个IP,避免单点故障
  return candidates[Math.floor(Math.random() * candidates.length)];
}