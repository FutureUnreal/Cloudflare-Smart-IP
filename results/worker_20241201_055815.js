// IP池配置 - 更新时间: 2024-12-01T05:58:13.639343
const IP_POOLS = {
  "CHINA_TELECOM": {
    "EAST": [
      "104.16.177.199",
      "104.18.30.145",
      "172.65.213.252",
      "104.19.43.202",
      "104.19.94.44",
      "104.16.7.219",
      "104.16.21.13",
      "104.17.154.120",
      "172.65.1.126",
      "104.19.209.50",
      "172.65.37.200",
      "172.67.244.90",
      "104.25.246.207",
      "104.25.145.115",
      "104.25.232.243",
      "172.67.51.201",
      "172.67.230.138",
      "104.24.7.41",
      "104.25.108.35",
      "104.27.3.115"
    ],
    "SOUTH": [
      "104.19.18.61",
      "104.16.174.184",
      "104.17.158.69",
      "172.65.241.64",
      "104.18.172.114",
      "104.19.85.173",
      "104.18.41.24",
      "104.17.197.144",
      "172.65.36.98",
      "104.21.91.163",
      "104.22.78.111",
      "172.67.230.254",
      "104.21.198.154",
      "104.21.10.52",
      "104.25.222.182",
      "172.65.18.60",
      "172.67.8.116",
      "104.25.127.185",
      "104.17.216.53",
      "104.21.223.4"
    ],
    "NORTH": [
      "104.16.145.251",
      "104.18.159.7",
      "104.17.167.17",
      "172.65.14.52",
      "104.19.239.33",
      "104.21.80.252",
      "104.21.125.73",
      "104.21.97.173",
      "104.18.96.102",
      "104.18.122.136",
      "104.17.183.65",
      "104.19.146.34",
      "104.27.124.249",
      "104.24.128.92",
      "104.20.85.31",
      "104.20.83.87",
      "172.67.81.227",
      "104.25.23.148",
      "104.24.173.152",
      "172.65.162.233"
    ],
    "CENTRAL": [
      "104.16.99.26",
      "104.16.246.190",
      "104.17.233.100",
      "104.18.87.18",
      "104.16.165.192",
      "172.65.229.11",
      "104.19.57.15",
      "104.17.32.85",
      "104.17.222.229",
      "104.19.237.204",
      "104.21.35.43",
      "104.21.92.77",
      "172.67.197.83",
      "172.65.13.124",
      "104.24.225.18",
      "172.65.28.234",
      "104.21.16.158",
      "104.25.146.14",
      "104.20.145.146",
      "104.25.67.215"
    ],
    "SOUTHWEST": [
      "104.17.51.114",
      "104.19.198.226",
      "104.21.226.62",
      "104.17.45.9",
      "104.17.67.162",
      "104.19.73.31",
      "104.18.36.104",
      "104.19.252.8",
      "104.16.50.166",
      "172.67.160.47",
      "172.67.229.29",
      "104.20.1.8",
      "104.25.151.232",
      "104.20.13.244",
      "104.24.188.246",
      "104.27.199.140",
      "104.24.140.162",
      "172.66.172.112",
      "104.19.170.245",
      "104.20.171.24"
    ],
    "NORTHWEST": [
      "104.21.71.175",
      "172.67.208.221",
      "104.16.240.249",
      "104.17.188.35",
      "104.21.74.117",
      "104.16.98.39",
      "104.18.131.242",
      "104.16.19.92",
      "104.17.156.221",
      "103.21.246.206",
      "104.21.116.63",
      "172.65.62.192",
      "104.16.24.125",
      "104.16.237.232",
      "104.25.197.99",
      "104.25.172.0",
      "104.20.27.249",
      "104.27.51.92",
      "104.20.144.203",
      "104.20.87.236"
    ],
    "NORTHEAST": [
      "104.16.137.1",
      "104.18.108.216",
      "172.67.165.72",
      "104.16.207.189",
      "172.67.196.28",
      "172.67.137.145",
      "104.21.27.5",
      "104.21.114.133",
      "104.16.171.2",
      "104.17.193.71",
      "104.18.168.25",
      "104.22.59.51",
      "104.19.244.91",
      "104.17.136.79",
      "172.65.100.193",
      "172.65.128.192",
      "104.24.38.21",
      "172.65.151.157",
      "172.65.96.191",
      "104.20.238.223"
    ]
  },
  "CHINA_UNICOM": {
    "EAST": [
      "104.16.174.184",
      "104.18.87.18",
      "104.16.171.2",
      "104.16.165.192",
      "104.21.125.73",
      "104.19.43.202",
      "172.65.1.126",
      "104.17.156.221",
      "104.16.240.249",
      "104.16.24.125",
      "172.65.36.98",
      "172.67.230.254",
      "104.16.237.232",
      "104.21.10.52",
      "104.19.57.15",
      "172.67.229.29",
      "172.67.230.138",
      "172.67.81.227",
      "104.24.14.5",
      "104.24.180.121"
    ],
    "SOUTH": [
      "172.65.213.252",
      "104.18.96.102",
      "104.21.27.5",
      "104.21.74.117",
      "104.17.51.114",
      "172.67.137.145",
      "104.17.45.9",
      "104.21.226.62",
      "104.16.19.92",
      "104.22.59.51",
      "104.16.207.189",
      "104.18.131.242",
      "104.25.145.115",
      "104.22.78.111",
      "104.21.91.163",
      "104.24.128.92",
      "172.67.197.83",
      "172.65.18.60",
      "104.17.216.53",
      "104.21.16.158"
    ],
    "NORTH": [
      "104.16.145.251",
      "104.16.21.13",
      "172.65.241.64",
      "104.19.94.44",
      "104.17.67.162",
      "104.18.41.24",
      "104.17.136.79",
      "104.16.99.26",
      "104.19.244.91",
      "104.25.232.243",
      "104.19.239.33",
      "104.19.252.8",
      "104.21.92.77",
      "104.25.222.182",
      "104.20.83.87",
      "172.65.28.234",
      "104.25.108.35",
      "104.20.149.252",
      "172.66.169.5",
      "104.24.38.21"
    ],
    "CENTRAL": [
      "104.19.85.173",
      "104.21.97.173",
      "104.17.233.100",
      "104.18.159.7",
      "104.17.167.17",
      "104.16.137.1",
      "104.19.198.226",
      "104.17.222.229",
      "104.17.197.144",
      "104.17.158.69",
      "104.25.246.207",
      "104.21.198.154",
      "104.27.124.249",
      "104.20.85.31",
      "172.67.8.116",
      "104.25.127.185",
      "104.24.225.18",
      "104.24.7.41",
      "172.67.112.86",
      "104.25.146.14"
    ],
    "SOUTHWEST": [
      "172.65.229.11",
      "104.19.18.61",
      "104.21.114.133",
      "104.17.193.71",
      "104.18.122.136",
      "104.19.146.34",
      "172.66.158.164",
      "104.19.209.50",
      "104.18.30.145",
      "104.16.177.199",
      "172.65.13.124",
      "104.20.27.249",
      "104.24.8.63",
      "104.25.67.215",
      "104.19.237.204",
      "104.24.188.246",
      "104.24.255.211",
      "172.67.109.88",
      "104.16.67.40",
      "104.24.196.243"
    ],
    "NORTHWEST": [
      "172.65.14.52",
      "104.16.98.39",
      "104.17.32.85",
      "104.25.215.33",
      "104.17.142.127",
      "104.17.183.65",
      "104.16.7.219",
      "172.65.37.200",
      "172.67.51.201",
      "104.18.108.216",
      "172.67.160.47",
      "104.24.156.150",
      "104.20.221.2",
      "104.25.197.99",
      "104.18.60.62",
      "104.25.165.46",
      "104.22.13.133",
      "172.65.110.76",
      "172.67.244.90",
      "104.24.75.43"
    ],
    "NORTHEAST": [
      "104.17.154.120",
      "172.67.165.72",
      "104.18.36.104",
      "104.21.35.43",
      "172.65.62.192",
      "104.25.23.148",
      "172.65.128.192",
      "104.19.173.183",
      "172.66.172.112",
      "104.18.172.114",
      "104.20.143.212",
      "104.17.126.163",
      "104.17.188.35",
      "103.21.246.206",
      "104.17.90.171"
    ]
  },
  "CHINA_MOBILE": {
    "EAST": [
      "104.19.73.31",
      "104.16.67.40",
      "104.20.144.203",
      "104.18.60.62"
    ],
    "SOUTH": [
      "104.19.43.202"
    ],
    "NORTH": [
      "104.18.168.25",
      "104.21.116.63",
      "104.27.44.252"
    ],
    "CENTRAL": [
      "104.16.145.251",
      "104.16.246.190",
      "172.67.208.221",
      "104.27.59.91"
    ],
    "SOUTHWEST": [
      "104.24.156.150",
      "104.24.153.248",
      "172.67.33.157"
    ],
    "NORTHWEST": [
      "104.21.80.252",
      "104.27.0.60"
    ],
    "NORTHEAST": [
      "172.66.158.164",
      "104.25.215.33",
      "104.25.224.193",
      "104.24.36.116",
      "104.17.142.127",
      "104.21.223.4",
      "172.65.104.169"
    ]
  }
};

// ASN到运营商的映射
const ASN_TO_ISP = {
  // 电信
  '4134': 'CHINA_TELECOM',
  '4809': 'CHINA_TELECOM',
  // 联通
  '4837': 'CHINA_UNICOM', 
  '9929': 'CHINA_UNICOM',
  '4808': 'CHINA_UNICOM',
  // 移动
  '9808': 'CHINA_MOBILE',
  '56040': 'CHINA_MOBILE'
};

// 区域列表
const REGIONS = [
  'EAST',
  'NORTH', 
  'SOUTH',
  'CENTRAL',
  'SOUTHWEST',
  'NORTHWEST',
  'NORTHEAST'
];

// 错误类型定义
const ERRORS = {
  NO_IP: '无可用IP',
  UNKNOWN_ISP: '未知运营商',
  INVALID_REGION: '无效区域'
};

addEventListener('fetch', event => {
  event.respondWith(handleRequest(event.request));
});

async function handleRequest(request) {
  const clientInfo = {
    ip: request.headers.get('CF-Connecting-IP'),
    asn: request.cf.asn.toString(),
    region: request.cf.region,
    colo: request.cf.colo
  };

  try {
    const isp = determineISP(clientInfo.asn);
    const region = determineRegion(clientInfo);
    const bestIP = await selectBestIP(isp, region);

    return new Response(JSON.stringify({
      status: 'success',
      client: clientInfo,
      result: {
        isp: isp,
        region: region,
        ip: bestIP
      }
    }), {
      headers: {
        'content-type': 'application/json',
        'cache-control': 'max-age=300'
      }
    });
  } catch (error) {
    const status = error.message === ERRORS.NO_IP ? 503 : 500;
    return new Response(JSON.stringify({
      status: 'error',
      message: error.message,
      client: clientInfo
    }), {
      status: status,
      headers: { 'content-type': 'application/json' }
    });
  }
}

function determineISP(asn) {
  const isp = ASN_TO_ISP[asn];
  if (!isp) {
    throw new Error(ERRORS.UNKNOWN_ISP);
  }
  return isp;
}

function determineRegion(clientInfo) {
  const regionMap = {
    'SHA': 'EAST',   // 上海
    'BEJ': 'NORTH',  // 北京
    'GUD': 'SOUTH',  // 广东
    'HUB': 'CENTRAL' // 湖北
  };

  if (clientInfo.region && regionMap[clientInfo.region]) {
    return regionMap[clientInfo.region];
  }

  // 默认返回华东
  return 'EAST';
}

async function selectBestIP(isp, region) {
  let candidates = [];

  // 1. 优先选择同ISP同区域的IP
  if (IP_POOLS[isp] && IP_POOLS[isp][region] && IP_POOLS[isp][region].length > 0) {
    candidates = IP_POOLS[isp][region];
  }

  // 2. 如果没有找到,尝试同ISP其他区域
  if (candidates.length === 0 && IP_POOLS[isp]) {
    for (const r of REGIONS) {
      if (r !== region && IP_POOLS[isp][r] && IP_POOLS[isp][r].length > 0) {
        candidates = candidates.concat(IP_POOLS[isp][r]);
      }
    }
  }

  // 3. 如果还是没有,使用其他ISP的IP
  if (candidates.length === 0) {
    for (const otherIsp in IP_POOLS) {
      if (otherIsp !== isp && IP_POOLS[otherIsp][region] && IP_POOLS[otherIsp][region].length > 0) {
        candidates = candidates.concat(IP_POOLS[otherIsp][region]);
      }
    }
  }

  // 4. 如果还是没有找到可用IP,则抛出错误
  if (candidates.length === 0) {
    throw new Error(ERRORS.NO_IP);
  }

  // 随机选择一个IP,避免单点故障
  return candidates[Math.floor(Math.random() * candidates.length)];
}