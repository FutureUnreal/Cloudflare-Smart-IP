// IP池配置 - 更新时间: 2025-01-13T19:50:55.668488
const IP_POOLS = {
  "CHINA_TELECOM": {
    "EAST": [
      "104.18.204.195",
      "104.19.250.224",
      "104.18.29.59",
      "172.66.206.153",
      "104.25.130.193",
      "104.20.212.203",
      "104.25.155.226"
    ],
    "SOUTH": [
      "104.16.178.131",
      "104.16.69.190",
      "104.19.26.57",
      "104.18.172.132",
      "104.16.143.70",
      "104.16.219.65",
      "104.24.74.72",
      "104.21.88.254",
      "172.65.38.46",
      "104.20.175.66",
      "104.25.47.242",
      "104.25.120.179",
      "104.24.64.143",
      "104.20.205.245"
    ],
    "NORTH": [
      "104.17.20.241",
      "172.65.239.245",
      "104.16.174.81",
      "172.65.53.78",
      "104.21.105.228",
      "104.21.106.78",
      "172.65.56.81",
      "104.18.85.63",
      "172.67.203.136",
      "104.19.13.187",
      "104.17.196.126",
      "104.17.130.159",
      "104.16.120.226",
      "104.24.220.156",
      "104.27.87.50",
      "104.22.8.24",
      "104.27.66.192",
      "104.24.134.56",
      "104.24.40.184",
      "104.24.242.22"
    ],
    "CENTRAL": [
      "104.19.150.36",
      "104.18.94.208",
      "172.65.193.155",
      "104.19.31.206",
      "104.17.162.49",
      "104.22.50.196",
      "172.65.39.84",
      "104.18.14.16",
      "104.20.10.248",
      "172.65.125.88",
      "172.67.181.191",
      "104.21.13.139",
      "172.67.156.255",
      "104.21.49.105",
      "104.25.84.84"
    ],
    "SOUTHWEST": [
      "172.67.131.18",
      "104.19.201.151",
      "104.18.1.71",
      "104.18.9.106",
      "104.16.171.57",
      "172.65.206.88",
      "104.17.23.153",
      "104.21.3.36",
      "172.67.13.191",
      "104.21.3.10",
      "172.67.249.31",
      "172.65.113.1",
      "104.24.230.85",
      "104.25.250.3",
      "104.26.10.102",
      "104.24.10.18"
    ],
    "NORTHWEST": [
      "104.16.188.193",
      "104.18.106.144",
      "104.21.205.2",
      "104.21.39.5",
      "172.67.253.170",
      "104.16.73.50",
      "172.67.241.189",
      "104.17.39.39",
      "172.65.242.254",
      "104.17.189.57",
      "104.17.54.137",
      "104.19.139.250",
      "104.17.126.74",
      "104.17.132.195",
      "104.24.129.24",
      "104.20.35.142",
      "104.25.186.119",
      "172.66.139.31",
      "104.25.26.0",
      "104.25.146.107"
    ],
    "NORTHEAST": [
      "104.16.29.255",
      "104.19.125.189",
      "104.21.60.252",
      "104.21.5.142",
      "104.16.64.0",
      "104.17.14.137",
      "172.67.41.250",
      "104.17.129.221",
      "104.25.156.8",
      "104.25.197.239",
      "172.67.1.240",
      "172.65.124.7",
      "104.25.94.233",
      "104.27.2.111",
      "172.65.176.205"
    ]
  },
  "CHINA_UNICOM": {
    "EAST": [
      "104.21.220.175",
      "104.18.172.132",
      "104.21.5.142",
      "104.25.208.10",
      "172.65.235.199",
      "104.18.29.59",
      "172.65.125.88",
      "172.67.249.31",
      "172.65.124.7",
      "104.25.130.193",
      "172.65.113.1",
      "104.20.175.66",
      "104.25.250.3",
      "104.24.40.184",
      "104.26.10.102",
      "104.25.155.226",
      "172.65.126.23",
      "172.65.176.205"
    ],
    "SOUTH": [
      "104.19.125.189",
      "104.16.29.255",
      "104.20.78.114",
      "104.21.60.252",
      "104.17.103.8",
      "104.21.105.228",
      "104.18.1.71",
      "172.65.206.88",
      "104.17.14.137",
      "104.20.35.142",
      "104.24.220.156",
      "172.66.139.31",
      "104.20.212.203",
      "104.27.57.158",
      "104.25.139.97",
      "104.24.64.143",
      "104.20.205.245"
    ],
    "NORTH": [
      "104.16.64.0",
      "104.18.94.208",
      "172.65.239.245",
      "104.27.32.148",
      "104.17.170.199",
      "172.67.241.189",
      "172.66.200.103",
      "104.19.26.57",
      "104.25.156.8",
      "104.24.129.24",
      "104.24.230.85",
      "104.25.146.107",
      "104.24.1.96",
      "104.24.134.56",
      "172.65.157.143",
      "104.27.2.111"
    ],
    "CENTRAL": [
      "172.65.53.78",
      "104.19.13.187",
      "104.21.39.5",
      "172.65.193.155",
      "172.67.131.18",
      "104.16.143.70",
      "104.19.31.206",
      "104.18.9.106",
      "104.17.162.49",
      "104.24.2.68",
      "104.16.120.226",
      "172.65.39.84",
      "172.66.206.153",
      "104.17.126.74",
      "104.24.74.72",
      "172.65.38.46",
      "172.67.13.191",
      "104.21.49.105",
      "104.27.66.192",
      "104.25.120.179"
    ],
    "SOUTHWEST": [
      "104.17.114.203",
      "104.18.106.144",
      "104.21.106.78",
      "104.16.178.131",
      "104.16.171.57",
      "104.19.250.224",
      "104.22.73.140",
      "104.21.13.139",
      "104.17.189.57",
      "172.67.1.240",
      "104.21.3.10",
      "172.67.181.191",
      "104.25.26.0"
    ],
    "NORTHWEST": [
      "104.17.196.126",
      "104.18.204.195",
      "104.17.130.159",
      "104.17.39.39",
      "104.20.10.248",
      "172.67.203.136",
      "104.17.20.241",
      "172.65.242.254",
      "104.22.50.196",
      "104.19.97.63",
      "104.27.87.50",
      "104.25.94.233"
    ],
    "NORTHEAST": [
      "104.16.73.50",
      "104.27.118.204",
      "104.17.23.153",
      "104.18.14.16",
      "104.25.197.239",
      "104.17.129.221",
      "104.24.242.22"
    ]
  },
  "CHINA_MOBILE": {
    "EAST": [
      "104.20.78.114",
      "104.21.220.175"
    ],
    "SOUTH": [
      "104.19.150.36",
      "104.17.103.8",
      "104.24.2.68",
      "104.16.174.81",
      "104.16.188.193",
      "172.65.56.81",
      "104.19.201.151",
      "172.67.186.67",
      "104.19.139.250",
      "104.25.186.119",
      "104.22.8.24"
    ],
    "NORTH": [
      "172.65.189.250",
      "104.21.8.0",
      "172.66.200.103",
      "172.65.235.199",
      "104.16.69.190",
      "104.16.219.65",
      "104.24.10.18",
      "104.25.84.84"
    ],
    "CENTRAL": [
      "104.17.54.137",
      "104.22.73.140",
      "104.25.47.242"
    ],
    "SOUTHWEST": [
      "104.18.85.63",
      "104.17.170.199",
      "172.67.253.170"
    ],
    "NORTHWEST": [
      "104.27.32.148"
    ],
    "NORTHEAST": [
      "172.67.41.250",
      "104.19.97.63",
      "104.24.221.156"
    ]
  }
};

// ASN到运营商的映射
const ASN_TO_ISP = {
  // 电信
  '4134': 'CHINA_TELECOM',
  '4809': 'CHINA_TELECOM',
  // 联通
  '4837': 'CHINA_UNICOM', 
  '9929': 'CHINA_UNICOM',
  '4808': 'CHINA_UNICOM',
  // 移动
  '9808': 'CHINA_MOBILE',
  '56040': 'CHINA_MOBILE'
};

// 区域列表
const REGIONS = [
  'EAST',
  'NORTH', 
  'SOUTH',
  'CENTRAL',
  'SOUTHWEST',
  'NORTHWEST',
  'NORTHEAST'
];

// 错误类型定义
const ERRORS = {
  NO_IP: '无可用IP',
  UNKNOWN_ISP: '未知运营商',
  INVALID_REGION: '无效区域'
};

addEventListener('fetch', event => {
  event.respondWith(handleRequest(event.request));
});

async function handleRequest(request) {
  const clientInfo = {
    ip: request.headers.get('CF-Connecting-IP'),
    asn: request.cf.asn.toString(),
    region: request.cf.region,
    colo: request.cf.colo
  };

  try {
    const isp = determineISP(clientInfo.asn);
    const region = determineRegion(clientInfo);
    const bestIP = await selectBestIP(isp, region);

    return new Response(JSON.stringify({
      status: 'success',
      client: clientInfo,
      result: {
        isp: isp,
        region: region,
        ip: bestIP
      }
    }), {
      headers: {
        'content-type': 'application/json',
        'cache-control': 'max-age=300'
      }
    });
  } catch (error) {
    const status = error.message === ERRORS.NO_IP ? 503 : 500;
    return new Response(JSON.stringify({
      status: 'error',
      message: error.message,
      client: clientInfo
    }), {
      status: status,
      headers: { 'content-type': 'application/json' }
    });
  }
}

function determineISP(asn) {
  const isp = ASN_TO_ISP[asn];
  if (!isp) {
    throw new Error(ERRORS.UNKNOWN_ISP);
  }
  return isp;
}

function determineRegion(clientInfo) {
  const regionMap = {
    'SHA': 'EAST',   // 上海
    'BEJ': 'NORTH',  // 北京
    'GUD': 'SOUTH',  // 广东
    'HUB': 'CENTRAL' // 湖北
  };

  if (clientInfo.region && regionMap[clientInfo.region]) {
    return regionMap[clientInfo.region];
  }

  // 默认返回华东
  return 'EAST';
}

async function selectBestIP(isp, region) {
  let candidates = [];

  // 1. 优先选择同ISP同区域的IP
  if (IP_POOLS[isp] && IP_POOLS[isp][region] && IP_POOLS[isp][region].length > 0) {
    candidates = IP_POOLS[isp][region];
  }

  // 2. 如果没有找到,尝试同ISP其他区域
  if (candidates.length === 0 && IP_POOLS[isp]) {
    for (const r of REGIONS) {
      if (r !== region && IP_POOLS[isp][r] && IP_POOLS[isp][r].length > 0) {
        candidates = candidates.concat(IP_POOLS[isp][r]);
      }
    }
  }

  // 3. 如果还是没有,使用其他ISP的IP
  if (candidates.length === 0) {
    for (const otherIsp in IP_POOLS) {
      if (otherIsp !== isp && IP_POOLS[otherIsp][region] && IP_POOLS[otherIsp][region].length > 0) {
        candidates = candidates.concat(IP_POOLS[otherIsp][region]);
      }
    }
  }

  // 4. 如果还是没有找到可用IP,则抛出错误
  if (candidates.length === 0) {
    throw new Error(ERRORS.NO_IP);
  }

  // 随机选择一个IP,避免单点故障
  return candidates[Math.floor(Math.random() * candidates.length)];
}