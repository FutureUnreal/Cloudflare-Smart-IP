// IP池配置 - 更新时间: 2024-12-10T19:36:10.438198
const IP_POOLS = {
  "CHINA_TELECOM": {
    "EAST": [
      "104.17.34.1",
      "104.16.148.82",
      "104.18.210.70",
      "104.21.77.224",
      "104.18.61.11",
      "104.20.172.216",
      "104.27.98.249",
      "104.25.56.142",
      "172.65.127.54",
      "104.27.1.89",
      "104.21.21.87"
    ],
    "SOUTH": [
      "104.16.197.236",
      "104.19.238.216",
      "104.19.42.73",
      "104.19.205.174",
      "104.22.26.136",
      "104.21.13.220",
      "172.67.153.243",
      "104.24.138.229",
      "172.65.35.206",
      "104.20.163.10",
      "172.65.78.23",
      "172.67.141.145",
      "172.66.142.4",
      "104.20.5.88",
      "104.19.148.169"
    ],
    "NORTH": [
      "104.17.255.2",
      "104.19.102.66",
      "104.19.149.209",
      "104.18.56.125",
      "172.65.241.131",
      "172.65.62.161",
      "172.67.169.155",
      "104.21.11.154",
      "104.18.216.65",
      "104.19.19.35",
      "104.16.18.103",
      "104.16.121.129",
      "104.19.132.148",
      "104.27.66.180",
      "104.27.40.210",
      "172.66.137.161",
      "104.20.53.240"
    ],
    "CENTRAL": [
      "104.19.122.77",
      "104.17.215.106",
      "172.65.228.183",
      "104.18.79.1",
      "172.67.161.48",
      "104.25.39.42",
      "104.21.12.217",
      "104.20.130.178",
      "172.67.117.161",
      "172.66.170.214",
      "104.21.77.19",
      "104.20.97.71",
      "104.25.140.236",
      "104.25.249.157",
      "104.24.12.59"
    ],
    "SOUTHWEST": [
      "104.17.230.122",
      "104.18.62.203",
      "104.16.47.155",
      "172.67.43.191",
      "104.21.201.10",
      "104.25.35.47",
      "104.16.81.105"
    ],
    "NORTHWEST": [
      "104.17.4.19",
      "104.19.230.204",
      "172.65.252.96",
      "104.16.167.192",
      "104.16.198.201",
      "104.17.154.210",
      "104.18.251.84",
      "104.18.102.78",
      "104.16.49.129",
      "104.16.208.82",
      "104.16.83.117",
      "172.67.84.32",
      "104.17.167.113",
      "104.27.41.138",
      "104.25.65.184"
    ],
    "NORTHEAST": [
      "104.16.80.225",
      "172.65.55.7",
      "104.19.81.129",
      "104.21.30.149",
      "104.19.61.125",
      "188.114.97.52",
      "104.17.222.119",
      "172.65.14.154",
      "104.19.44.72",
      "104.16.147.185",
      "104.18.4.50",
      "104.18.120.224",
      "104.20.53.40",
      "104.24.141.109",
      "104.26.5.134",
      "104.24.214.23",
      "104.18.59.37"
    ]
  },
  "CHINA_UNICOM": {
    "EAST": [
      "104.17.184.22",
      "188.114.97.52",
      "104.16.80.225",
      "104.19.102.66",
      "172.65.241.131",
      "104.16.198.201",
      "172.65.62.161",
      "104.19.132.148",
      "104.27.193.250",
      "104.25.100.194",
      "172.67.71.121",
      "104.18.4.50",
      "172.67.43.191",
      "172.66.170.214",
      "104.21.77.19",
      "104.25.140.236",
      "104.19.148.169"
    ],
    "SOUTH": [
      "104.17.34.1",
      "104.21.51.11",
      "104.17.101.28",
      "104.19.44.72",
      "104.19.42.73",
      "104.19.157.40",
      "104.16.148.82",
      "104.16.105.48",
      "172.67.154.251",
      "104.22.72.135",
      "104.17.215.106",
      "104.25.39.42",
      "104.20.163.10",
      "104.20.5.88",
      "104.18.56.125"
    ],
    "NORTH": [
      "104.19.168.220",
      "104.27.100.173",
      "104.19.61.125",
      "104.19.122.77",
      "104.25.228.45",
      "104.27.40.210",
      "104.20.53.40",
      "104.20.53.240"
    ],
    "CENTRAL": [
      "104.27.35.193",
      "104.18.127.35",
      "104.24.77.98",
      "104.22.26.136",
      "104.25.55.42",
      "104.19.185.132",
      "104.18.216.65",
      "104.18.251.84",
      "104.24.214.23",
      "104.25.249.157",
      "104.27.41.138"
    ],
    "SOUTHWEST": [
      "104.19.255.44",
      "104.16.18.103",
      "104.27.58.252",
      "104.21.6.242",
      "104.24.92.112",
      "104.21.11.154",
      "104.19.205.174",
      "104.25.149.244",
      "104.19.28.187",
      "104.19.19.35",
      "104.16.197.236",
      "104.27.66.180",
      "172.67.117.161",
      "104.24.138.229",
      "104.16.208.82",
      "104.18.79.1",
      "104.17.4.19",
      "172.67.84.32",
      "104.24.12.59",
      "104.16.81.105"
    ],
    "NORTHWEST": [
      "104.19.149.209",
      "104.18.86.5",
      "104.17.164.145",
      "172.65.55.7",
      "104.25.229.255",
      "104.17.222.119",
      "104.26.5.134",
      "104.25.56.142",
      "104.16.83.117",
      "172.66.142.4",
      "172.67.161.48",
      "172.67.93.183",
      "172.65.14.154",
      "172.65.35.206",
      "104.24.141.109",
      "172.67.224.15",
      "104.27.43.18"
    ],
    "NORTHEAST": [
      "104.16.121.129",
      "104.18.62.203",
      "172.65.127.45",
      "172.67.81.241",
      "104.18.102.78",
      "104.21.13.220",
      "172.67.241.189"
    ]
  },
  "CHINA_MOBILE": {
    "EAST": [
      "104.18.159.65",
      "104.16.147.185",
      "172.66.167.5",
      "104.17.230.122",
      "104.19.185.132",
      "104.27.58.252",
      "104.27.98.249",
      "172.67.153.243",
      "104.21.21.87",
      "104.17.167.113",
      "104.18.120.224"
    ],
    "SOUTH": [
      "104.17.210.150",
      "104.21.51.11",
      "172.65.196.164",
      "104.20.161.183",
      "104.19.28.187",
      "104.21.201.10",
      "104.25.65.184"
    ],
    "NORTH": [
      "172.65.127.45",
      "172.65.78.23",
      "172.67.141.145",
      "104.18.59.37"
    ],
    "CENTRAL": [
      "104.17.154.210",
      "172.67.81.241",
      "172.65.127.54",
      "172.67.224.15"
    ],
    "SOUTHWEST": [
      "172.65.252.96",
      "172.65.228.183",
      "172.65.234.121",
      "104.24.92.112",
      "104.20.93.28",
      "104.18.41.120",
      "104.20.172.216",
      "172.66.137.161",
      "104.19.230.204"
    ],
    "NORTHWEST": [
      "104.19.168.220",
      "104.25.228.45"
    ],
    "NORTHEAST": [
      "104.17.101.28",
      "104.16.167.192",
      "104.16.105.48",
      "104.19.238.216",
      "104.19.255.44",
      "104.16.49.129",
      "104.21.12.217",
      "104.24.77.98",
      "104.25.229.255",
      "104.18.157.113",
      "104.27.43.18",
      "104.25.35.47"
    ]
  }
};

// ASN到运营商的映射
const ASN_TO_ISP = {
  // 电信
  '4134': 'CHINA_TELECOM',
  '4809': 'CHINA_TELECOM',
  // 联通
  '4837': 'CHINA_UNICOM', 
  '9929': 'CHINA_UNICOM',
  '4808': 'CHINA_UNICOM',
  // 移动
  '9808': 'CHINA_MOBILE',
  '56040': 'CHINA_MOBILE'
};

// 区域列表
const REGIONS = [
  'EAST',
  'NORTH', 
  'SOUTH',
  'CENTRAL',
  'SOUTHWEST',
  'NORTHWEST',
  'NORTHEAST'
];

// 错误类型定义
const ERRORS = {
  NO_IP: '无可用IP',
  UNKNOWN_ISP: '未知运营商',
  INVALID_REGION: '无效区域'
};

addEventListener('fetch', event => {
  event.respondWith(handleRequest(event.request));
});

async function handleRequest(request) {
  const clientInfo = {
    ip: request.headers.get('CF-Connecting-IP'),
    asn: request.cf.asn.toString(),
    region: request.cf.region,
    colo: request.cf.colo
  };

  try {
    const isp = determineISP(clientInfo.asn);
    const region = determineRegion(clientInfo);
    const bestIP = await selectBestIP(isp, region);

    return new Response(JSON.stringify({
      status: 'success',
      client: clientInfo,
      result: {
        isp: isp,
        region: region,
        ip: bestIP
      }
    }), {
      headers: {
        'content-type': 'application/json',
        'cache-control': 'max-age=300'
      }
    });
  } catch (error) {
    const status = error.message === ERRORS.NO_IP ? 503 : 500;
    return new Response(JSON.stringify({
      status: 'error',
      message: error.message,
      client: clientInfo
    }), {
      status: status,
      headers: { 'content-type': 'application/json' }
    });
  }
}

function determineISP(asn) {
  const isp = ASN_TO_ISP[asn];
  if (!isp) {
    throw new Error(ERRORS.UNKNOWN_ISP);
  }
  return isp;
}

function determineRegion(clientInfo) {
  const regionMap = {
    'SHA': 'EAST',   // 上海
    'BEJ': 'NORTH',  // 北京
    'GUD': 'SOUTH',  // 广东
    'HUB': 'CENTRAL' // 湖北
  };

  if (clientInfo.region && regionMap[clientInfo.region]) {
    return regionMap[clientInfo.region];
  }

  // 默认返回华东
  return 'EAST';
}

async function selectBestIP(isp, region) {
  let candidates = [];

  // 1. 优先选择同ISP同区域的IP
  if (IP_POOLS[isp] && IP_POOLS[isp][region] && IP_POOLS[isp][region].length > 0) {
    candidates = IP_POOLS[isp][region];
  }

  // 2. 如果没有找到,尝试同ISP其他区域
  if (candidates.length === 0 && IP_POOLS[isp]) {
    for (const r of REGIONS) {
      if (r !== region && IP_POOLS[isp][r] && IP_POOLS[isp][r].length > 0) {
        candidates = candidates.concat(IP_POOLS[isp][r]);
      }
    }
  }

  // 3. 如果还是没有,使用其他ISP的IP
  if (candidates.length === 0) {
    for (const otherIsp in IP_POOLS) {
      if (otherIsp !== isp && IP_POOLS[otherIsp][region] && IP_POOLS[otherIsp][region].length > 0) {
        candidates = candidates.concat(IP_POOLS[otherIsp][region]);
      }
    }
  }

  // 4. 如果还是没有找到可用IP,则抛出错误
  if (candidates.length === 0) {
    throw new Error(ERRORS.NO_IP);
  }

  // 随机选择一个IP,避免单点故障
  return candidates[Math.floor(Math.random() * candidates.length)];
}